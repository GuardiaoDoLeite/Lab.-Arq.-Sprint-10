
Sprint 10 - Andre - Mestre.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  00002656  000026ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002656  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000022f  00800142  00800142  0000272c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000272c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002788  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  000027c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ed8  00000000  00000000  000028b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000891  00000000  00000000  00003790  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ec2  00000000  00000000  00004021  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000438  00000000  00000000  00004ee4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006cf  00000000  00000000  0000531c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008e1  00000000  00000000  000059eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  000062cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
       4:	0c 94 ac 01 	jmp	0x358	; 0x358 <__vector_1>
       8:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
       c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      14:	0c 94 e2 01 	jmp	0x3c4	; 0x3c4 <__vector_5>
      18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      38:	0c 94 43 01 	jmp	0x286	; 0x286 <__vector_14>
      3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      48:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      54:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
      68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
      e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
      f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
     248:	11 24       	eor	r1, r1
     24a:	1f be       	out	0x3f, r1	; 63
     24c:	cf ef       	ldi	r28, 0xFF	; 255
     24e:	d8 e0       	ldi	r29, 0x08	; 8
     250:	de bf       	out	0x3e, r29	; 62
     252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
     254:	11 e0       	ldi	r17, 0x01	; 1
     256:	a0 e0       	ldi	r26, 0x00	; 0
     258:	b1 e0       	ldi	r27, 0x01	; 1
     25a:	e6 e5       	ldi	r30, 0x56	; 86
     25c:	f6 e2       	ldi	r31, 0x26	; 38
     25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
     260:	05 90       	lpm	r0, Z+
     262:	0d 92       	st	X+, r0
     264:	a2 34       	cpi	r26, 0x42	; 66
     266:	b1 07       	cpc	r27, r17
     268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
     26a:	23 e0       	ldi	r18, 0x03	; 3
     26c:	a2 e4       	ldi	r26, 0x42	; 66
     26e:	b1 e0       	ldi	r27, 0x01	; 1
     270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
     272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
     274:	a1 37       	cpi	r26, 0x71	; 113
     276:	b2 07       	cpc	r27, r18
     278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
     27a:	0e 94 be 04 	call	0x97c	; 0x97c <main>
     27e:	0c 94 29 13 	jmp	0x2652	; 0x2652 <_exit>

00000282 <__bad_interrupt>:
     282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <__vector_14>:
//-------------------------------------------------------------------------------------------------------------------------------------------------

// Interrupções

ISR(TIMER0_COMPA_vect) //Interrupção do TC0 a cada 1ms
{
     286:	1f 92       	push	r1
     288:	0f 92       	push	r0
     28a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     28e:	0f 92       	push	r0
     290:	11 24       	eor	r1, r1
     292:	2f 93       	push	r18
     294:	3f 93       	push	r19
     296:	4f 93       	push	r20
     298:	5f 93       	push	r21
     29a:	6f 93       	push	r22
     29c:	7f 93       	push	r23
     29e:	8f 93       	push	r24
     2a0:	9f 93       	push	r25
     2a2:	af 93       	push	r26
     2a4:	bf 93       	push	r27
     2a6:	ef 93       	push	r30
     2a8:	ff 93       	push	r31
     2aa:	cf 93       	push	r28
     2ac:	df 93       	push	r29
     2ae:	cd b7       	in	r28, 0x3d	; 61
     2b0:	de b7       	in	r29, 0x3e	; 62
	tempo_1ms++;
     2b2:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     2b6:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     2ba:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     2be:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     2c2:	01 96       	adiw	r24, 0x01	; 1
     2c4:	a1 1d       	adc	r26, r1
     2c6:	b1 1d       	adc	r27, r1
     2c8:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <tempo_1ms>
     2cc:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <tempo_1ms+0x1>
     2d0:	a0 93 46 01 	sts	0x0146, r26	; 0x800146 <tempo_1ms+0x2>
     2d4:	b0 93 47 01 	sts	0x0147, r27	; 0x800147 <tempo_1ms+0x3>
	if((tempo_1ms%500)==0){ //Verdadeiro a cada 500ms
     2d8:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     2dc:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     2e0:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     2e4:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     2e8:	24 ef       	ldi	r18, 0xF4	; 244
     2ea:	31 e0       	ldi	r19, 0x01	; 1
     2ec:	40 e0       	ldi	r20, 0x00	; 0
     2ee:	50 e0       	ldi	r21, 0x00	; 0
     2f0:	bc 01       	movw	r22, r24
     2f2:	cd 01       	movw	r24, r26
     2f4:	0e 94 ea 0f 	call	0x1fd4	; 0x1fd4 <__udivmodsi4>
     2f8:	dc 01       	movw	r26, r24
     2fa:	cb 01       	movw	r24, r22
     2fc:	89 2b       	or	r24, r25
     2fe:	8a 2b       	or	r24, r26
     300:	8b 2b       	or	r24, r27
     302:	69 f4       	brne	.+26     	; 0x31e <__vector_14+0x98>
		flag_500ms = 1;
     304:	81 e0       	ldi	r24, 0x01	; 1
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	a0 e0       	ldi	r26, 0x00	; 0
     30a:	b0 e0       	ldi	r27, 0x00	; 0
     30c:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <flag_500ms>
     310:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <flag_500ms+0x1>
     314:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <flag_500ms+0x2>
     318:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <flag_500ms+0x3>
	}
	else{
		flag_500ms = 0;
	}
}
     31c:	08 c0       	rjmp	.+16     	; 0x32e <__vector_14+0xa8>
	tempo_1ms++;
	if((tempo_1ms%500)==0){ //Verdadeiro a cada 500ms
		flag_500ms = 1;
	}
	else{
		flag_500ms = 0;
     31e:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <flag_500ms>
     322:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <flag_500ms+0x1>
     326:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <flag_500ms+0x2>
     32a:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <flag_500ms+0x3>
	}
}
     32e:	00 00       	nop
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	ff 91       	pop	r31
     336:	ef 91       	pop	r30
     338:	bf 91       	pop	r27
     33a:	af 91       	pop	r26
     33c:	9f 91       	pop	r25
     33e:	8f 91       	pop	r24
     340:	7f 91       	pop	r23
     342:	6f 91       	pop	r22
     344:	5f 91       	pop	r21
     346:	4f 91       	pop	r20
     348:	3f 91       	pop	r19
     34a:	2f 91       	pop	r18
     34c:	0f 90       	pop	r0
     34e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     352:	0f 90       	pop	r0
     354:	1f 90       	pop	r1
     356:	18 95       	reti

00000358 <__vector_1>:

ISR(INT0_vect)//Interrupção relacionada ao pino PD3
{
     358:	1f 92       	push	r1
     35a:	0f 92       	push	r0
     35c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     360:	0f 92       	push	r0
     362:	11 24       	eor	r1, r1
     364:	2f 93       	push	r18
     366:	3f 93       	push	r19
     368:	4f 93       	push	r20
     36a:	5f 93       	push	r21
     36c:	6f 93       	push	r22
     36e:	7f 93       	push	r23
     370:	8f 93       	push	r24
     372:	9f 93       	push	r25
     374:	af 93       	push	r26
     376:	bf 93       	push	r27
     378:	ef 93       	push	r30
     37a:	ff 93       	push	r31
     37c:	cf 93       	push	r28
     37e:	df 93       	push	r29
     380:	cd b7       	in	r28, 0x3d	; 61
     382:	de b7       	in	r29, 0x3e	; 62
	//--Alteração das variáveis correspondentes a inteligência do contador de carros em função dos pulsos aplicados na porta PD1 ---------------------
	n_carros++;
     384:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <n_carros>
     388:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <n_carros+0x1>
     38c:	01 96       	adiw	r24, 0x01	; 1
     38e:	90 93 62 01 	sts	0x0162, r25	; 0x800162 <n_carros+0x1>
     392:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <n_carros>
	carros_por_minuto();
     396:	0e 94 4f 08 	call	0x109e	; 0x109e <carros_por_minuto>
}
     39a:	00 00       	nop
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	ff 91       	pop	r31
     3a2:	ef 91       	pop	r30
     3a4:	bf 91       	pop	r27
     3a6:	af 91       	pop	r26
     3a8:	9f 91       	pop	r25
     3aa:	8f 91       	pop	r24
     3ac:	7f 91       	pop	r23
     3ae:	6f 91       	pop	r22
     3b0:	5f 91       	pop	r21
     3b2:	4f 91       	pop	r20
     3b4:	3f 91       	pop	r19
     3b6:	2f 91       	pop	r18
     3b8:	0f 90       	pop	r0
     3ba:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     3be:	0f 90       	pop	r0
     3c0:	1f 90       	pop	r1
     3c2:	18 95       	reti

000003c4 <__vector_5>:

ISR(PCINT2_vect) // Interrupção das portas PD4, PD5 e PD6 que representam os botões de seleção
{
     3c4:	1f 92       	push	r1
     3c6:	0f 92       	push	r0
     3c8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     3cc:	0f 92       	push	r0
     3ce:	11 24       	eor	r1, r1
     3d0:	2f 93       	push	r18
     3d2:	3f 93       	push	r19
     3d4:	4f 93       	push	r20
     3d6:	5f 93       	push	r21
     3d8:	6f 93       	push	r22
     3da:	7f 93       	push	r23
     3dc:	8f 93       	push	r24
     3de:	9f 93       	push	r25
     3e0:	af 93       	push	r26
     3e2:	bf 93       	push	r27
     3e4:	ef 93       	push	r30
     3e6:	ff 93       	push	r31
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	cd b7       	in	r28, 0x3d	; 61
     3ee:	de b7       	in	r29, 0x3e	; 62
	
	
		
	// Botao de seleção de estado
	if(!(PIND & (1<<6)))
     3f0:	89 e2       	ldi	r24, 0x29	; 41
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	fc 01       	movw	r30, r24
     3f6:	80 81       	ld	r24, Z
     3f8:	88 2f       	mov	r24, r24
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	80 74       	andi	r24, 0x40	; 64
     3fe:	99 27       	eor	r25, r25
     400:	89 2b       	or	r24, r25
     402:	09 f0       	breq	.+2      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     404:	79 c0       	rjmp	.+242    	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
	{
		selecao++;
     406:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     40a:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     40e:	01 96       	adiw	r24, 0x01	; 1
     410:	90 93 5e 01 	sts	0x015E, r25	; 0x80015e <selecao+0x1>
     414:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <selecao>
		
		if (selecao == 0)
     418:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     41c:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     420:	89 2b       	or	r24, r25
     422:	b1 f4       	brne	.+44     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
		{
			USART_Transmit(amarelo);
     424:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     428:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     42c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     430:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     434:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     438:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho,amarelo,verde);
     43c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     440:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     444:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     448:	42 2f       	mov	r20, r18
     44a:	69 2f       	mov	r22, r25
     44c:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
		if (selecao == 1)
     450:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     454:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     458:	01 97       	sbiw	r24, 0x01	; 1
     45a:	b1 f4       	brne	.+44     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
		{
			USART_Transmit(amarelo);
     45c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     460:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     464:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     468:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     46c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     470:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho,amarelo,verde);
     474:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     478:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     47c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     480:	42 2f       	mov	r20, r18
     482:	69 2f       	mov	r22, r25
     484:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
		if (selecao == 2)
     488:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     48c:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     490:	02 97       	sbiw	r24, 0x02	; 2
     492:	b1 f4       	brne	.+44     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
		{
			USART_Transmit(amarelo);
     494:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     498:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     49c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4a0:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     4a4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     4a8:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho,amarelo,verde);
     4ac:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     4b0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     4b4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4b8:	42 2f       	mov	r20, r18
     4ba:	69 2f       	mov	r22, r25
     4bc:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
		if (selecao == 3)
     4c0:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     4c4:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     4c8:	03 97       	sbiw	r24, 0x03	; 3
     4ca:	b1 f4       	brne	.+44     	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
		{
			USART_Transmit(amarelo);
     4cc:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     4d0:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     4d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4d8:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     4dc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     4e0:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho,amarelo,verde);
     4e4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     4e8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     4ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4f0:	42 2f       	mov	r20, r18
     4f2:	69 2f       	mov	r22, r25
     4f4:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
		
	}
	
	if (selecao > 3)
     4f8:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     4fc:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     500:	04 97       	sbiw	r24, 0x04	; 4
     502:	d4 f0       	brlt	.+52     	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
	{
		selecao = 0;
     504:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <selecao+0x1>
     508:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <selecao>
		USART_Transmit(amarelo);
     50c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     510:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
		USART_Transmit(vermelho);
     514:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     518:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
		USART_Transmit(verde);
     51c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     520:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
		LCD(vermelho,amarelo,verde);
     524:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     528:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     52c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     530:	42 2f       	mov	r20, r18
     532:	69 2f       	mov	r22, r25
     534:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
	}
	
	
	// Botão para aumentar o tempo
	if(!(PIND & (1<<4)))
     538:	89 e2       	ldi	r24, 0x29	; 41
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	fc 01       	movw	r30, r24
     53e:	80 81       	ld	r24, Z
     540:	88 2f       	mov	r24, r24
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	80 71       	andi	r24, 0x10	; 16
     546:	99 27       	eor	r25, r25
     548:	89 2b       	or	r24, r25
     54a:	09 f0       	breq	.+2      	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
     54c:	bd c0       	rjmp	.+378    	; 0x6c8 <__EEPROM_REGION_LENGTH__+0x2c8>
	{
		if (selecao == 0)	// Aumenta o tempo do vermelho
     54e:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     552:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     556:	89 2b       	or	r24, r25
     558:	19 f5       	brne	.+70     	; 0x5a0 <__EEPROM_REGION_LENGTH__+0x1a0>
		{
			if (vermelho >= 9)
     55a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     55e:	89 30       	cpi	r24, 0x09	; 9
     560:	20 f0       	brcs	.+8      	; 0x56a <__EEPROM_REGION_LENGTH__+0x16a>
			{
				vermelho = 9;
     562:	89 e0       	ldi	r24, 0x09	; 9
     564:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     568:	05 c0       	rjmp	.+10     	; 0x574 <__EEPROM_REGION_LENGTH__+0x174>
				}else {
				vermelho ++;
     56a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     56e:	8f 5f       	subi	r24, 0xFF	; 255
     570:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
			
			USART_Transmit(amarelo);
     574:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     578:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     57c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     580:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     584:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     588:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho,amarelo,verde);
     58c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     590:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     594:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     598:	42 2f       	mov	r20, r18
     59a:	69 2f       	mov	r22, r25
     59c:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
		
		if (selecao == 1)	// Aumenta o tempo do amarelo
     5a0:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     5a4:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     5a8:	01 97       	sbiw	r24, 0x01	; 1
     5aa:	19 f5       	brne	.+70     	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
		{
			if (amarelo >= 9)
     5ac:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     5b0:	89 30       	cpi	r24, 0x09	; 9
     5b2:	20 f0       	brcs	.+8      	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
			{
				amarelo = 9;
     5b4:	89 e0       	ldi	r24, 0x09	; 9
     5b6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <amarelo>
     5ba:	05 c0       	rjmp	.+10     	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
				}else {
				amarelo ++;
     5bc:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     5c0:	8f 5f       	subi	r24, 0xFF	; 255
     5c2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <amarelo>
			}
			
			USART_Transmit(amarelo);
     5c6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     5ca:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     5ce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     5d2:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     5d6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     5da:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho,amarelo,verde);
     5de:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     5e2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     5e6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     5ea:	42 2f       	mov	r20, r18
     5ec:	69 2f       	mov	r22, r25
     5ee:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
		
		if (selecao == 2)	// Aumenta o tempo do verde
     5f2:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     5f6:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     5fa:	02 97       	sbiw	r24, 0x02	; 2
     5fc:	19 f5       	brne	.+70     	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
		{
			if (verde >= 9)
     5fe:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     602:	89 30       	cpi	r24, 0x09	; 9
     604:	20 f0       	brcs	.+8      	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
			{
				verde = 9;
     606:	89 e0       	ldi	r24, 0x09	; 9
     608:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <verde>
     60c:	05 c0       	rjmp	.+10     	; 0x618 <__EEPROM_REGION_LENGTH__+0x218>
				}else {
				verde ++;
     60e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     612:	8f 5f       	subi	r24, 0xFF	; 255
     614:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <verde>
			}
			
			USART_Transmit(amarelo);
     618:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     61c:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     620:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     624:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     628:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     62c:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho, amarelo, verde);
     630:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     634:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     638:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     63c:	42 2f       	mov	r20, r18
     63e:	69 2f       	mov	r22, r25
     640:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
		
		if (selecao == 3)	// Controla o tempo no modo automatico
     644:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     648:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     64c:	03 97       	sbiw	r24, 0x03	; 3
     64e:	e1 f5       	brne	.+120    	; 0x6c8 <__EEPROM_REGION_LENGTH__+0x2c8>
		{
			conta_frequencia = 1;
     650:	81 e0       	ldi	r24, 0x01	; 1
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	90 93 64 01 	sts	0x0164, r25	; 0x800164 <conta_frequencia+0x1>
     658:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <conta_frequencia>
			verde = (frequencia_carros_ms/60) + 1;
     65c:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <frequencia_carros_ms>
     660:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <frequencia_carros_ms+0x1>
     664:	a0 91 56 01 	lds	r26, 0x0156	; 0x800156 <frequencia_carros_ms+0x2>
     668:	b0 91 57 01 	lds	r27, 0x0157	; 0x800157 <frequencia_carros_ms+0x3>
     66c:	2c e3       	ldi	r18, 0x3C	; 60
     66e:	30 e0       	ldi	r19, 0x00	; 0
     670:	40 e0       	ldi	r20, 0x00	; 0
     672:	50 e0       	ldi	r21, 0x00	; 0
     674:	bc 01       	movw	r22, r24
     676:	cd 01       	movw	r24, r26
     678:	0e 94 ea 0f 	call	0x1fd4	; 0x1fd4 <__udivmodsi4>
     67c:	da 01       	movw	r26, r20
     67e:	c9 01       	movw	r24, r18
     680:	8f 5f       	subi	r24, 0xFF	; 255
     682:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <verde>
			vermelho = 10 - verde;
     686:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     68a:	9a e0       	ldi	r25, 0x0A	; 10
     68c:	f9 2f       	mov	r31, r25
     68e:	f8 1b       	sub	r31, r24
     690:	8f 2f       	mov	r24, r31
     692:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			amarelo = 1;
     696:	81 e0       	ldi	r24, 0x01	; 1
     698:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <amarelo>
			
			USART_Transmit(amarelo);
     69c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     6a0:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     6a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6a8:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     6ac:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     6b0:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho, amarelo, verde);
     6b4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     6b8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     6bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6c0:	42 2f       	mov	r20, r18
     6c2:	69 2f       	mov	r22, r25
     6c4:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
	}
	
	// Botão para diminuir o tempo
	
	if(!(PIND & (1<<5)))
     6c8:	89 e2       	ldi	r24, 0x29	; 41
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	fc 01       	movw	r30, r24
     6ce:	80 81       	ld	r24, Z
     6d0:	88 2f       	mov	r24, r24
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	80 72       	andi	r24, 0x20	; 32
     6d6:	99 27       	eor	r25, r25
     6d8:	89 2b       	or	r24, r25
     6da:	09 f0       	breq	.+2      	; 0x6de <__EEPROM_REGION_LENGTH__+0x2de>
     6dc:	bb c0       	rjmp	.+374    	; 0x854 <__DATA_REGION_LENGTH__+0x54>
	{
		if (selecao == 0)	// Diminui o tempo do vermelho
     6de:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     6e2:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     6e6:	89 2b       	or	r24, r25
     6e8:	19 f5       	brne	.+70     	; 0x730 <__EEPROM_REGION_LENGTH__+0x330>
		{
			if (vermelho <= 1)
     6ea:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6ee:	82 30       	cpi	r24, 0x02	; 2
     6f0:	20 f4       	brcc	.+8      	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
			{
				vermelho = 1;
     6f2:	81 e0       	ldi	r24, 0x01	; 1
     6f4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     6f8:	05 c0       	rjmp	.+10     	; 0x704 <__EEPROM_REGION_LENGTH__+0x304>
				}else {
				vermelho --;
     6fa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6fe:	81 50       	subi	r24, 0x01	; 1
     700:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
			
			USART_Transmit(amarelo);
     704:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     708:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     70c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     710:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     714:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     718:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho,amarelo,verde);
     71c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     720:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     724:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     728:	42 2f       	mov	r20, r18
     72a:	69 2f       	mov	r22, r25
     72c:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
		
		if (selecao == 1)	// Diminui o tempo do amarelo
     730:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     734:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     738:	01 97       	sbiw	r24, 0x01	; 1
     73a:	19 f5       	brne	.+70     	; 0x782 <__EEPROM_REGION_LENGTH__+0x382>
		{
			if (amarelo <= 1)
     73c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     740:	82 30       	cpi	r24, 0x02	; 2
     742:	20 f4       	brcc	.+8      	; 0x74c <__EEPROM_REGION_LENGTH__+0x34c>
			{
				amarelo = 1;
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <amarelo>
     74a:	05 c0       	rjmp	.+10     	; 0x756 <__EEPROM_REGION_LENGTH__+0x356>
				}else {
				amarelo --;
     74c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     750:	81 50       	subi	r24, 0x01	; 1
     752:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <amarelo>
			}
			
			USART_Transmit(amarelo);
     756:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     75a:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     75e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     762:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     766:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     76a:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho,amarelo,verde);
     76e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     772:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     776:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     77a:	42 2f       	mov	r20, r18
     77c:	69 2f       	mov	r22, r25
     77e:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
		
		if (selecao == 2)	// Diminui o tempo do verde
     782:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     786:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     78a:	02 97       	sbiw	r24, 0x02	; 2
     78c:	19 f5       	brne	.+70     	; 0x7d4 <__EEPROM_REGION_LENGTH__+0x3d4>
		{
			if (verde <= 1)
     78e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     792:	82 30       	cpi	r24, 0x02	; 2
     794:	20 f4       	brcc	.+8      	; 0x79e <__EEPROM_REGION_LENGTH__+0x39e>
			{
				verde = 1;
     796:	81 e0       	ldi	r24, 0x01	; 1
     798:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <verde>
     79c:	05 c0       	rjmp	.+10     	; 0x7a8 <__EEPROM_REGION_LENGTH__+0x3a8>
				}else {
				verde --;
     79e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     7a2:	81 50       	subi	r24, 0x01	; 1
     7a4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <verde>
			}
			
			USART_Transmit(amarelo);
     7a8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     7ac:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     7b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7b4:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     7b8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     7bc:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho,amarelo,verde);
     7c0:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     7c4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     7c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7cc:	42 2f       	mov	r20, r18
     7ce:	69 2f       	mov	r22, r25
     7d0:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
		
		if (selecao == 3)	// Controla no modo automatico
     7d4:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
     7d8:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
     7dc:	03 97       	sbiw	r24, 0x03	; 3
     7de:	d1 f5       	brne	.+116    	; 0x854 <__DATA_REGION_LENGTH__+0x54>
		{
			conta_frequencia = 0;
     7e0:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <conta_frequencia+0x1>
     7e4:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <conta_frequencia>
			verde = (frequencia_carros_ms/60) + 1;
     7e8:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <frequencia_carros_ms>
     7ec:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <frequencia_carros_ms+0x1>
     7f0:	a0 91 56 01 	lds	r26, 0x0156	; 0x800156 <frequencia_carros_ms+0x2>
     7f4:	b0 91 57 01 	lds	r27, 0x0157	; 0x800157 <frequencia_carros_ms+0x3>
     7f8:	2c e3       	ldi	r18, 0x3C	; 60
     7fa:	30 e0       	ldi	r19, 0x00	; 0
     7fc:	40 e0       	ldi	r20, 0x00	; 0
     7fe:	50 e0       	ldi	r21, 0x00	; 0
     800:	bc 01       	movw	r22, r24
     802:	cd 01       	movw	r24, r26
     804:	0e 94 ea 0f 	call	0x1fd4	; 0x1fd4 <__udivmodsi4>
     808:	da 01       	movw	r26, r20
     80a:	c9 01       	movw	r24, r18
     80c:	8f 5f       	subi	r24, 0xFF	; 255
     80e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <verde>
			vermelho = 10 - verde;
     812:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     816:	9a e0       	ldi	r25, 0x0A	; 10
     818:	f9 2f       	mov	r31, r25
     81a:	f8 1b       	sub	r31, r24
     81c:	8f 2f       	mov	r24, r31
     81e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			amarelo = 1;
     822:	81 e0       	ldi	r24, 0x01	; 1
     824:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <amarelo>
			
			USART_Transmit(amarelo);
     828:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     82c:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(vermelho);
     830:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     834:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			USART_Transmit(verde);
     838:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     83c:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <USART_Transmit>
			LCD(vermelho,amarelo,verde);
     840:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     844:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     848:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     84c:	42 2f       	mov	r20, r18
     84e:	69 2f       	mov	r22, r25
     850:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
		}
	}
	
	// Medidor de velocidade
		if((!(PIND & (1<<0)))){
     854:	89 e2       	ldi	r24, 0x29	; 41
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	fc 01       	movw	r30, r24
     85a:	80 81       	ld	r24, Z
     85c:	88 2f       	mov	r24, r24
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	81 70       	andi	r24, 0x01	; 1
     862:	99 27       	eor	r25, r25
     864:	89 2b       	or	r24, r25
     866:	09 f0       	breq	.+2      	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
     868:	74 c0       	rjmp	.+232    	; 0x952 <__stack+0x53>
			tempo_1ms_velocidade = tempo_1ms;
     86a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     86e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     872:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     876:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     87a:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <tempo_1ms_velocidade>
     87e:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <tempo_1ms_velocidade+0x1>
     882:	a0 93 52 01 	sts	0x0152, r26	; 0x800152 <tempo_1ms_velocidade+0x2>
     886:	b0 93 53 01 	sts	0x0153, r27	; 0x800153 <tempo_1ms_velocidade+0x3>
			flag_velocidade = 1;
     88a:	81 e0       	ldi	r24, 0x01	; 1
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	a0 e0       	ldi	r26, 0x00	; 0
     890:	b0 e0       	ldi	r27, 0x00	; 0
     892:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <flag_velocidade>
     896:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <flag_velocidade+0x1>
     89a:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <flag_velocidade+0x2>
     89e:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <flag_velocidade+0x3>
			LCD(vermelho,amarelo,verde);		
     8a2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     8a6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     8aa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     8ae:	42 2f       	mov	r20, r18
     8b0:	69 2f       	mov	r22, r25
     8b2:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
			if((!(PIND & (1<<1)))){
     8b6:	89 e2       	ldi	r24, 0x29	; 41
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	fc 01       	movw	r30, r24
     8bc:	80 81       	ld	r24, Z
     8be:	88 2f       	mov	r24, r24
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	82 70       	andi	r24, 0x02	; 2
     8c4:	99 27       	eor	r25, r25
     8c6:	89 2b       	or	r24, r25
     8c8:	09 f0       	breq	.+2      	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
     8ca:	43 c0       	rjmp	.+134    	; 0x952 <__stack+0x53>
				tempo = (tempo_1ms - tempo_1ms_velocidade);
     8cc:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     8d0:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     8d4:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     8d8:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     8dc:	28 2f       	mov	r18, r24
     8de:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <tempo_1ms_velocidade>
     8e2:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <tempo_1ms_velocidade+0x1>
     8e6:	a0 91 52 01 	lds	r26, 0x0152	; 0x800152 <tempo_1ms_velocidade+0x2>
     8ea:	b0 91 53 01 	lds	r27, 0x0153	; 0x800153 <tempo_1ms_velocidade+0x3>
     8ee:	f2 2f       	mov	r31, r18
     8f0:	f8 1b       	sub	r31, r24
     8f2:	8f 2f       	mov	r24, r31
     8f4:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <tempo>
				velocidade_ms = (distancia/(tempo*1000));
     8f8:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <distancia>
     8fc:	68 2f       	mov	r22, r24
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <tempo>
     904:	28 2f       	mov	r18, r24
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	88 ee       	ldi	r24, 0xE8	; 232
     90a:	93 e0       	ldi	r25, 0x03	; 3
     90c:	28 9f       	mul	r18, r24
     90e:	a0 01       	movw	r20, r0
     910:	29 9f       	mul	r18, r25
     912:	50 0d       	add	r21, r0
     914:	38 9f       	mul	r19, r24
     916:	50 0d       	add	r21, r0
     918:	11 24       	eor	r1, r1
     91a:	cb 01       	movw	r24, r22
     91c:	ba 01       	movw	r22, r20
     91e:	0e 94 d6 0f 	call	0x1fac	; 0x1fac <__divmodhi4>
     922:	cb 01       	movw	r24, r22
     924:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__data_end>
				velocidade_kh = 5;//(velocidade_ms*3.6);
     928:	85 e0       	ldi	r24, 0x05	; 5
     92a:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <velocidade_kh>
				flag_velocidade = 0;
     92e:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <flag_velocidade>
     932:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <flag_velocidade+0x1>
     936:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <flag_velocidade+0x2>
     93a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <flag_velocidade+0x3>
				LCD(vermelho,amarelo,verde);
     93e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     942:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     946:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     94a:	42 2f       	mov	r20, r18
     94c:	69 2f       	mov	r22, r25
     94e:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
			}
		}
			
			
}
     952:	00 00       	nop
     954:	df 91       	pop	r29
     956:	cf 91       	pop	r28
     958:	ff 91       	pop	r31
     95a:	ef 91       	pop	r30
     95c:	bf 91       	pop	r27
     95e:	af 91       	pop	r26
     960:	9f 91       	pop	r25
     962:	8f 91       	pop	r24
     964:	7f 91       	pop	r23
     966:	6f 91       	pop	r22
     968:	5f 91       	pop	r21
     96a:	4f 91       	pop	r20
     96c:	3f 91       	pop	r19
     96e:	2f 91       	pop	r18
     970:	0f 90       	pop	r0
     972:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     976:	0f 90       	pop	r0
     978:	1f 90       	pop	r1
     97a:	18 95       	reti

0000097c <main>:

int main(void)
{
     97c:	cf 93       	push	r28
     97e:	df 93       	push	r29
     980:	cd b7       	in	r28, 0x3d	; 61
     982:	de b7       	in	r29, 0x3e	; 62
	// GPIO
	DDRB	= 0b11111111;							// Habilita os pinos PB0...7 como saida
     984:	84 e2       	ldi	r24, 0x24	; 36
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	2f ef       	ldi	r18, 0xFF	; 255
     98a:	fc 01       	movw	r30, r24
     98c:	20 83       	st	Z, r18
	DDRD	= ~((1<<2)|(1<<4)|(1<<5)|(1<<6)|(1<<1)|(1<<0));		// Habilita os  pinos  PD2, PD4, PD5 e PD6 como entrada
     98e:	8a e2       	ldi	r24, 0x2A	; 42
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	28 e8       	ldi	r18, 0x88	; 136
     994:	fc 01       	movw	r30, r24
     996:	20 83       	st	Z, r18
	PORTD  |= ((1<<2)|(1<<4)|(1<<5)|(1<<6)|(1<<1)|(1<<0));		// Habilita os pull-up de PD2, PD4, PD5 e PD6
     998:	8b e2       	ldi	r24, 0x2B	; 43
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	2b e2       	ldi	r18, 0x2B	; 43
     99e:	30 e0       	ldi	r19, 0x00	; 0
     9a0:	f9 01       	movw	r30, r18
     9a2:	20 81       	ld	r18, Z
     9a4:	27 67       	ori	r18, 0x77	; 119
     9a6:	fc 01       	movw	r30, r24
     9a8:	20 83       	st	Z, r18
	DDRC	= ~((1<<6)|(1<<0));						// Habilita os pinos PC0 e PC6 como entrada
     9aa:	87 e2       	ldi	r24, 0x27	; 39
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	2e eb       	ldi	r18, 0xBE	; 190
     9b0:	fc 01       	movw	r30, r24
     9b2:	20 83       	st	Z, r18
	PORTC  |= (1<<6);								// Habilita o pull-up de PC6
     9b4:	88 e2       	ldi	r24, 0x28	; 40
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	28 e2       	ldi	r18, 0x28	; 40
     9ba:	30 e0       	ldi	r19, 0x00	; 0
     9bc:	f9 01       	movw	r30, r18
     9be:	20 81       	ld	r18, Z
     9c0:	20 64       	ori	r18, 0x40	; 64
     9c2:	fc 01       	movw	r30, r24
     9c4:	20 83       	st	Z, r18

	// Configuração das interrupções
	EICRA  = 0b00000010;		// Interrrupçãp externa INT0 na borda de descida
     9c6:	89 e6       	ldi	r24, 0x69	; 105
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	22 e0       	ldi	r18, 0x02	; 2
     9cc:	fc 01       	movw	r30, r24
     9ce:	20 83       	st	Z, r18
	EIMSK  = 0b00000001;		// Habilita a interrupção externa INT0
     9d0:	8d e3       	ldi	r24, 0x3D	; 61
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	21 e0       	ldi	r18, 0x01	; 1
     9d6:	fc 01       	movw	r30, r24
     9d8:	20 83       	st	Z, r18
	PCICR  = 0b00000100;		// Habilita a interrupção externa PCINT2
     9da:	88 e6       	ldi	r24, 0x68	; 104
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	24 e0       	ldi	r18, 0x04	; 4
     9e0:	fc 01       	movw	r30, r24
     9e2:	20 83       	st	Z, r18
	PCMSK2 = 0b01110011;		// Habilita individualmente as portas PD4, PD5 e PD6
     9e4:	8d e6       	ldi	r24, 0x6D	; 109
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	23 e7       	ldi	r18, 0x73	; 115
     9ea:	fc 01       	movw	r30, r24
     9ec:	20 83       	st	Z, r18
	PCIFR  = 0b00000100;		// Indica se alguma interrupção ocorreu em PCINT2
     9ee:	8b e3       	ldi	r24, 0x3B	; 59
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	24 e0       	ldi	r18, 0x04	; 4
     9f4:	fc 01       	movw	r30, r24
     9f6:	20 83       	st	Z, r18
	
	// Configuração do ADC
	ADMUX  = 0b01000000;		// Vcc como referência, canal 0
     9f8:	8c e7       	ldi	r24, 0x7C	; 124
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	20 e4       	ldi	r18, 0x40	; 64
     9fe:	fc 01       	movw	r30, r24
     a00:	20 83       	st	Z, r18
	ADCSRA = 0b11100111;		// Habilita o AD, modo de conversão continua, prescaler = 128
     a02:	8a e7       	ldi	r24, 0x7A	; 122
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	27 ee       	ldi	r18, 0xE7	; 231
     a08:	fc 01       	movw	r30, r24
     a0a:	20 83       	st	Z, r18
	ADCSRB = 0b00000000;		// Modo de conversão continua
     a0c:	8b e7       	ldi	r24, 0x7B	; 123
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	fc 01       	movw	r30, r24
     a12:	10 82       	st	Z, r1
	DIDR0  = 0b00111110;		// Habilita apenas o pino PC0 como entrada do ADC0
     a14:	8e e7       	ldi	r24, 0x7E	; 126
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	2e e3       	ldi	r18, 0x3E	; 62
     a1a:	fc 01       	movw	r30, r24
     a1c:	20 83       	st	Z, r18
	
	// Configuração do PWM
	
	//Fast PWM, OC2A e OC2B habilitados
	TCCR2A = 0b00100011;	// PWM não invertido no pino OC2B
     a1e:	80 eb       	ldi	r24, 0xB0	; 176
     a20:	90 e0       	ldi	r25, 0x00	; 0
     a22:	23 e2       	ldi	r18, 0x23	; 35
     a24:	fc 01       	movw	r30, r24
     a26:	20 83       	st	Z, r18
	TCCR2B = 0b00000100;	// Liga TC2, prescaler = 64, fpwm =	f0sc/(256*prescaler) = 16MHz/(256*64) = 976Hz
     a28:	81 eb       	ldi	r24, 0xB1	; 177
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	24 e0       	ldi	r18, 0x04	; 4
     a2e:	fc 01       	movw	r30, r24
     a30:	20 83       	st	Z, r18
	OCR2B = 256;
     a32:	84 eb       	ldi	r24, 0xB4	; 180
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	fc 01       	movw	r30, r24
     a38:	10 82       	st	Z, r1
	UBRR0L = (unsigned char)MYUBRR;
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);			// Habilita o transmissor e o receptor e a interrupção de recepção da USART
	UCSR0C = (3<<UCSZ00);	*/							// Ajusta o formato do frame: 8 bits de dados e 1 de parada
	
	// Interrupções do timer
	TCCR0A = 0b00000010;		// Habilita modo Ctc do TC0
     a3a:	84 e4       	ldi	r24, 0x44	; 68
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	22 e0       	ldi	r18, 0x02	; 2
     a40:	fc 01       	movw	r30, r24
     a42:	20 83       	st	Z, r18
	TCCR0B = 0b00000011;		// Liga TC0 com prescaler = 64
     a44:	85 e4       	ldi	r24, 0x45	; 69
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	23 e0       	ldi	r18, 0x03	; 3
     a4a:	fc 01       	movw	r30, r24
     a4c:	20 83       	st	Z, r18
	OCR0A  = 249;				// Ajusta o comparador para o TC0 contar até 249
     a4e:	87 e4       	ldi	r24, 0x47	; 71
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	29 ef       	ldi	r18, 0xF9	; 249
     a54:	fc 01       	movw	r30, r24
     a56:	20 83       	st	Z, r18
	TIMSK0 = 0b00000010;		// Habilita a interrupção na igualdade de comparação com OCR0A.
     a58:	8e e6       	ldi	r24, 0x6E	; 110
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	22 e0       	ldi	r18, 0x02	; 2
     a5e:	fc 01       	movw	r30, r24
     a60:	20 83       	st	Z, r18
	// A interrupção ocorre a cada 1 ms = (64 * (249 + 1)) / 16 MHz
	sei();						// Habilita interrupções globais, ativando o bit I do SREG
     a62:	78 94       	sei
	
	// Configuração do LCD
	nokia_lcd_init();
     a64:	0e 94 a4 0b 	call	0x1748	; 0x1748 <nokia_lcd_init>
	LCD(vermelho, amarelo, verde);
     a68:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
     a6c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
     a70:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a74:	42 2f       	mov	r20, r18
     a76:	69 2f       	mov	r22, r25
     a78:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
	
	while (1)
	{
		LED_VERMELHO();
     a7c:	0e 94 49 05 	call	0xa92	; 0xa92 <LED_VERMELHO>
		LED_VERDE();
     a80:	0e 94 01 07 	call	0xe02	; 0xe02 <LED_VERDE>
		LED_AMARELO();
     a84:	0e 94 90 06 	call	0xd20	; 0xd20 <LED_AMARELO>
		carros_por_minuto();
     a88:	0e 94 4f 08 	call	0x109e	; 0x109e <carros_por_minuto>
		checalux();
     a8c:	0e 94 4c 0a 	call	0x1498	; 0x1498 <checalux>
		//velocidade_carro();
	}
     a90:	f5 cf       	rjmp	.-22     	; 0xa7c <main+0x100>

00000a92 <LED_VERMELHO>:

//-------------------------------------------------------------------------------------------------------------------------------------------------

// Implementação das funções

void LED_VERMELHO(){
     a92:	cf 93       	push	r28
     a94:	df 93       	push	r29
     a96:	cd b7       	in	r28, 0x3d	; 61
     a98:	de b7       	in	r29, 0x3e	; 62
	t_vermelho = (vermelho*1000)/4;
     a9a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a9e:	28 2f       	mov	r18, r24
     aa0:	30 e0       	ldi	r19, 0x00	; 0
     aa2:	88 ee       	ldi	r24, 0xE8	; 232
     aa4:	93 e0       	ldi	r25, 0x03	; 3
     aa6:	28 9f       	mul	r18, r24
     aa8:	a0 01       	movw	r20, r0
     aaa:	29 9f       	mul	r18, r25
     aac:	50 0d       	add	r21, r0
     aae:	38 9f       	mul	r19, r24
     ab0:	50 0d       	add	r21, r0
     ab2:	11 24       	eor	r1, r1
     ab4:	ca 01       	movw	r24, r20
     ab6:	99 23       	and	r25, r25
     ab8:	0c f4       	brge	.+2      	; 0xabc <LED_VERMELHO+0x2a>
     aba:	03 96       	adiw	r24, 0x03	; 3
     abc:	95 95       	asr	r25
     abe:	87 95       	ror	r24
     ac0:	95 95       	asr	r25
     ac2:	87 95       	ror	r24
     ac4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <t_vermelho+0x1>
     ac8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <t_vermelho>
	if(auxiliar == 1){
     acc:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     ad0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     ad4:	01 97       	sbiw	r24, 0x01	; 1
     ad6:	09 f0       	breq	.+2      	; 0xada <LED_VERMELHO+0x48>
     ad8:	44 c0       	rjmp	.+136    	; 0xb62 <LED_VERMELHO+0xd0>
		PORTB = 0b11110000; //Pinos PB4...7 em nivel alto
     ada:	85 e2       	ldi	r24, 0x25	; 37
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	20 ef       	ldi	r18, 0xF0	; 240
     ae0:	fc 01       	movw	r30, r24
     ae2:	20 83       	st	Z, r18
		if((tempo_1ms - tempo_1ms_anterior) >= t_vermelho)
     ae4:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <tempo_1ms>
     ae8:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <tempo_1ms+0x1>
     aec:	40 91 46 01 	lds	r20, 0x0146	; 0x800146 <tempo_1ms+0x2>
     af0:	50 91 47 01 	lds	r21, 0x0147	; 0x800147 <tempo_1ms+0x3>
     af4:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <tempo_1ms_anterior>
     af8:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <tempo_1ms_anterior+0x1>
     afc:	a0 91 4a 01 	lds	r26, 0x014A	; 0x80014a <tempo_1ms_anterior+0x2>
     b00:	b0 91 4b 01 	lds	r27, 0x014B	; 0x80014b <tempo_1ms_anterior+0x3>
     b04:	28 1b       	sub	r18, r24
     b06:	39 0b       	sbc	r19, r25
     b08:	4a 0b       	sbc	r20, r26
     b0a:	5b 0b       	sbc	r21, r27
     b0c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <t_vermelho>
     b10:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <t_vermelho+0x1>
     b14:	09 2e       	mov	r0, r25
     b16:	00 0c       	add	r0, r0
     b18:	aa 0b       	sbc	r26, r26
     b1a:	bb 0b       	sbc	r27, r27
     b1c:	28 17       	cp	r18, r24
     b1e:	39 07       	cpc	r19, r25
     b20:	4a 07       	cpc	r20, r26
     b22:	5b 07       	cpc	r21, r27
     b24:	f0 f0       	brcs	.+60     	; 0xb62 <LED_VERMELHO+0xd0>
		{
			tempo_1ms_anterior = tempo_1ms;
     b26:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     b2a:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     b2e:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     b32:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     b36:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <tempo_1ms_anterior>
     b3a:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <tempo_1ms_anterior+0x1>
     b3e:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <tempo_1ms_anterior+0x2>
     b42:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <tempo_1ms_anterior+0x3>
			PORTB = 0b11100000; //Pinos PB4...6 em nivel alto
     b46:	85 e2       	ldi	r24, 0x25	; 37
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	20 ee       	ldi	r18, 0xE0	; 224
     b4c:	fc 01       	movw	r30, r24
     b4e:	20 83       	st	Z, r18
			auxiliar++;
     b50:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     b54:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     b58:	01 96       	adiw	r24, 0x01	; 1
     b5a:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <auxiliar+0x1>
     b5e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <auxiliar>
		}
		//else{
		//tempoaux = 0;
		//}
	}
	if(auxiliar == 2){
     b62:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     b66:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     b6a:	02 97       	sbiw	r24, 0x02	; 2
     b6c:	09 f0       	breq	.+2      	; 0xb70 <LED_VERMELHO+0xde>
     b6e:	3f c0       	rjmp	.+126    	; 0xbee <LED_VERMELHO+0x15c>
		if((tempo_1ms - tempo_1ms_anterior) >= t_vermelho)
     b70:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <tempo_1ms>
     b74:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <tempo_1ms+0x1>
     b78:	40 91 46 01 	lds	r20, 0x0146	; 0x800146 <tempo_1ms+0x2>
     b7c:	50 91 47 01 	lds	r21, 0x0147	; 0x800147 <tempo_1ms+0x3>
     b80:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <tempo_1ms_anterior>
     b84:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <tempo_1ms_anterior+0x1>
     b88:	a0 91 4a 01 	lds	r26, 0x014A	; 0x80014a <tempo_1ms_anterior+0x2>
     b8c:	b0 91 4b 01 	lds	r27, 0x014B	; 0x80014b <tempo_1ms_anterior+0x3>
     b90:	28 1b       	sub	r18, r24
     b92:	39 0b       	sbc	r19, r25
     b94:	4a 0b       	sbc	r20, r26
     b96:	5b 0b       	sbc	r21, r27
     b98:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <t_vermelho>
     b9c:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <t_vermelho+0x1>
     ba0:	09 2e       	mov	r0, r25
     ba2:	00 0c       	add	r0, r0
     ba4:	aa 0b       	sbc	r26, r26
     ba6:	bb 0b       	sbc	r27, r27
     ba8:	28 17       	cp	r18, r24
     baa:	39 07       	cpc	r19, r25
     bac:	4a 07       	cpc	r20, r26
     bae:	5b 07       	cpc	r21, r27
     bb0:	f0 f0       	brcs	.+60     	; 0xbee <LED_VERMELHO+0x15c>
		{
			tempo_1ms_anterior = tempo_1ms;
     bb2:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     bb6:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     bba:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     bbe:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     bc2:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <tempo_1ms_anterior>
     bc6:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <tempo_1ms_anterior+0x1>
     bca:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <tempo_1ms_anterior+0x2>
     bce:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <tempo_1ms_anterior+0x3>
			PORTB = 0b11000000; //Pinos PB4...5 em nivel alto
     bd2:	85 e2       	ldi	r24, 0x25	; 37
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	20 ec       	ldi	r18, 0xC0	; 192
     bd8:	fc 01       	movw	r30, r24
     bda:	20 83       	st	Z, r18
			auxiliar++;
     bdc:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     be0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     be4:	01 96       	adiw	r24, 0x01	; 1
     be6:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <auxiliar+0x1>
     bea:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <auxiliar>
		}
		//else{
		//tempoaux = 0;
		//}
	}
	if(auxiliar == 3){
     bee:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     bf2:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     bf6:	03 97       	sbiw	r24, 0x03	; 3
     bf8:	09 f0       	breq	.+2      	; 0xbfc <LED_VERMELHO+0x16a>
     bfa:	44 c0       	rjmp	.+136    	; 0xc84 <LED_VERMELHO+0x1f2>
		if((tempo_1ms - tempo_1ms_anterior) >= t_vermelho)
     bfc:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <tempo_1ms>
     c00:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <tempo_1ms+0x1>
     c04:	40 91 46 01 	lds	r20, 0x0146	; 0x800146 <tempo_1ms+0x2>
     c08:	50 91 47 01 	lds	r21, 0x0147	; 0x800147 <tempo_1ms+0x3>
     c0c:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <tempo_1ms_anterior>
     c10:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <tempo_1ms_anterior+0x1>
     c14:	a0 91 4a 01 	lds	r26, 0x014A	; 0x80014a <tempo_1ms_anterior+0x2>
     c18:	b0 91 4b 01 	lds	r27, 0x014B	; 0x80014b <tempo_1ms_anterior+0x3>
     c1c:	28 1b       	sub	r18, r24
     c1e:	39 0b       	sbc	r19, r25
     c20:	4a 0b       	sbc	r20, r26
     c22:	5b 0b       	sbc	r21, r27
     c24:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <t_vermelho>
     c28:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <t_vermelho+0x1>
     c2c:	09 2e       	mov	r0, r25
     c2e:	00 0c       	add	r0, r0
     c30:	aa 0b       	sbc	r26, r26
     c32:	bb 0b       	sbc	r27, r27
     c34:	28 17       	cp	r18, r24
     c36:	39 07       	cpc	r19, r25
     c38:	4a 07       	cpc	r20, r26
     c3a:	5b 07       	cpc	r21, r27
     c3c:	f8 f0       	brcs	.+62     	; 0xc7c <LED_VERMELHO+0x1ea>
		{
			tempo_1ms_anterior = tempo_1ms;
     c3e:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     c42:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     c46:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     c4a:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     c4e:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <tempo_1ms_anterior>
     c52:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <tempo_1ms_anterior+0x1>
     c56:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <tempo_1ms_anterior+0x2>
     c5a:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <tempo_1ms_anterior+0x3>
			PORTB = 0b10000000; //Pino PB4 em nivel alto
     c5e:	85 e2       	ldi	r24, 0x25	; 37
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	20 e8       	ldi	r18, 0x80	; 128
     c64:	fc 01       	movw	r30, r24
     c66:	20 83       	st	Z, r18
			auxiliar++;
     c68:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     c6c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     c70:	01 96       	adiw	r24, 0x01	; 1
     c72:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <auxiliar+0x1>
     c76:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <auxiliar>
     c7a:	04 c0       	rjmp	.+8      	; 0xc84 <LED_VERMELHO+0x1f2>
		}
		else{
			tempoaux = 0;
     c7c:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <tempoaux+0x1>
     c80:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <tempoaux>
		}
	}
	if(auxiliar == 4){
     c84:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     c88:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     c8c:	04 97       	sbiw	r24, 0x04	; 4
     c8e:	09 f0       	breq	.+2      	; 0xc92 <LED_VERMELHO+0x200>
     c90:	43 c0       	rjmp	.+134    	; 0xd18 <LED_VERMELHO+0x286>
		if((tempo_1ms - tempo_1ms_anterior) >= t_vermelho)
     c92:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <tempo_1ms>
     c96:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <tempo_1ms+0x1>
     c9a:	40 91 46 01 	lds	r20, 0x0146	; 0x800146 <tempo_1ms+0x2>
     c9e:	50 91 47 01 	lds	r21, 0x0147	; 0x800147 <tempo_1ms+0x3>
     ca2:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <tempo_1ms_anterior>
     ca6:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <tempo_1ms_anterior+0x1>
     caa:	a0 91 4a 01 	lds	r26, 0x014A	; 0x80014a <tempo_1ms_anterior+0x2>
     cae:	b0 91 4b 01 	lds	r27, 0x014B	; 0x80014b <tempo_1ms_anterior+0x3>
     cb2:	28 1b       	sub	r18, r24
     cb4:	39 0b       	sbc	r19, r25
     cb6:	4a 0b       	sbc	r20, r26
     cb8:	5b 0b       	sbc	r21, r27
     cba:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <t_vermelho>
     cbe:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <t_vermelho+0x1>
     cc2:	09 2e       	mov	r0, r25
     cc4:	00 0c       	add	r0, r0
     cc6:	aa 0b       	sbc	r26, r26
     cc8:	bb 0b       	sbc	r27, r27
     cca:	28 17       	cp	r18, r24
     ccc:	39 07       	cpc	r19, r25
     cce:	4a 07       	cpc	r20, r26
     cd0:	5b 07       	cpc	r21, r27
     cd2:	f0 f0       	brcs	.+60     	; 0xd10 <LED_VERMELHO+0x27e>
		{
			tempo_1ms_anterior = tempo_1ms;
     cd4:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     cd8:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     cdc:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     ce0:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     ce4:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <tempo_1ms_anterior>
     ce8:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <tempo_1ms_anterior+0x1>
     cec:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <tempo_1ms_anterior+0x2>
     cf0:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <tempo_1ms_anterior+0x3>
			PORTB = 0b00000000; //Pinos PB em nivel baixo
     cf4:	85 e2       	ldi	r24, 0x25	; 37
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	fc 01       	movw	r30, r24
     cfa:	10 82       	st	Z, r1
			auxiliar++;
     cfc:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     d00:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     d04:	01 96       	adiw	r24, 0x01	; 1
     d06:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <auxiliar+0x1>
     d0a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <auxiliar>
		}
		else{
			tempoaux = 0;
		}
	}
}
     d0e:	04 c0       	rjmp	.+8      	; 0xd18 <LED_VERMELHO+0x286>
			tempo_1ms_anterior = tempo_1ms;
			PORTB = 0b00000000; //Pinos PB em nivel baixo
			auxiliar++;
		}
		else{
			tempoaux = 0;
     d10:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <tempoaux+0x1>
     d14:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <tempoaux>
		}
	}
}
     d18:	00 00       	nop
     d1a:	df 91       	pop	r29
     d1c:	cf 91       	pop	r28
     d1e:	08 95       	ret

00000d20 <LED_AMARELO>:

void LED_AMARELO(){
     d20:	cf 93       	push	r28
     d22:	df 93       	push	r29
     d24:	cd b7       	in	r28, 0x3d	; 61
     d26:	de b7       	in	r29, 0x3e	; 62
	t_amarelo = (amarelo*1000);
     d28:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <amarelo>
     d2c:	48 2f       	mov	r20, r24
     d2e:	50 e0       	ldi	r21, 0x00	; 0
     d30:	28 ee       	ldi	r18, 0xE8	; 232
     d32:	33 e0       	ldi	r19, 0x03	; 3
     d34:	42 9f       	mul	r20, r18
     d36:	c0 01       	movw	r24, r0
     d38:	43 9f       	mul	r20, r19
     d3a:	90 0d       	add	r25, r0
     d3c:	52 9f       	mul	r21, r18
     d3e:	90 0d       	add	r25, r0
     d40:	11 24       	eor	r1, r1
     d42:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <t_amarelo+0x1>
     d46:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <t_amarelo>
	if(auxiliar == 5){
     d4a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     d4e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     d52:	05 97       	sbiw	r24, 0x05	; 5
     d54:	09 f0       	breq	.+2      	; 0xd58 <LED_AMARELO+0x38>
     d56:	51 c0       	rjmp	.+162    	; 0xdfa <LED_AMARELO+0xda>
		PORTD  |= (1<<7);  //Pino PD7 em nivel alto
     d58:	8b e2       	ldi	r24, 0x2B	; 43
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	2b e2       	ldi	r18, 0x2B	; 43
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	f9 01       	movw	r30, r18
     d62:	20 81       	ld	r18, Z
     d64:	20 68       	ori	r18, 0x80	; 128
     d66:	fc 01       	movw	r30, r24
     d68:	20 83       	st	Z, r18
		if((tempo_1ms - tempo_1ms_anterior) >= t_amarelo)
     d6a:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <tempo_1ms>
     d6e:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <tempo_1ms+0x1>
     d72:	40 91 46 01 	lds	r20, 0x0146	; 0x800146 <tempo_1ms+0x2>
     d76:	50 91 47 01 	lds	r21, 0x0147	; 0x800147 <tempo_1ms+0x3>
     d7a:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <tempo_1ms_anterior>
     d7e:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <tempo_1ms_anterior+0x1>
     d82:	a0 91 4a 01 	lds	r26, 0x014A	; 0x80014a <tempo_1ms_anterior+0x2>
     d86:	b0 91 4b 01 	lds	r27, 0x014B	; 0x80014b <tempo_1ms_anterior+0x3>
     d8a:	28 1b       	sub	r18, r24
     d8c:	39 0b       	sbc	r19, r25
     d8e:	4a 0b       	sbc	r20, r26
     d90:	5b 0b       	sbc	r21, r27
     d92:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <t_amarelo>
     d96:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <t_amarelo+0x1>
     d9a:	09 2e       	mov	r0, r25
     d9c:	00 0c       	add	r0, r0
     d9e:	aa 0b       	sbc	r26, r26
     da0:	bb 0b       	sbc	r27, r27
     da2:	28 17       	cp	r18, r24
     da4:	39 07       	cpc	r19, r25
     da6:	4a 07       	cpc	r20, r26
     da8:	5b 07       	cpc	r21, r27
     daa:	18 f1       	brcs	.+70     	; 0xdf2 <LED_AMARELO+0xd2>
		{
			tempo_1ms_anterior = tempo_1ms;
     dac:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     db0:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     db4:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     db8:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     dbc:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <tempo_1ms_anterior>
     dc0:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <tempo_1ms_anterior+0x1>
     dc4:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <tempo_1ms_anterior+0x2>
     dc8:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <tempo_1ms_anterior+0x3>
			PORTD  &= ~(1<<7);  //Pinos PB7 em nivel baixo;
     dcc:	8b e2       	ldi	r24, 0x2B	; 43
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	2b e2       	ldi	r18, 0x2B	; 43
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	f9 01       	movw	r30, r18
     dd6:	20 81       	ld	r18, Z
     dd8:	2f 77       	andi	r18, 0x7F	; 127
     dda:	fc 01       	movw	r30, r24
     ddc:	20 83       	st	Z, r18
			auxiliar++;
     dde:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     de2:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     de6:	01 96       	adiw	r24, 0x01	; 1
     de8:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <auxiliar+0x1>
     dec:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <auxiliar>
		else{
			tempoaux = 0;
		}
	}
	
}
     df0:	04 c0       	rjmp	.+8      	; 0xdfa <LED_AMARELO+0xda>
			tempo_1ms_anterior = tempo_1ms;
			PORTD  &= ~(1<<7);  //Pinos PB7 em nivel baixo;
			auxiliar++;
		}
		else{
			tempoaux = 0;
     df2:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <tempoaux+0x1>
     df6:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <tempoaux>
		}
	}
	
}
     dfa:	00 00       	nop
     dfc:	df 91       	pop	r29
     dfe:	cf 91       	pop	r28
     e00:	08 95       	ret

00000e02 <LED_VERDE>:

void LED_VERDE(){
     e02:	cf 93       	push	r28
     e04:	df 93       	push	r29
     e06:	cd b7       	in	r28, 0x3d	; 61
     e08:	de b7       	in	r29, 0x3e	; 62
	t_verde = (verde*1000)/4;
     e0a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <verde>
     e0e:	28 2f       	mov	r18, r24
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	88 ee       	ldi	r24, 0xE8	; 232
     e14:	93 e0       	ldi	r25, 0x03	; 3
     e16:	28 9f       	mul	r18, r24
     e18:	a0 01       	movw	r20, r0
     e1a:	29 9f       	mul	r18, r25
     e1c:	50 0d       	add	r21, r0
     e1e:	38 9f       	mul	r19, r24
     e20:	50 0d       	add	r21, r0
     e22:	11 24       	eor	r1, r1
     e24:	ca 01       	movw	r24, r20
     e26:	99 23       	and	r25, r25
     e28:	0c f4       	brge	.+2      	; 0xe2c <LED_VERDE+0x2a>
     e2a:	03 96       	adiw	r24, 0x03	; 3
     e2c:	95 95       	asr	r25
     e2e:	87 95       	ror	r24
     e30:	95 95       	asr	r25
     e32:	87 95       	ror	r24
     e34:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <t_verde+0x1>
     e38:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <t_verde>
	if(auxiliar == 6){
     e3c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     e40:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     e44:	06 97       	sbiw	r24, 0x06	; 6
     e46:	09 f0       	breq	.+2      	; 0xe4a <LED_VERDE+0x48>
     e48:	49 c0       	rjmp	.+146    	; 0xedc <LED_VERDE+0xda>
		PORTB = 0b00001111; //Pinos PB0...3 em nivel alto
     e4a:	85 e2       	ldi	r24, 0x25	; 37
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	2f e0       	ldi	r18, 0x0F	; 15
     e50:	fc 01       	movw	r30, r24
     e52:	20 83       	st	Z, r18
		if((tempo_1ms - tempo_1ms_anterior) >= t_verde)
     e54:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <tempo_1ms>
     e58:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <tempo_1ms+0x1>
     e5c:	40 91 46 01 	lds	r20, 0x0146	; 0x800146 <tempo_1ms+0x2>
     e60:	50 91 47 01 	lds	r21, 0x0147	; 0x800147 <tempo_1ms+0x3>
     e64:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <tempo_1ms_anterior>
     e68:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <tempo_1ms_anterior+0x1>
     e6c:	a0 91 4a 01 	lds	r26, 0x014A	; 0x80014a <tempo_1ms_anterior+0x2>
     e70:	b0 91 4b 01 	lds	r27, 0x014B	; 0x80014b <tempo_1ms_anterior+0x3>
     e74:	28 1b       	sub	r18, r24
     e76:	39 0b       	sbc	r19, r25
     e78:	4a 0b       	sbc	r20, r26
     e7a:	5b 0b       	sbc	r21, r27
     e7c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <t_verde>
     e80:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <t_verde+0x1>
     e84:	09 2e       	mov	r0, r25
     e86:	00 0c       	add	r0, r0
     e88:	aa 0b       	sbc	r26, r26
     e8a:	bb 0b       	sbc	r27, r27
     e8c:	28 17       	cp	r18, r24
     e8e:	39 07       	cpc	r19, r25
     e90:	4a 07       	cpc	r20, r26
     e92:	5b 07       	cpc	r21, r27
     e94:	f8 f0       	brcs	.+62     	; 0xed4 <LED_VERDE+0xd2>
		{
			tempo_1ms_anterior = tempo_1ms;
     e96:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     e9a:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     e9e:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     ea2:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     ea6:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <tempo_1ms_anterior>
     eaa:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <tempo_1ms_anterior+0x1>
     eae:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <tempo_1ms_anterior+0x2>
     eb2:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <tempo_1ms_anterior+0x3>
			PORTB = 0b00001110; //Pinos PB0...2 em nivel alto
     eb6:	85 e2       	ldi	r24, 0x25	; 37
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	2e e0       	ldi	r18, 0x0E	; 14
     ebc:	fc 01       	movw	r30, r24
     ebe:	20 83       	st	Z, r18
			auxiliar++;
     ec0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     ec4:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     ec8:	01 96       	adiw	r24, 0x01	; 1
     eca:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <auxiliar+0x1>
     ece:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <auxiliar>
     ed2:	04 c0       	rjmp	.+8      	; 0xedc <LED_VERDE+0xda>
		}
		else{
			tempoaux = 0;
     ed4:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <tempoaux+0x1>
     ed8:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <tempoaux>
		}
	}
	if(auxiliar == 7){
     edc:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     ee0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     ee4:	07 97       	sbiw	r24, 0x07	; 7
     ee6:	09 f0       	breq	.+2      	; 0xeea <LED_VERDE+0xe8>
     ee8:	44 c0       	rjmp	.+136    	; 0xf72 <LED_VERDE+0x170>
		if((tempo_1ms - tempo_1ms_anterior) >= t_verde)
     eea:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <tempo_1ms>
     eee:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <tempo_1ms+0x1>
     ef2:	40 91 46 01 	lds	r20, 0x0146	; 0x800146 <tempo_1ms+0x2>
     ef6:	50 91 47 01 	lds	r21, 0x0147	; 0x800147 <tempo_1ms+0x3>
     efa:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <tempo_1ms_anterior>
     efe:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <tempo_1ms_anterior+0x1>
     f02:	a0 91 4a 01 	lds	r26, 0x014A	; 0x80014a <tempo_1ms_anterior+0x2>
     f06:	b0 91 4b 01 	lds	r27, 0x014B	; 0x80014b <tempo_1ms_anterior+0x3>
     f0a:	28 1b       	sub	r18, r24
     f0c:	39 0b       	sbc	r19, r25
     f0e:	4a 0b       	sbc	r20, r26
     f10:	5b 0b       	sbc	r21, r27
     f12:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <t_verde>
     f16:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <t_verde+0x1>
     f1a:	09 2e       	mov	r0, r25
     f1c:	00 0c       	add	r0, r0
     f1e:	aa 0b       	sbc	r26, r26
     f20:	bb 0b       	sbc	r27, r27
     f22:	28 17       	cp	r18, r24
     f24:	39 07       	cpc	r19, r25
     f26:	4a 07       	cpc	r20, r26
     f28:	5b 07       	cpc	r21, r27
     f2a:	f8 f0       	brcs	.+62     	; 0xf6a <LED_VERDE+0x168>
		{
			tempo_1ms_anterior = tempo_1ms;
     f2c:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     f30:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     f34:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     f38:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     f3c:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <tempo_1ms_anterior>
     f40:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <tempo_1ms_anterior+0x1>
     f44:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <tempo_1ms_anterior+0x2>
     f48:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <tempo_1ms_anterior+0x3>
			PORTB = 0b00001100; //Pinos PB0...1 em nivel alto
     f4c:	85 e2       	ldi	r24, 0x25	; 37
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	2c e0       	ldi	r18, 0x0C	; 12
     f52:	fc 01       	movw	r30, r24
     f54:	20 83       	st	Z, r18
			auxiliar++;
     f56:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     f5a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     f5e:	01 96       	adiw	r24, 0x01	; 1
     f60:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <auxiliar+0x1>
     f64:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <auxiliar>
     f68:	04 c0       	rjmp	.+8      	; 0xf72 <LED_VERDE+0x170>
		}
		else{
			tempoaux = 0;
     f6a:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <tempoaux+0x1>
     f6e:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <tempoaux>
		}
	}
	if(auxiliar == 8){
     f72:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     f76:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     f7a:	08 97       	sbiw	r24, 0x08	; 8
     f7c:	09 f0       	breq	.+2      	; 0xf80 <LED_VERDE+0x17e>
     f7e:	44 c0       	rjmp	.+136    	; 0x1008 <LED_VERDE+0x206>
		if((tempo_1ms - tempo_1ms_anterior) >= t_verde)
     f80:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <tempo_1ms>
     f84:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <tempo_1ms+0x1>
     f88:	40 91 46 01 	lds	r20, 0x0146	; 0x800146 <tempo_1ms+0x2>
     f8c:	50 91 47 01 	lds	r21, 0x0147	; 0x800147 <tempo_1ms+0x3>
     f90:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <tempo_1ms_anterior>
     f94:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <tempo_1ms_anterior+0x1>
     f98:	a0 91 4a 01 	lds	r26, 0x014A	; 0x80014a <tempo_1ms_anterior+0x2>
     f9c:	b0 91 4b 01 	lds	r27, 0x014B	; 0x80014b <tempo_1ms_anterior+0x3>
     fa0:	28 1b       	sub	r18, r24
     fa2:	39 0b       	sbc	r19, r25
     fa4:	4a 0b       	sbc	r20, r26
     fa6:	5b 0b       	sbc	r21, r27
     fa8:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <t_verde>
     fac:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <t_verde+0x1>
     fb0:	09 2e       	mov	r0, r25
     fb2:	00 0c       	add	r0, r0
     fb4:	aa 0b       	sbc	r26, r26
     fb6:	bb 0b       	sbc	r27, r27
     fb8:	28 17       	cp	r18, r24
     fba:	39 07       	cpc	r19, r25
     fbc:	4a 07       	cpc	r20, r26
     fbe:	5b 07       	cpc	r21, r27
     fc0:	f8 f0       	brcs	.+62     	; 0x1000 <LED_VERDE+0x1fe>
		{
			tempo_1ms_anterior = tempo_1ms;
     fc2:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
     fc6:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
     fca:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
     fce:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
     fd2:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <tempo_1ms_anterior>
     fd6:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <tempo_1ms_anterior+0x1>
     fda:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <tempo_1ms_anterior+0x2>
     fde:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <tempo_1ms_anterior+0x3>
			PORTB = 0b00001000; //Pino PB0 em nivel alto
     fe2:	85 e2       	ldi	r24, 0x25	; 37
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	28 e0       	ldi	r18, 0x08	; 8
     fe8:	fc 01       	movw	r30, r24
     fea:	20 83       	st	Z, r18
			auxiliar++;
     fec:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
     ff0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
     ff4:	01 96       	adiw	r24, 0x01	; 1
     ff6:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <auxiliar+0x1>
     ffa:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <auxiliar>
     ffe:	04 c0       	rjmp	.+8      	; 0x1008 <LED_VERDE+0x206>
		}
		else{
			tempoaux = 0;
    1000:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <tempoaux+0x1>
    1004:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <tempoaux>
		}
	}
	if(auxiliar == 9){
    1008:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <auxiliar>
    100c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <auxiliar+0x1>
    1010:	09 97       	sbiw	r24, 0x09	; 9
    1012:	09 f0       	breq	.+2      	; 0x1016 <LED_VERDE+0x214>
    1014:	40 c0       	rjmp	.+128    	; 0x1096 <LED_VERDE+0x294>
		if((tempo_1ms - tempo_1ms_anterior) >= t_verde)
    1016:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <tempo_1ms>
    101a:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <tempo_1ms+0x1>
    101e:	40 91 46 01 	lds	r20, 0x0146	; 0x800146 <tempo_1ms+0x2>
    1022:	50 91 47 01 	lds	r21, 0x0147	; 0x800147 <tempo_1ms+0x3>
    1026:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <tempo_1ms_anterior>
    102a:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <tempo_1ms_anterior+0x1>
    102e:	a0 91 4a 01 	lds	r26, 0x014A	; 0x80014a <tempo_1ms_anterior+0x2>
    1032:	b0 91 4b 01 	lds	r27, 0x014B	; 0x80014b <tempo_1ms_anterior+0x3>
    1036:	28 1b       	sub	r18, r24
    1038:	39 0b       	sbc	r19, r25
    103a:	4a 0b       	sbc	r20, r26
    103c:	5b 0b       	sbc	r21, r27
    103e:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <t_verde>
    1042:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <t_verde+0x1>
    1046:	09 2e       	mov	r0, r25
    1048:	00 0c       	add	r0, r0
    104a:	aa 0b       	sbc	r26, r26
    104c:	bb 0b       	sbc	r27, r27
    104e:	28 17       	cp	r18, r24
    1050:	39 07       	cpc	r19, r25
    1052:	4a 07       	cpc	r20, r26
    1054:	5b 07       	cpc	r21, r27
    1056:	d8 f0       	brcs	.+54     	; 0x108e <LED_VERDE+0x28c>
		{
			tempo_1ms_anterior = tempo_1ms;
    1058:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
    105c:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
    1060:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
    1064:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
    1068:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <tempo_1ms_anterior>
    106c:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <tempo_1ms_anterior+0x1>
    1070:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <tempo_1ms_anterior+0x2>
    1074:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <tempo_1ms_anterior+0x3>
			PORTB = 0b00000000; //Pinos PB0 em nível baixo
    1078:	85 e2       	ldi	r24, 0x25	; 37
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	fc 01       	movw	r30, r24
    107e:	10 82       	st	Z, r1
			auxiliar = 1;
    1080:	81 e0       	ldi	r24, 0x01	; 1
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <auxiliar+0x1>
    1088:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <auxiliar>
		}
		else{
			tempoaux = 0;
		}
	}
}
    108c:	04 c0       	rjmp	.+8      	; 0x1096 <LED_VERDE+0x294>
			tempo_1ms_anterior = tempo_1ms;
			PORTB = 0b00000000; //Pinos PB0 em nível baixo
			auxiliar = 1;
		}
		else{
			tempoaux = 0;
    108e:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <tempoaux+0x1>
    1092:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <tempoaux>
		}
	}
}
    1096:	00 00       	nop
    1098:	df 91       	pop	r29
    109a:	cf 91       	pop	r28
    109c:	08 95       	ret

0000109e <carros_por_minuto>:

void carros_por_minuto(){
    109e:	ef 92       	push	r14
    10a0:	ff 92       	push	r15
    10a2:	0f 93       	push	r16
    10a4:	1f 93       	push	r17
    10a6:	cf 93       	push	r28
    10a8:	df 93       	push	r29
    10aa:	cd b7       	in	r28, 0x3d	; 61
    10ac:	de b7       	in	r29, 0x3e	; 62
	if((tempo_1ms - tempo_1ms_freq_anterior) >= 5000) //contagem de quantos carros passam a cada 5s
    10ae:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <tempo_1ms>
    10b2:	30 91 45 01 	lds	r19, 0x0145	; 0x800145 <tempo_1ms+0x1>
    10b6:	40 91 46 01 	lds	r20, 0x0146	; 0x800146 <tempo_1ms+0x2>
    10ba:	50 91 47 01 	lds	r21, 0x0147	; 0x800147 <tempo_1ms+0x3>
    10be:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <tempo_1ms_freq_anterior>
    10c2:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <tempo_1ms_freq_anterior+0x1>
    10c6:	a0 91 4e 01 	lds	r26, 0x014E	; 0x80014e <tempo_1ms_freq_anterior+0x2>
    10ca:	b0 91 4f 01 	lds	r27, 0x014F	; 0x80014f <tempo_1ms_freq_anterior+0x3>
    10ce:	79 01       	movw	r14, r18
    10d0:	8a 01       	movw	r16, r20
    10d2:	e8 1a       	sub	r14, r24
    10d4:	f9 0a       	sbc	r15, r25
    10d6:	0a 0b       	sbc	r16, r26
    10d8:	1b 0b       	sbc	r17, r27
    10da:	d8 01       	movw	r26, r16
    10dc:	c7 01       	movw	r24, r14
    10de:	88 38       	cpi	r24, 0x88	; 136
    10e0:	93 41       	sbci	r25, 0x13	; 19
    10e2:	a1 05       	cpc	r26, r1
    10e4:	b1 05       	cpc	r27, r1
    10e6:	b8 f1       	brcs	.+110    	; 0x1156 <carros_por_minuto+0xb8>
	{
		frequencia_carros_ms = n_carros * 12 ;    //Quantos carros passam em 1 minuto
    10e8:	20 91 61 01 	lds	r18, 0x0161	; 0x800161 <n_carros>
    10ec:	30 91 62 01 	lds	r19, 0x0162	; 0x800162 <n_carros+0x1>
    10f0:	c9 01       	movw	r24, r18
    10f2:	88 0f       	add	r24, r24
    10f4:	99 1f       	adc	r25, r25
    10f6:	82 0f       	add	r24, r18
    10f8:	93 1f       	adc	r25, r19
    10fa:	88 0f       	add	r24, r24
    10fc:	99 1f       	adc	r25, r25
    10fe:	88 0f       	add	r24, r24
    1100:	99 1f       	adc	r25, r25
    1102:	09 2e       	mov	r0, r25
    1104:	00 0c       	add	r0, r0
    1106:	aa 0b       	sbc	r26, r26
    1108:	bb 0b       	sbc	r27, r27
    110a:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <frequencia_carros_ms>
    110e:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <frequencia_carros_ms+0x1>
    1112:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <frequencia_carros_ms+0x2>
    1116:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <frequencia_carros_ms+0x3>
		tempo_1ms_freq_anterior = tempo_1ms;
    111a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <tempo_1ms>
    111e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <tempo_1ms+0x1>
    1122:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <tempo_1ms+0x2>
    1126:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <tempo_1ms+0x3>
    112a:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <tempo_1ms_freq_anterior>
    112e:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <tempo_1ms_freq_anterior+0x1>
    1132:	a0 93 4e 01 	sts	0x014E, r26	; 0x80014e <tempo_1ms_freq_anterior+0x2>
    1136:	b0 93 4f 01 	sts	0x014F, r27	; 0x80014f <tempo_1ms_freq_anterior+0x3>
		n_carros = 0;
    113a:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <n_carros+0x1>
    113e:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <n_carros>
		LCD(vermelho,amarelo,verde);
    1142:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
    1146:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
    114a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    114e:	42 2f       	mov	r20, r18
    1150:	69 2f       	mov	r22, r25
    1152:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
	}
	
}
    1156:	00 00       	nop
    1158:	df 91       	pop	r29
    115a:	cf 91       	pop	r28
    115c:	1f 91       	pop	r17
    115e:	0f 91       	pop	r16
    1160:	ff 90       	pop	r15
    1162:	ef 90       	pop	r14
    1164:	08 95       	ret

00001166 <LCD>:

void LCD(uint8_t vermelho, uint8_t amarelo, uint8_t verde) // Função para animação do Nokia LCD PCD8544
{
    1166:	cf 93       	push	r28
    1168:	df 93       	push	r29
    116a:	00 d0       	rcall	.+0      	; 0x116c <LCD+0x6>
    116c:	1f 92       	push	r1
    116e:	cd b7       	in	r28, 0x3d	; 61
    1170:	de b7       	in	r29, 0x3e	; 62
    1172:	89 83       	std	Y+1, r24	; 0x01
    1174:	6a 83       	std	Y+2, r22	; 0x02
    1176:	4b 83       	std	Y+3, r20	; 0x03
	sprintf(vel, "%u", velocidade_kh);
    1178:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <velocidade_kh>
    117c:	88 2f       	mov	r24, r24
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	29 2f       	mov	r18, r25
    1182:	2f 93       	push	r18
    1184:	8f 93       	push	r24
    1186:	80 e1       	ldi	r24, 0x10	; 16
    1188:	91 e0       	ldi	r25, 0x01	; 1
    118a:	89 2f       	mov	r24, r25
    118c:	8f 93       	push	r24
    118e:	80 e1       	ldi	r24, 0x10	; 16
    1190:	91 e0       	ldi	r25, 0x01	; 1
    1192:	8f 93       	push	r24
    1194:	8b e6       	ldi	r24, 0x6B	; 107
    1196:	93 e0       	ldi	r25, 0x03	; 3
    1198:	89 2f       	mov	r24, r25
    119a:	8f 93       	push	r24
    119c:	8b e6       	ldi	r24, 0x6B	; 107
    119e:	93 e0       	ldi	r25, 0x03	; 3
    11a0:	8f 93       	push	r24
    11a2:	0e 94 3f 10 	call	0x207e	; 0x207e <sprintf>
    11a6:	0f 90       	pop	r0
    11a8:	0f 90       	pop	r0
    11aa:	0f 90       	pop	r0
    11ac:	0f 90       	pop	r0
    11ae:	0f 90       	pop	r0
    11b0:	0f 90       	pop	r0
	sprintf(t_0, "%u", vermelho);
    11b2:	89 81       	ldd	r24, Y+1	; 0x01
    11b4:	88 2f       	mov	r24, r24
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	29 2f       	mov	r18, r25
    11ba:	2f 93       	push	r18
    11bc:	8f 93       	push	r24
    11be:	80 e1       	ldi	r24, 0x10	; 16
    11c0:	91 e0       	ldi	r25, 0x01	; 1
    11c2:	89 2f       	mov	r24, r25
    11c4:	8f 93       	push	r24
    11c6:	80 e1       	ldi	r24, 0x10	; 16
    11c8:	91 e0       	ldi	r25, 0x01	; 1
    11ca:	8f 93       	push	r24
    11cc:	83 e6       	ldi	r24, 0x63	; 99
    11ce:	93 e0       	ldi	r25, 0x03	; 3
    11d0:	89 2f       	mov	r24, r25
    11d2:	8f 93       	push	r24
    11d4:	83 e6       	ldi	r24, 0x63	; 99
    11d6:	93 e0       	ldi	r25, 0x03	; 3
    11d8:	8f 93       	push	r24
    11da:	0e 94 3f 10 	call	0x207e	; 0x207e <sprintf>
    11de:	0f 90       	pop	r0
    11e0:	0f 90       	pop	r0
    11e2:	0f 90       	pop	r0
    11e4:	0f 90       	pop	r0
    11e6:	0f 90       	pop	r0
    11e8:	0f 90       	pop	r0
	sprintf(t_1, "%u", amarelo);
    11ea:	8a 81       	ldd	r24, Y+2	; 0x02
    11ec:	88 2f       	mov	r24, r24
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	29 2f       	mov	r18, r25
    11f2:	2f 93       	push	r18
    11f4:	8f 93       	push	r24
    11f6:	80 e1       	ldi	r24, 0x10	; 16
    11f8:	91 e0       	ldi	r25, 0x01	; 1
    11fa:	89 2f       	mov	r24, r25
    11fc:	8f 93       	push	r24
    11fe:	80 e1       	ldi	r24, 0x10	; 16
    1200:	91 e0       	ldi	r25, 0x01	; 1
    1202:	8f 93       	push	r24
    1204:	81 e6       	ldi	r24, 0x61	; 97
    1206:	93 e0       	ldi	r25, 0x03	; 3
    1208:	89 2f       	mov	r24, r25
    120a:	8f 93       	push	r24
    120c:	81 e6       	ldi	r24, 0x61	; 97
    120e:	93 e0       	ldi	r25, 0x03	; 3
    1210:	8f 93       	push	r24
    1212:	0e 94 3f 10 	call	0x207e	; 0x207e <sprintf>
    1216:	0f 90       	pop	r0
    1218:	0f 90       	pop	r0
    121a:	0f 90       	pop	r0
    121c:	0f 90       	pop	r0
    121e:	0f 90       	pop	r0
    1220:	0f 90       	pop	r0
	sprintf(t_2, "%u", verde);
    1222:	8b 81       	ldd	r24, Y+3	; 0x03
    1224:	88 2f       	mov	r24, r24
    1226:	90 e0       	ldi	r25, 0x00	; 0
    1228:	29 2f       	mov	r18, r25
    122a:	2f 93       	push	r18
    122c:	8f 93       	push	r24
    122e:	80 e1       	ldi	r24, 0x10	; 16
    1230:	91 e0       	ldi	r25, 0x01	; 1
    1232:	89 2f       	mov	r24, r25
    1234:	8f 93       	push	r24
    1236:	80 e1       	ldi	r24, 0x10	; 16
    1238:	91 e0       	ldi	r25, 0x01	; 1
    123a:	8f 93       	push	r24
    123c:	89 e6       	ldi	r24, 0x69	; 105
    123e:	93 e0       	ldi	r25, 0x03	; 3
    1240:	89 2f       	mov	r24, r25
    1242:	8f 93       	push	r24
    1244:	89 e6       	ldi	r24, 0x69	; 105
    1246:	93 e0       	ldi	r25, 0x03	; 3
    1248:	8f 93       	push	r24
    124a:	0e 94 3f 10 	call	0x207e	; 0x207e <sprintf>
    124e:	0f 90       	pop	r0
    1250:	0f 90       	pop	r0
    1252:	0f 90       	pop	r0
    1254:	0f 90       	pop	r0
    1256:	0f 90       	pop	r0
    1258:	0f 90       	pop	r0
	sprintf(freq, "%u", frequencia_carros_ms);
    125a:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <frequencia_carros_ms>
    125e:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <frequencia_carros_ms+0x1>
    1262:	a0 91 56 01 	lds	r26, 0x0156	; 0x800156 <frequencia_carros_ms+0x2>
    1266:	b0 91 57 01 	lds	r27, 0x0157	; 0x800157 <frequencia_carros_ms+0x3>
    126a:	2b 2f       	mov	r18, r27
    126c:	2f 93       	push	r18
    126e:	2a 2f       	mov	r18, r26
    1270:	2f 93       	push	r18
    1272:	29 2f       	mov	r18, r25
    1274:	2f 93       	push	r18
    1276:	8f 93       	push	r24
    1278:	80 e1       	ldi	r24, 0x10	; 16
    127a:	91 e0       	ldi	r25, 0x01	; 1
    127c:	89 2f       	mov	r24, r25
    127e:	8f 93       	push	r24
    1280:	80 e1       	ldi	r24, 0x10	; 16
    1282:	91 e0       	ldi	r25, 0x01	; 1
    1284:	8f 93       	push	r24
    1286:	85 e6       	ldi	r24, 0x65	; 101
    1288:	93 e0       	ldi	r25, 0x03	; 3
    128a:	89 2f       	mov	r24, r25
    128c:	8f 93       	push	r24
    128e:	85 e6       	ldi	r24, 0x65	; 101
    1290:	93 e0       	ldi	r25, 0x03	; 3
    1292:	8f 93       	push	r24
    1294:	0e 94 3f 10 	call	0x207e	; 0x207e <sprintf>
    1298:	8d b7       	in	r24, 0x3d	; 61
    129a:	9e b7       	in	r25, 0x3e	; 62
    129c:	08 96       	adiw	r24, 0x08	; 8
    129e:	0f b6       	in	r0, 0x3f	; 63
    12a0:	f8 94       	cli
    12a2:	de bf       	out	0x3e, r29	; 62
    12a4:	0f be       	out	0x3f, r0	; 63
    12a6:	cd bf       	out	0x3d, r28	; 61
	sprintf(LE_LUX, "%u",(1023000/ADC) - 1000);
    12a8:	88 e7       	ldi	r24, 0x78	; 120
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	fc 01       	movw	r30, r24
    12ae:	80 81       	ld	r24, Z
    12b0:	91 81       	ldd	r25, Z+1	; 0x01
    12b2:	9c 01       	movw	r18, r24
    12b4:	40 e0       	ldi	r20, 0x00	; 0
    12b6:	50 e0       	ldi	r21, 0x00	; 0
    12b8:	88 e1       	ldi	r24, 0x18	; 24
    12ba:	9c e9       	ldi	r25, 0x9C	; 156
    12bc:	af e0       	ldi	r26, 0x0F	; 15
    12be:	b0 e0       	ldi	r27, 0x00	; 0
    12c0:	bc 01       	movw	r22, r24
    12c2:	cd 01       	movw	r24, r26
    12c4:	0e 94 0c 10 	call	0x2018	; 0x2018 <__divmodsi4>
    12c8:	da 01       	movw	r26, r20
    12ca:	c9 01       	movw	r24, r18
    12cc:	88 5e       	subi	r24, 0xE8	; 232
    12ce:	93 40       	sbci	r25, 0x03	; 3
    12d0:	a1 09       	sbc	r26, r1
    12d2:	b1 09       	sbc	r27, r1
    12d4:	2b 2f       	mov	r18, r27
    12d6:	2f 93       	push	r18
    12d8:	2a 2f       	mov	r18, r26
    12da:	2f 93       	push	r18
    12dc:	29 2f       	mov	r18, r25
    12de:	2f 93       	push	r18
    12e0:	8f 93       	push	r24
    12e2:	80 e1       	ldi	r24, 0x10	; 16
    12e4:	91 e0       	ldi	r25, 0x01	; 1
    12e6:	89 2f       	mov	r24, r25
    12e8:	8f 93       	push	r24
    12ea:	80 e1       	ldi	r24, 0x10	; 16
    12ec:	91 e0       	ldi	r25, 0x01	; 1
    12ee:	8f 93       	push	r24
    12f0:	8d e6       	ldi	r24, 0x6D	; 109
    12f2:	93 e0       	ldi	r25, 0x03	; 3
    12f4:	89 2f       	mov	r24, r25
    12f6:	8f 93       	push	r24
    12f8:	8d e6       	ldi	r24, 0x6D	; 109
    12fa:	93 e0       	ldi	r25, 0x03	; 3
    12fc:	8f 93       	push	r24
    12fe:	0e 94 3f 10 	call	0x207e	; 0x207e <sprintf>
    1302:	8d b7       	in	r24, 0x3d	; 61
    1304:	9e b7       	in	r25, 0x3e	; 62
    1306:	08 96       	adiw	r24, 0x08	; 8
    1308:	0f b6       	in	r0, 0x3f	; 63
    130a:	f8 94       	cli
    130c:	de bf       	out	0x3e, r29	; 62
    130e:	0f be       	out	0x3f, r0	; 63
    1310:	cd bf       	out	0x3d, r28	; 61

	nokia_lcd_clear();
    1312:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <nokia_lcd_clear>

	nokia_lcd_set_cursor(48, 0);
    1316:	60 e0       	ldi	r22, 0x00	; 0
    1318:	80 e3       	ldi	r24, 0x30	; 48
    131a:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("|", 2);
    131e:	62 e0       	ldi	r22, 0x02	; 2
    1320:	83 e1       	ldi	r24, 0x13	; 19
    1322:	91 e0       	ldi	r25, 0x01	; 1
    1324:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
	nokia_lcd_set_cursor(48, 10);
    1328:	6a e0       	ldi	r22, 0x0A	; 10
    132a:	80 e3       	ldi	r24, 0x30	; 48
    132c:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("|", 2);
    1330:	62 e0       	ldi	r22, 0x02	; 2
    1332:	83 e1       	ldi	r24, 0x13	; 19
    1334:	91 e0       	ldi	r25, 0x01	; 1
    1336:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
	nokia_lcd_set_cursor(48, 20);
    133a:	64 e1       	ldi	r22, 0x14	; 20
    133c:	80 e3       	ldi	r24, 0x30	; 48
    133e:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("|", 2);
    1342:	62 e0       	ldi	r22, 0x02	; 2
    1344:	83 e1       	ldi	r24, 0x13	; 19
    1346:	91 e0       	ldi	r25, 0x01	; 1
    1348:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
	nokia_lcd_set_cursor(48, 30);
    134c:	6e e1       	ldi	r22, 0x1E	; 30
    134e:	80 e3       	ldi	r24, 0x30	; 48
    1350:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("|", 2);
    1354:	62 e0       	ldi	r22, 0x02	; 2
    1356:	83 e1       	ldi	r24, 0x13	; 19
    1358:	91 e0       	ldi	r25, 0x01	; 1
    135a:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
	nokia_lcd_set_cursor(48, 40);
    135e:	68 e2       	ldi	r22, 0x28	; 40
    1360:	80 e3       	ldi	r24, 0x30	; 48
    1362:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("|", 2);
    1366:	62 e0       	ldi	r22, 0x02	; 2
    1368:	83 e1       	ldi	r24, 0x13	; 19
    136a:	91 e0       	ldi	r25, 0x01	; 1
    136c:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>

	nokia_lcd_set_cursor(0, 0);
    1370:	60 e0       	ldi	r22, 0x00	; 0
    1372:	80 e0       	ldi	r24, 0x00	; 0
    1374:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Verm:", 1);
    1378:	61 e0       	ldi	r22, 0x01	; 1
    137a:	85 e1       	ldi	r24, 0x15	; 21
    137c:	91 e0       	ldi	r25, 0x01	; 1
    137e:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
	nokia_lcd_set_cursor(37, 0);
    1382:	60 e0       	ldi	r22, 0x00	; 0
    1384:	85 e2       	ldi	r24, 0x25	; 37
    1386:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(t_0, 1);
    138a:	61 e0       	ldi	r22, 0x01	; 1
    138c:	83 e6       	ldi	r24, 0x63	; 99
    138e:	93 e0       	ldi	r25, 0x03	; 3
    1390:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>

	nokia_lcd_set_cursor(0, 13);
    1394:	6d e0       	ldi	r22, 0x0D	; 13
    1396:	80 e0       	ldi	r24, 0x00	; 0
    1398:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Amar:", 1);
    139c:	61 e0       	ldi	r22, 0x01	; 1
    139e:	8b e1       	ldi	r24, 0x1B	; 27
    13a0:	91 e0       	ldi	r25, 0x01	; 1
    13a2:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
	nokia_lcd_set_cursor(37, 13);
    13a6:	6d e0       	ldi	r22, 0x0D	; 13
    13a8:	85 e2       	ldi	r24, 0x25	; 37
    13aa:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(t_1, 1);
    13ae:	61 e0       	ldi	r22, 0x01	; 1
    13b0:	81 e6       	ldi	r24, 0x61	; 97
    13b2:	93 e0       	ldi	r25, 0x03	; 3
    13b4:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>

	nokia_lcd_set_cursor(0, 27);
    13b8:	6b e1       	ldi	r22, 0x1B	; 27
    13ba:	80 e0       	ldi	r24, 0x00	; 0
    13bc:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Verde:", 1);
    13c0:	61 e0       	ldi	r22, 0x01	; 1
    13c2:	81 e2       	ldi	r24, 0x21	; 33
    13c4:	91 e0       	ldi	r25, 0x01	; 1
    13c6:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
	nokia_lcd_set_cursor(37, 27);
    13ca:	6b e1       	ldi	r22, 0x1B	; 27
    13cc:	85 e2       	ldi	r24, 0x25	; 37
    13ce:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(t_2, 1);
    13d2:	61 e0       	ldi	r22, 0x01	; 1
    13d4:	89 e6       	ldi	r24, 0x69	; 105
    13d6:	93 e0       	ldi	r25, 0x03	; 3
    13d8:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>

	if(selecao == 3 && conta_frequencia == 1)
    13dc:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
    13e0:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
    13e4:	03 97       	sbiw	r24, 0x03	; 3
    13e6:	81 f4       	brne	.+32     	; 0x1408 <LCD+0x2a2>
    13e8:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <conta_frequencia>
    13ec:	90 91 64 01 	lds	r25, 0x0164	; 0x800164 <conta_frequencia+0x1>
    13f0:	01 97       	sbiw	r24, 0x01	; 1
    13f2:	51 f4       	brne	.+20     	; 0x1408 <LCD+0x2a2>
	{
		nokia_lcd_set_cursor(0, 40);
    13f4:	68 e2       	ldi	r22, 0x28	; 40
    13f6:	80 e0       	ldi	r24, 0x00	; 0
    13f8:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Autom:", 1);
    13fc:	61 e0       	ldi	r22, 0x01	; 1
    13fe:	88 e2       	ldi	r24, 0x28	; 40
    1400:	91 e0       	ldi	r25, 0x01	; 1
    1402:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
    1406:	09 c0       	rjmp	.+18     	; 0x141a <LCD+0x2b4>

		}else {
		nokia_lcd_set_cursor(0, 40);
    1408:	68 e2       	ldi	r22, 0x28	; 40
    140a:	80 e0       	ldi	r24, 0x00	; 0
    140c:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Manual:", 1);
    1410:	61 e0       	ldi	r22, 0x01	; 1
    1412:	8f e2       	ldi	r24, 0x2F	; 47
    1414:	91 e0       	ldi	r25, 0x01	; 1
    1416:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
		//nokia_lcd_set_cursor(37, 42);
		//nokia_lcd_write_string(t_2, 1);
	}
	
	nokia_lcd_set_cursor(60, 5);
    141a:	65 e0       	ldi	r22, 0x05	; 5
    141c:	8c e3       	ldi	r24, 0x3C	; 60
    141e:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(vel, 1);
    1422:	61 e0       	ldi	r22, 0x01	; 1
    1424:	8b e6       	ldi	r24, 0x6B	; 107
    1426:	93 e0       	ldi	r25, 0x03	; 3
    1428:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
	nokia_lcd_set_cursor(60, 15);
    142c:	6f e0       	ldi	r22, 0x0F	; 15
    142e:	8c e3       	ldi	r24, 0x3C	; 60
    1430:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("VEL", 1);
    1434:	61 e0       	ldi	r22, 0x01	; 1
    1436:	87 e3       	ldi	r24, 0x37	; 55
    1438:	91 e0       	ldi	r25, 0x01	; 1
    143a:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
	/*nokia_lcd_set_cursor(60, 5);
	nokia_lcd_write_string(LE_LUX, 1);
	nokia_lcd_set_cursor(60, 15);
	nokia_lcd_write_string("LUX", 1);*/

	nokia_lcd_set_cursor(60, 25);
    143e:	69 e1       	ldi	r22, 0x19	; 25
    1440:	8c e3       	ldi	r24, 0x3C	; 60
    1442:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(freq, 1);
    1446:	61 e0       	ldi	r22, 0x01	; 1
    1448:	85 e6       	ldi	r24, 0x65	; 101
    144a:	93 e0       	ldi	r25, 0x03	; 3
    144c:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>
	nokia_lcd_set_cursor(60, 35);
    1450:	63 e2       	ldi	r22, 0x23	; 35
    1452:	8c e3       	ldi	r24, 0x3C	; 60
    1454:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("c/m", 1);
    1458:	61 e0       	ldi	r22, 0x01	; 1
    145a:	8b e3       	ldi	r24, 0x3B	; 59
    145c:	91 e0       	ldi	r25, 0x01	; 1
    145e:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>

	nokia_lcd_set_cursor(45, 0 + selecao * 13);
    1462:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <selecao>
    1466:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <selecao+0x1>
    146a:	98 2f       	mov	r25, r24
    146c:	8d e0       	ldi	r24, 0x0D	; 13
    146e:	98 9f       	mul	r25, r24
    1470:	80 2d       	mov	r24, r0
    1472:	11 24       	eor	r1, r1
    1474:	68 2f       	mov	r22, r24
    1476:	8d e2       	ldi	r24, 0x2D	; 45
    1478:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("<", 1);
    147c:	61 e0       	ldi	r22, 0x01	; 1
    147e:	8f e3       	ldi	r24, 0x3F	; 63
    1480:	91 e0       	ldi	r25, 0x01	; 1
    1482:	0e 94 57 0e 	call	0x1cae	; 0x1cae <nokia_lcd_write_string>

	nokia_lcd_render();
    1486:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <nokia_lcd_render>
}
    148a:	00 00       	nop
    148c:	0f 90       	pop	r0
    148e:	0f 90       	pop	r0
    1490:	0f 90       	pop	r0
    1492:	df 91       	pop	r29
    1494:	cf 91       	pop	r28
    1496:	08 95       	ret

00001498 <checalux>:

void checalux(){
    1498:	cf 93       	push	r28
    149a:	df 93       	push	r29
    149c:	cd b7       	in	r28, 0x3d	; 61
    149e:	de b7       	in	r29, 0x3e	; 62
	LUX = (1023000/ADC) - 1000;
    14a0:	88 e7       	ldi	r24, 0x78	; 120
    14a2:	90 e0       	ldi	r25, 0x00	; 0
    14a4:	fc 01       	movw	r30, r24
    14a6:	80 81       	ld	r24, Z
    14a8:	91 81       	ldd	r25, Z+1	; 0x01
    14aa:	9c 01       	movw	r18, r24
    14ac:	40 e0       	ldi	r20, 0x00	; 0
    14ae:	50 e0       	ldi	r21, 0x00	; 0
    14b0:	88 e1       	ldi	r24, 0x18	; 24
    14b2:	9c e9       	ldi	r25, 0x9C	; 156
    14b4:	af e0       	ldi	r26, 0x0F	; 15
    14b6:	b0 e0       	ldi	r27, 0x00	; 0
    14b8:	bc 01       	movw	r22, r24
    14ba:	cd 01       	movw	r24, r26
    14bc:	0e 94 0c 10 	call	0x2018	; 0x2018 <__divmodsi4>
    14c0:	da 01       	movw	r26, r20
    14c2:	c9 01       	movw	r24, r18
    14c4:	88 5e       	subi	r24, 0xE8	; 232
    14c6:	93 40       	sbci	r25, 0x03	; 3
    14c8:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <LUX+0x1>
    14cc:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <LUX>
	if(flag_500ms = 1){
    14d0:	81 e0       	ldi	r24, 0x01	; 1
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	a0 e0       	ldi	r26, 0x00	; 0
    14d6:	b0 e0       	ldi	r27, 0x00	; 0
    14d8:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <flag_500ms>
    14dc:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <flag_500ms+0x1>
    14e0:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <flag_500ms+0x2>
    14e4:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <flag_500ms+0x3>
		
		if((((1023000/ADC) - 1000) <= 300) && ((!(PINC & (1<<6))) || (frequencia_carros_ms > 0)))
    14e8:	88 e7       	ldi	r24, 0x78	; 120
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	fc 01       	movw	r30, r24
    14ee:	80 81       	ld	r24, Z
    14f0:	91 81       	ldd	r25, Z+1	; 0x01
    14f2:	9c 01       	movw	r18, r24
    14f4:	40 e0       	ldi	r20, 0x00	; 0
    14f6:	50 e0       	ldi	r21, 0x00	; 0
    14f8:	88 e1       	ldi	r24, 0x18	; 24
    14fa:	9c e9       	ldi	r25, 0x9C	; 156
    14fc:	af e0       	ldi	r26, 0x0F	; 15
    14fe:	b0 e0       	ldi	r27, 0x00	; 0
    1500:	bc 01       	movw	r22, r24
    1502:	cd 01       	movw	r24, r26
    1504:	0e 94 0c 10 	call	0x2018	; 0x2018 <__divmodsi4>
    1508:	da 01       	movw	r26, r20
    150a:	c9 01       	movw	r24, r18
    150c:	88 5e       	subi	r24, 0xE8	; 232
    150e:	93 40       	sbci	r25, 0x03	; 3
    1510:	a1 09       	sbc	r26, r1
    1512:	b1 09       	sbc	r27, r1
    1514:	8d 32       	cpi	r24, 0x2D	; 45
    1516:	91 40       	sbci	r25, 0x01	; 1
    1518:	a1 05       	cpc	r26, r1
    151a:	b1 05       	cpc	r27, r1
    151c:	e4 f4       	brge	.+56     	; 0x1556 <checalux+0xbe>
    151e:	86 e2       	ldi	r24, 0x26	; 38
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	fc 01       	movw	r30, r24
    1524:	80 81       	ld	r24, Z
    1526:	88 2f       	mov	r24, r24
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	80 74       	andi	r24, 0x40	; 64
    152c:	99 27       	eor	r25, r25
    152e:	89 2b       	or	r24, r25
    1530:	61 f0       	breq	.+24     	; 0x154a <checalux+0xb2>
    1532:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <frequencia_carros_ms>
    1536:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <frequencia_carros_ms+0x1>
    153a:	a0 91 56 01 	lds	r26, 0x0156	; 0x800156 <frequencia_carros_ms+0x2>
    153e:	b0 91 57 01 	lds	r27, 0x0157	; 0x800157 <frequencia_carros_ms+0x3>
    1542:	89 2b       	or	r24, r25
    1544:	8a 2b       	or	r24, r26
    1546:	8b 2b       	or	r24, r27
    1548:	31 f0       	breq	.+12     	; 0x1556 <checalux+0xbe>
		{
		OCR2B = 250;}
    154a:	84 eb       	ldi	r24, 0xB4	; 180
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	2a ef       	ldi	r18, 0xFA	; 250
    1550:	fc 01       	movw	r30, r24
    1552:	20 83       	st	Z, r18
    1554:	3b c0       	rjmp	.+118    	; 0x15cc <checalux+0x134>
		
		else if((((1023000/ADC) - 1000) <= 300) &&  !(!(PINC & (1<<6)) || (frequencia_carros_ms > 0)))
    1556:	88 e7       	ldi	r24, 0x78	; 120
    1558:	90 e0       	ldi	r25, 0x00	; 0
    155a:	fc 01       	movw	r30, r24
    155c:	80 81       	ld	r24, Z
    155e:	91 81       	ldd	r25, Z+1	; 0x01
    1560:	9c 01       	movw	r18, r24
    1562:	40 e0       	ldi	r20, 0x00	; 0
    1564:	50 e0       	ldi	r21, 0x00	; 0
    1566:	88 e1       	ldi	r24, 0x18	; 24
    1568:	9c e9       	ldi	r25, 0x9C	; 156
    156a:	af e0       	ldi	r26, 0x0F	; 15
    156c:	b0 e0       	ldi	r27, 0x00	; 0
    156e:	bc 01       	movw	r22, r24
    1570:	cd 01       	movw	r24, r26
    1572:	0e 94 0c 10 	call	0x2018	; 0x2018 <__divmodsi4>
    1576:	da 01       	movw	r26, r20
    1578:	c9 01       	movw	r24, r18
    157a:	88 5e       	subi	r24, 0xE8	; 232
    157c:	93 40       	sbci	r25, 0x03	; 3
    157e:	a1 09       	sbc	r26, r1
    1580:	b1 09       	sbc	r27, r1
    1582:	8d 32       	cpi	r24, 0x2D	; 45
    1584:	91 40       	sbci	r25, 0x01	; 1
    1586:	a1 05       	cpc	r26, r1
    1588:	b1 05       	cpc	r27, r1
    158a:	e4 f4       	brge	.+56     	; 0x15c4 <checalux+0x12c>
    158c:	86 e2       	ldi	r24, 0x26	; 38
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	fc 01       	movw	r30, r24
    1592:	80 81       	ld	r24, Z
    1594:	88 2f       	mov	r24, r24
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	80 74       	andi	r24, 0x40	; 64
    159a:	99 27       	eor	r25, r25
    159c:	89 2b       	or	r24, r25
    159e:	91 f0       	breq	.+36     	; 0x15c4 <checalux+0x12c>
    15a0:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <frequencia_carros_ms>
    15a4:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <frequencia_carros_ms+0x1>
    15a8:	a0 91 56 01 	lds	r26, 0x0156	; 0x800156 <frequencia_carros_ms+0x2>
    15ac:	b0 91 57 01 	lds	r27, 0x0157	; 0x800157 <frequencia_carros_ms+0x3>
    15b0:	89 2b       	or	r24, r25
    15b2:	8a 2b       	or	r24, r26
    15b4:	8b 2b       	or	r24, r27
    15b6:	31 f4       	brne	.+12     	; 0x15c4 <checalux+0x12c>
		{
			OCR2B = 77;
    15b8:	84 eb       	ldi	r24, 0xB4	; 180
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	2d e4       	ldi	r18, 0x4D	; 77
    15be:	fc 01       	movw	r30, r24
    15c0:	20 83       	st	Z, r18
    15c2:	04 c0       	rjmp	.+8      	; 0x15cc <checalux+0x134>
		}
		
		else{
			OCR2B = 0;
    15c4:	84 eb       	ldi	r24, 0xB4	; 180
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	fc 01       	movw	r30, r24
    15ca:	10 82       	st	Z, r1
		}
		
	}
	LCD(vermelho,amarelo,verde);
    15cc:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <verde>
    15d0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <amarelo>
    15d4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    15d8:	42 2f       	mov	r20, r18
    15da:	69 2f       	mov	r22, r25
    15dc:	0e 94 b3 08 	call	0x1166	; 0x1166 <LCD>
}
    15e0:	00 00       	nop
    15e2:	df 91       	pop	r29
    15e4:	cf 91       	pop	r28
    15e6:	08 95       	ret

000015e8 <USART_Transmit>:

void USART_Transmit(unsigned char data)
{
    15e8:	cf 93       	push	r28
    15ea:	df 93       	push	r29
    15ec:	1f 92       	push	r1
    15ee:	cd b7       	in	r28, 0x3d	; 61
    15f0:	de b7       	in	r29, 0x3e	; 62
    15f2:	89 83       	std	Y+1, r24	; 0x01
	while(!( UCSR0A & (1<<UDRE0))); // Espera a limpeza do registrador de transmissão 
    15f4:	00 00       	nop
    15f6:	80 ec       	ldi	r24, 0xC0	; 192
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	fc 01       	movw	r30, r24
    15fc:	80 81       	ld	r24, Z
    15fe:	88 2f       	mov	r24, r24
    1600:	90 e0       	ldi	r25, 0x00	; 0
    1602:	80 72       	andi	r24, 0x20	; 32
    1604:	99 27       	eor	r25, r25
    1606:	89 2b       	or	r24, r25
    1608:	b1 f3       	breq	.-20     	; 0x15f6 <USART_Transmit+0xe>
	UDR0 = data;					// Coloca o dado no registrador e o envia
    160a:	86 ec       	ldi	r24, 0xC6	; 198
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	29 81       	ldd	r18, Y+1	; 0x01
    1610:	fc 01       	movw	r30, r24
    1612:	20 83       	st	Z, r18
}
    1614:	00 00       	nop
    1616:	0f 90       	pop	r0
    1618:	df 91       	pop	r29
    161a:	cf 91       	pop	r28
    161c:	08 95       	ret

0000161e <write>:
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
}
    161e:	1f 93       	push	r17
    1620:	cf 93       	push	r28
    1622:	df 93       	push	r29
    1624:	00 d0       	rcall	.+0      	; 0x1626 <write+0x8>
    1626:	cd b7       	in	r28, 0x3d	; 61
    1628:	de b7       	in	r29, 0x3e	; 62
    162a:	89 83       	std	Y+1, r24	; 0x01
    162c:	6a 83       	std	Y+2, r22	; 0x02
    162e:	88 e2       	ldi	r24, 0x28	; 40
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	28 e2       	ldi	r18, 0x28	; 40
    1634:	30 e0       	ldi	r19, 0x00	; 0
    1636:	f9 01       	movw	r30, r18
    1638:	20 81       	ld	r18, Z
    163a:	2d 7f       	andi	r18, 0xFD	; 253
    163c:	fc 01       	movw	r30, r24
    163e:	20 83       	st	Z, r18
    1640:	8a 81       	ldd	r24, Y+2	; 0x02
    1642:	88 23       	and	r24, r24
    1644:	51 f0       	breq	.+20     	; 0x165a <write+0x3c>
    1646:	88 e2       	ldi	r24, 0x28	; 40
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	28 e2       	ldi	r18, 0x28	; 40
    164c:	30 e0       	ldi	r19, 0x00	; 0
    164e:	f9 01       	movw	r30, r18
    1650:	20 81       	ld	r18, Z
    1652:	28 60       	ori	r18, 0x08	; 8
    1654:	fc 01       	movw	r30, r24
    1656:	20 83       	st	Z, r18
    1658:	09 c0       	rjmp	.+18     	; 0x166c <write+0x4e>
    165a:	88 e2       	ldi	r24, 0x28	; 40
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	28 e2       	ldi	r18, 0x28	; 40
    1660:	30 e0       	ldi	r19, 0x00	; 0
    1662:	f9 01       	movw	r30, r18
    1664:	20 81       	ld	r18, Z
    1666:	27 7f       	andi	r18, 0xF7	; 247
    1668:	fc 01       	movw	r30, r24
    166a:	20 83       	st	Z, r18
    166c:	10 e0       	ldi	r17, 0x00	; 0
    166e:	3c c0       	rjmp	.+120    	; 0x16e8 <write+0xca>
    1670:	89 81       	ldd	r24, Y+1	; 0x01
    1672:	88 2f       	mov	r24, r24
    1674:	90 e0       	ldi	r25, 0x00	; 0
    1676:	21 2f       	mov	r18, r17
    1678:	30 e0       	ldi	r19, 0x00	; 0
    167a:	47 e0       	ldi	r20, 0x07	; 7
    167c:	50 e0       	ldi	r21, 0x00	; 0
    167e:	ba 01       	movw	r22, r20
    1680:	62 1b       	sub	r22, r18
    1682:	73 0b       	sbc	r23, r19
    1684:	9b 01       	movw	r18, r22
    1686:	02 c0       	rjmp	.+4      	; 0x168c <write+0x6e>
    1688:	95 95       	asr	r25
    168a:	87 95       	ror	r24
    168c:	2a 95       	dec	r18
    168e:	e2 f7       	brpl	.-8      	; 0x1688 <write+0x6a>
    1690:	81 70       	andi	r24, 0x01	; 1
    1692:	99 27       	eor	r25, r25
    1694:	89 2b       	or	r24, r25
    1696:	51 f0       	breq	.+20     	; 0x16ac <write+0x8e>
    1698:	88 e2       	ldi	r24, 0x28	; 40
    169a:	90 e0       	ldi	r25, 0x00	; 0
    169c:	28 e2       	ldi	r18, 0x28	; 40
    169e:	30 e0       	ldi	r19, 0x00	; 0
    16a0:	f9 01       	movw	r30, r18
    16a2:	20 81       	ld	r18, Z
    16a4:	20 61       	ori	r18, 0x10	; 16
    16a6:	fc 01       	movw	r30, r24
    16a8:	20 83       	st	Z, r18
    16aa:	09 c0       	rjmp	.+18     	; 0x16be <write+0xa0>
    16ac:	88 e2       	ldi	r24, 0x28	; 40
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	28 e2       	ldi	r18, 0x28	; 40
    16b2:	30 e0       	ldi	r19, 0x00	; 0
    16b4:	f9 01       	movw	r30, r18
    16b6:	20 81       	ld	r18, Z
    16b8:	2f 7e       	andi	r18, 0xEF	; 239
    16ba:	fc 01       	movw	r30, r24
    16bc:	20 83       	st	Z, r18
    16be:	88 e2       	ldi	r24, 0x28	; 40
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	28 e2       	ldi	r18, 0x28	; 40
    16c4:	30 e0       	ldi	r19, 0x00	; 0
    16c6:	f9 01       	movw	r30, r18
    16c8:	20 81       	ld	r18, Z
    16ca:	20 62       	ori	r18, 0x20	; 32
    16cc:	fc 01       	movw	r30, r24
    16ce:	20 83       	st	Z, r18
    16d0:	88 e2       	ldi	r24, 0x28	; 40
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	28 e2       	ldi	r18, 0x28	; 40
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	f9 01       	movw	r30, r18
    16da:	20 81       	ld	r18, Z
    16dc:	2f 7d       	andi	r18, 0xDF	; 223
    16de:	fc 01       	movw	r30, r24
    16e0:	20 83       	st	Z, r18
    16e2:	81 2f       	mov	r24, r17
    16e4:	11 e0       	ldi	r17, 0x01	; 1
    16e6:	18 0f       	add	r17, r24
    16e8:	18 30       	cpi	r17, 0x08	; 8
    16ea:	10 f2       	brcs	.-124    	; 0x1670 <write+0x52>
    16ec:	88 e2       	ldi	r24, 0x28	; 40
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	28 e2       	ldi	r18, 0x28	; 40
    16f2:	30 e0       	ldi	r19, 0x00	; 0
    16f4:	f9 01       	movw	r30, r18
    16f6:	20 81       	ld	r18, Z
    16f8:	22 60       	ori	r18, 0x02	; 2
    16fa:	fc 01       	movw	r30, r24
    16fc:	20 83       	st	Z, r18
    16fe:	00 00       	nop
    1700:	0f 90       	pop	r0
    1702:	0f 90       	pop	r0
    1704:	df 91       	pop	r29
    1706:	cf 91       	pop	r28
    1708:	1f 91       	pop	r17
    170a:	08 95       	ret

0000170c <write_cmd>:
    170c:	cf 93       	push	r28
    170e:	df 93       	push	r29
    1710:	1f 92       	push	r1
    1712:	cd b7       	in	r28, 0x3d	; 61
    1714:	de b7       	in	r29, 0x3e	; 62
    1716:	89 83       	std	Y+1, r24	; 0x01
    1718:	60 e0       	ldi	r22, 0x00	; 0
    171a:	89 81       	ldd	r24, Y+1	; 0x01
    171c:	0e 94 0f 0b 	call	0x161e	; 0x161e <write>
    1720:	00 00       	nop
    1722:	0f 90       	pop	r0
    1724:	df 91       	pop	r29
    1726:	cf 91       	pop	r28
    1728:	08 95       	ret

0000172a <write_data>:
    172a:	cf 93       	push	r28
    172c:	df 93       	push	r29
    172e:	1f 92       	push	r1
    1730:	cd b7       	in	r28, 0x3d	; 61
    1732:	de b7       	in	r29, 0x3e	; 62
    1734:	89 83       	std	Y+1, r24	; 0x01
    1736:	61 e0       	ldi	r22, 0x01	; 1
    1738:	89 81       	ldd	r24, Y+1	; 0x01
    173a:	0e 94 0f 0b 	call	0x161e	; 0x161e <write>
    173e:	00 00       	nop
    1740:	0f 90       	pop	r0
    1742:	df 91       	pop	r29
    1744:	cf 91       	pop	r28
    1746:	08 95       	ret

00001748 <nokia_lcd_init>:
    1748:	0f 93       	push	r16
    174a:	1f 93       	push	r17
    174c:	cf 93       	push	r28
    174e:	df 93       	push	r29
    1750:	cd b7       	in	r28, 0x3d	; 61
    1752:	de b7       	in	r29, 0x3e	; 62
    1754:	6c 97       	sbiw	r28, 0x1c	; 28
    1756:	0f b6       	in	r0, 0x3f	; 63
    1758:	f8 94       	cli
    175a:	de bf       	out	0x3e, r29	; 62
    175c:	0f be       	out	0x3f, r0	; 63
    175e:	cd bf       	out	0x3d, r28	; 61
    1760:	87 e2       	ldi	r24, 0x27	; 39
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	27 e2       	ldi	r18, 0x27	; 39
    1766:	30 e0       	ldi	r19, 0x00	; 0
    1768:	f9 01       	movw	r30, r18
    176a:	20 81       	ld	r18, Z
    176c:	22 60       	ori	r18, 0x02	; 2
    176e:	fc 01       	movw	r30, r24
    1770:	20 83       	st	Z, r18
    1772:	87 e2       	ldi	r24, 0x27	; 39
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	27 e2       	ldi	r18, 0x27	; 39
    1778:	30 e0       	ldi	r19, 0x00	; 0
    177a:	f9 01       	movw	r30, r18
    177c:	20 81       	ld	r18, Z
    177e:	24 60       	ori	r18, 0x04	; 4
    1780:	fc 01       	movw	r30, r24
    1782:	20 83       	st	Z, r18
    1784:	87 e2       	ldi	r24, 0x27	; 39
    1786:	90 e0       	ldi	r25, 0x00	; 0
    1788:	27 e2       	ldi	r18, 0x27	; 39
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	f9 01       	movw	r30, r18
    178e:	20 81       	ld	r18, Z
    1790:	28 60       	ori	r18, 0x08	; 8
    1792:	fc 01       	movw	r30, r24
    1794:	20 83       	st	Z, r18
    1796:	87 e2       	ldi	r24, 0x27	; 39
    1798:	90 e0       	ldi	r25, 0x00	; 0
    179a:	27 e2       	ldi	r18, 0x27	; 39
    179c:	30 e0       	ldi	r19, 0x00	; 0
    179e:	f9 01       	movw	r30, r18
    17a0:	20 81       	ld	r18, Z
    17a2:	20 61       	ori	r18, 0x10	; 16
    17a4:	fc 01       	movw	r30, r24
    17a6:	20 83       	st	Z, r18
    17a8:	87 e2       	ldi	r24, 0x27	; 39
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	27 e2       	ldi	r18, 0x27	; 39
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	f9 01       	movw	r30, r18
    17b2:	20 81       	ld	r18, Z
    17b4:	20 62       	ori	r18, 0x20	; 32
    17b6:	fc 01       	movw	r30, r24
    17b8:	20 83       	st	Z, r18
    17ba:	88 e2       	ldi	r24, 0x28	; 40
    17bc:	90 e0       	ldi	r25, 0x00	; 0
    17be:	28 e2       	ldi	r18, 0x28	; 40
    17c0:	30 e0       	ldi	r19, 0x00	; 0
    17c2:	f9 01       	movw	r30, r18
    17c4:	20 81       	ld	r18, Z
    17c6:	24 60       	ori	r18, 0x04	; 4
    17c8:	fc 01       	movw	r30, r24
    17ca:	20 83       	st	Z, r18
    17cc:	88 e2       	ldi	r24, 0x28	; 40
    17ce:	90 e0       	ldi	r25, 0x00	; 0
    17d0:	28 e2       	ldi	r18, 0x28	; 40
    17d2:	30 e0       	ldi	r19, 0x00	; 0
    17d4:	f9 01       	movw	r30, r18
    17d6:	20 81       	ld	r18, Z
    17d8:	22 60       	ori	r18, 0x02	; 2
    17da:	fc 01       	movw	r30, r24
    17dc:	20 83       	st	Z, r18
    17de:	80 e0       	ldi	r24, 0x00	; 0
    17e0:	90 e0       	ldi	r25, 0x00	; 0
    17e2:	a0 e2       	ldi	r26, 0x20	; 32
    17e4:	b1 e4       	ldi	r27, 0x41	; 65
    17e6:	89 83       	std	Y+1, r24	; 0x01
    17e8:	9a 83       	std	Y+2, r25	; 0x02
    17ea:	ab 83       	std	Y+3, r26	; 0x03
    17ec:	bc 83       	std	Y+4, r27	; 0x04
    17ee:	20 e0       	ldi	r18, 0x00	; 0
    17f0:	30 e0       	ldi	r19, 0x00	; 0
    17f2:	4a e7       	ldi	r20, 0x7A	; 122
    17f4:	53 e4       	ldi	r21, 0x43	; 67
    17f6:	69 81       	ldd	r22, Y+1	; 0x01
    17f8:	7a 81       	ldd	r23, Y+2	; 0x02
    17fa:	8b 81       	ldd	r24, Y+3	; 0x03
    17fc:	9c 81       	ldd	r25, Y+4	; 0x04
    17fe:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <__mulsf3>
    1802:	dc 01       	movw	r26, r24
    1804:	cb 01       	movw	r24, r22
    1806:	8b 8b       	std	Y+19, r24	; 0x13
    1808:	9c 8b       	std	Y+20, r25	; 0x14
    180a:	ad 8b       	std	Y+21, r26	; 0x15
    180c:	be 8b       	std	Y+22, r27	; 0x16
    180e:	20 e0       	ldi	r18, 0x00	; 0
    1810:	30 e0       	ldi	r19, 0x00	; 0
    1812:	40 e8       	ldi	r20, 0x80	; 128
    1814:	5f e3       	ldi	r21, 0x3F	; 63
    1816:	6b 89       	ldd	r22, Y+19	; 0x13
    1818:	7c 89       	ldd	r23, Y+20	; 0x14
    181a:	8d 89       	ldd	r24, Y+21	; 0x15
    181c:	9e 89       	ldd	r25, Y+22	; 0x16
    181e:	0e 94 af 0e 	call	0x1d5e	; 0x1d5e <__cmpsf2>
    1822:	88 23       	and	r24, r24
    1824:	2c f4       	brge	.+10     	; 0x1830 <nokia_lcd_init+0xe8>
    1826:	81 e0       	ldi	r24, 0x01	; 1
    1828:	90 e0       	ldi	r25, 0x00	; 0
    182a:	98 8f       	std	Y+24, r25	; 0x18
    182c:	8f 8b       	std	Y+23, r24	; 0x17
    182e:	3f c0       	rjmp	.+126    	; 0x18ae <nokia_lcd_init+0x166>
    1830:	20 e0       	ldi	r18, 0x00	; 0
    1832:	3f ef       	ldi	r19, 0xFF	; 255
    1834:	4f e7       	ldi	r20, 0x7F	; 127
    1836:	57 e4       	ldi	r21, 0x47	; 71
    1838:	6b 89       	ldd	r22, Y+19	; 0x13
    183a:	7c 89       	ldd	r23, Y+20	; 0x14
    183c:	8d 89       	ldd	r24, Y+21	; 0x15
    183e:	9e 89       	ldd	r25, Y+22	; 0x16
    1840:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <__gesf2>
    1844:	18 16       	cp	r1, r24
    1846:	4c f5       	brge	.+82     	; 0x189a <nokia_lcd_init+0x152>
    1848:	20 e0       	ldi	r18, 0x00	; 0
    184a:	30 e0       	ldi	r19, 0x00	; 0
    184c:	40 e2       	ldi	r20, 0x20	; 32
    184e:	51 e4       	ldi	r21, 0x41	; 65
    1850:	69 81       	ldd	r22, Y+1	; 0x01
    1852:	7a 81       	ldd	r23, Y+2	; 0x02
    1854:	8b 81       	ldd	r24, Y+3	; 0x03
    1856:	9c 81       	ldd	r25, Y+4	; 0x04
    1858:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <__mulsf3>
    185c:	dc 01       	movw	r26, r24
    185e:	cb 01       	movw	r24, r22
    1860:	bc 01       	movw	r22, r24
    1862:	cd 01       	movw	r24, r26
    1864:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <__fixunssfsi>
    1868:	dc 01       	movw	r26, r24
    186a:	cb 01       	movw	r24, r22
    186c:	98 8f       	std	Y+24, r25	; 0x18
    186e:	8f 8b       	std	Y+23, r24	; 0x17
    1870:	0f c0       	rjmp	.+30     	; 0x1890 <nokia_lcd_init+0x148>
    1872:	89 e1       	ldi	r24, 0x19	; 25
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	9a 8f       	std	Y+26, r25	; 0x1a
    1878:	89 8f       	std	Y+25, r24	; 0x19
    187a:	89 8d       	ldd	r24, Y+25	; 0x19
    187c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    187e:	01 97       	sbiw	r24, 0x01	; 1
    1880:	f1 f7       	brne	.-4      	; 0x187e <nokia_lcd_init+0x136>
    1882:	9a 8f       	std	Y+26, r25	; 0x1a
    1884:	89 8f       	std	Y+25, r24	; 0x19
    1886:	8f 89       	ldd	r24, Y+23	; 0x17
    1888:	98 8d       	ldd	r25, Y+24	; 0x18
    188a:	01 97       	sbiw	r24, 0x01	; 1
    188c:	98 8f       	std	Y+24, r25	; 0x18
    188e:	8f 8b       	std	Y+23, r24	; 0x17
    1890:	8f 89       	ldd	r24, Y+23	; 0x17
    1892:	98 8d       	ldd	r25, Y+24	; 0x18
    1894:	89 2b       	or	r24, r25
    1896:	69 f7       	brne	.-38     	; 0x1872 <nokia_lcd_init+0x12a>
    1898:	14 c0       	rjmp	.+40     	; 0x18c2 <nokia_lcd_init+0x17a>
    189a:	6b 89       	ldd	r22, Y+19	; 0x13
    189c:	7c 89       	ldd	r23, Y+20	; 0x14
    189e:	8d 89       	ldd	r24, Y+21	; 0x15
    18a0:	9e 89       	ldd	r25, Y+22	; 0x16
    18a2:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <__fixunssfsi>
    18a6:	dc 01       	movw	r26, r24
    18a8:	cb 01       	movw	r24, r22
    18aa:	98 8f       	std	Y+24, r25	; 0x18
    18ac:	8f 8b       	std	Y+23, r24	; 0x17
    18ae:	8f 89       	ldd	r24, Y+23	; 0x17
    18b0:	98 8d       	ldd	r25, Y+24	; 0x18
    18b2:	9c 8f       	std	Y+28, r25	; 0x1c
    18b4:	8b 8f       	std	Y+27, r24	; 0x1b
    18b6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18b8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18ba:	01 97       	sbiw	r24, 0x01	; 1
    18bc:	f1 f7       	brne	.-4      	; 0x18ba <nokia_lcd_init+0x172>
    18be:	9c 8f       	std	Y+28, r25	; 0x1c
    18c0:	8b 8f       	std	Y+27, r24	; 0x1b
    18c2:	88 e2       	ldi	r24, 0x28	; 40
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	28 e2       	ldi	r18, 0x28	; 40
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	f9 01       	movw	r30, r18
    18cc:	20 81       	ld	r18, Z
    18ce:	2b 7f       	andi	r18, 0xFB	; 251
    18d0:	fc 01       	movw	r30, r24
    18d2:	20 83       	st	Z, r18
    18d4:	80 e0       	ldi	r24, 0x00	; 0
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	ac e8       	ldi	r26, 0x8C	; 140
    18da:	b2 e4       	ldi	r27, 0x42	; 66
    18dc:	8d 83       	std	Y+5, r24	; 0x05
    18de:	9e 83       	std	Y+6, r25	; 0x06
    18e0:	af 83       	std	Y+7, r26	; 0x07
    18e2:	b8 87       	std	Y+8, r27	; 0x08
    18e4:	20 e0       	ldi	r18, 0x00	; 0
    18e6:	30 e0       	ldi	r19, 0x00	; 0
    18e8:	4a e7       	ldi	r20, 0x7A	; 122
    18ea:	53 e4       	ldi	r21, 0x43	; 67
    18ec:	6d 81       	ldd	r22, Y+5	; 0x05
    18ee:	7e 81       	ldd	r23, Y+6	; 0x06
    18f0:	8f 81       	ldd	r24, Y+7	; 0x07
    18f2:	98 85       	ldd	r25, Y+8	; 0x08
    18f4:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <__mulsf3>
    18f8:	dc 01       	movw	r26, r24
    18fa:	cb 01       	movw	r24, r22
    18fc:	89 87       	std	Y+9, r24	; 0x09
    18fe:	9a 87       	std	Y+10, r25	; 0x0a
    1900:	ab 87       	std	Y+11, r26	; 0x0b
    1902:	bc 87       	std	Y+12, r27	; 0x0c
    1904:	20 e0       	ldi	r18, 0x00	; 0
    1906:	30 e0       	ldi	r19, 0x00	; 0
    1908:	40 e8       	ldi	r20, 0x80	; 128
    190a:	5f e3       	ldi	r21, 0x3F	; 63
    190c:	69 85       	ldd	r22, Y+9	; 0x09
    190e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1910:	8b 85       	ldd	r24, Y+11	; 0x0b
    1912:	9c 85       	ldd	r25, Y+12	; 0x0c
    1914:	0e 94 af 0e 	call	0x1d5e	; 0x1d5e <__cmpsf2>
    1918:	88 23       	and	r24, r24
    191a:	2c f4       	brge	.+10     	; 0x1926 <nokia_lcd_init+0x1de>
    191c:	81 e0       	ldi	r24, 0x01	; 1
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	9e 87       	std	Y+14, r25	; 0x0e
    1922:	8d 87       	std	Y+13, r24	; 0x0d
    1924:	3f c0       	rjmp	.+126    	; 0x19a4 <nokia_lcd_init+0x25c>
    1926:	20 e0       	ldi	r18, 0x00	; 0
    1928:	3f ef       	ldi	r19, 0xFF	; 255
    192a:	4f e7       	ldi	r20, 0x7F	; 127
    192c:	57 e4       	ldi	r21, 0x47	; 71
    192e:	69 85       	ldd	r22, Y+9	; 0x09
    1930:	7a 85       	ldd	r23, Y+10	; 0x0a
    1932:	8b 85       	ldd	r24, Y+11	; 0x0b
    1934:	9c 85       	ldd	r25, Y+12	; 0x0c
    1936:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <__gesf2>
    193a:	18 16       	cp	r1, r24
    193c:	4c f5       	brge	.+82     	; 0x1990 <nokia_lcd_init+0x248>
    193e:	20 e0       	ldi	r18, 0x00	; 0
    1940:	30 e0       	ldi	r19, 0x00	; 0
    1942:	40 e2       	ldi	r20, 0x20	; 32
    1944:	51 e4       	ldi	r21, 0x41	; 65
    1946:	6d 81       	ldd	r22, Y+5	; 0x05
    1948:	7e 81       	ldd	r23, Y+6	; 0x06
    194a:	8f 81       	ldd	r24, Y+7	; 0x07
    194c:	98 85       	ldd	r25, Y+8	; 0x08
    194e:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <__mulsf3>
    1952:	dc 01       	movw	r26, r24
    1954:	cb 01       	movw	r24, r22
    1956:	bc 01       	movw	r22, r24
    1958:	cd 01       	movw	r24, r26
    195a:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <__fixunssfsi>
    195e:	dc 01       	movw	r26, r24
    1960:	cb 01       	movw	r24, r22
    1962:	9e 87       	std	Y+14, r25	; 0x0e
    1964:	8d 87       	std	Y+13, r24	; 0x0d
    1966:	0f c0       	rjmp	.+30     	; 0x1986 <nokia_lcd_init+0x23e>
    1968:	89 e1       	ldi	r24, 0x19	; 25
    196a:	90 e0       	ldi	r25, 0x00	; 0
    196c:	98 8b       	std	Y+16, r25	; 0x10
    196e:	8f 87       	std	Y+15, r24	; 0x0f
    1970:	8f 85       	ldd	r24, Y+15	; 0x0f
    1972:	98 89       	ldd	r25, Y+16	; 0x10
    1974:	01 97       	sbiw	r24, 0x01	; 1
    1976:	f1 f7       	brne	.-4      	; 0x1974 <nokia_lcd_init+0x22c>
    1978:	98 8b       	std	Y+16, r25	; 0x10
    197a:	8f 87       	std	Y+15, r24	; 0x0f
    197c:	8d 85       	ldd	r24, Y+13	; 0x0d
    197e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1980:	01 97       	sbiw	r24, 0x01	; 1
    1982:	9e 87       	std	Y+14, r25	; 0x0e
    1984:	8d 87       	std	Y+13, r24	; 0x0d
    1986:	8d 85       	ldd	r24, Y+13	; 0x0d
    1988:	9e 85       	ldd	r25, Y+14	; 0x0e
    198a:	89 2b       	or	r24, r25
    198c:	69 f7       	brne	.-38     	; 0x1968 <nokia_lcd_init+0x220>
    198e:	14 c0       	rjmp	.+40     	; 0x19b8 <nokia_lcd_init+0x270>
    1990:	69 85       	ldd	r22, Y+9	; 0x09
    1992:	7a 85       	ldd	r23, Y+10	; 0x0a
    1994:	8b 85       	ldd	r24, Y+11	; 0x0b
    1996:	9c 85       	ldd	r25, Y+12	; 0x0c
    1998:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <__fixunssfsi>
    199c:	dc 01       	movw	r26, r24
    199e:	cb 01       	movw	r24, r22
    19a0:	9e 87       	std	Y+14, r25	; 0x0e
    19a2:	8d 87       	std	Y+13, r24	; 0x0d
    19a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    19a6:	9e 85       	ldd	r25, Y+14	; 0x0e
    19a8:	9a 8b       	std	Y+18, r25	; 0x12
    19aa:	89 8b       	std	Y+17, r24	; 0x11
    19ac:	89 89       	ldd	r24, Y+17	; 0x11
    19ae:	9a 89       	ldd	r25, Y+18	; 0x12
    19b0:	01 97       	sbiw	r24, 0x01	; 1
    19b2:	f1 f7       	brne	.-4      	; 0x19b0 <nokia_lcd_init+0x268>
    19b4:	9a 8b       	std	Y+18, r25	; 0x12
    19b6:	89 8b       	std	Y+17, r24	; 0x11
    19b8:	88 e2       	ldi	r24, 0x28	; 40
    19ba:	90 e0       	ldi	r25, 0x00	; 0
    19bc:	28 e2       	ldi	r18, 0x28	; 40
    19be:	30 e0       	ldi	r19, 0x00	; 0
    19c0:	f9 01       	movw	r30, r18
    19c2:	20 81       	ld	r18, Z
    19c4:	24 60       	ori	r18, 0x04	; 4
    19c6:	fc 01       	movw	r30, r24
    19c8:	20 83       	st	Z, r18
    19ca:	88 e2       	ldi	r24, 0x28	; 40
    19cc:	90 e0       	ldi	r25, 0x00	; 0
    19ce:	28 e2       	ldi	r18, 0x28	; 40
    19d0:	30 e0       	ldi	r19, 0x00	; 0
    19d2:	f9 01       	movw	r30, r18
    19d4:	20 81       	ld	r18, Z
    19d6:	2d 7f       	andi	r18, 0xFD	; 253
    19d8:	fc 01       	movw	r30, r24
    19da:	20 83       	st	Z, r18
    19dc:	81 e2       	ldi	r24, 0x21	; 33
    19de:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    19e2:	83 e1       	ldi	r24, 0x13	; 19
    19e4:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    19e8:	86 e0       	ldi	r24, 0x06	; 6
    19ea:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    19ee:	82 ec       	ldi	r24, 0xC2	; 194
    19f0:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    19f4:	80 e2       	ldi	r24, 0x20	; 32
    19f6:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    19fa:	89 e0       	ldi	r24, 0x09	; 9
    19fc:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    1a00:	80 e8       	ldi	r24, 0x80	; 128
    1a02:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    1a06:	80 e4       	ldi	r24, 0x40	; 64
    1a08:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    1a0c:	00 e0       	ldi	r16, 0x00	; 0
    1a0e:	10 e0       	ldi	r17, 0x00	; 0
    1a10:	05 c0       	rjmp	.+10     	; 0x1a1c <nokia_lcd_init+0x2d4>
    1a12:	80 e0       	ldi	r24, 0x00	; 0
    1a14:	0e 94 95 0b 	call	0x172a	; 0x172a <write_data>
    1a18:	0f 5f       	subi	r16, 0xFF	; 255
    1a1a:	1f 4f       	sbci	r17, 0xFF	; 255
    1a1c:	08 3f       	cpi	r16, 0xF8	; 248
    1a1e:	f1 e0       	ldi	r31, 0x01	; 1
    1a20:	1f 07       	cpc	r17, r31
    1a22:	b8 f3       	brcs	.-18     	; 0x1a12 <nokia_lcd_init+0x2ca>
    1a24:	88 e0       	ldi	r24, 0x08	; 8
    1a26:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    1a2a:	8c e0       	ldi	r24, 0x0C	; 12
    1a2c:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    1a30:	00 00       	nop
    1a32:	6c 96       	adiw	r28, 0x1c	; 28
    1a34:	0f b6       	in	r0, 0x3f	; 63
    1a36:	f8 94       	cli
    1a38:	de bf       	out	0x3e, r29	; 62
    1a3a:	0f be       	out	0x3f, r0	; 63
    1a3c:	cd bf       	out	0x3d, r28	; 61
    1a3e:	df 91       	pop	r29
    1a40:	cf 91       	pop	r28
    1a42:	1f 91       	pop	r17
    1a44:	0f 91       	pop	r16
    1a46:	08 95       	ret

00001a48 <nokia_lcd_clear>:
    1a48:	0f 93       	push	r16
    1a4a:	1f 93       	push	r17
    1a4c:	cf 93       	push	r28
    1a4e:	df 93       	push	r29
    1a50:	cd b7       	in	r28, 0x3d	; 61
    1a52:	de b7       	in	r29, 0x3e	; 62
    1a54:	80 e8       	ldi	r24, 0x80	; 128
    1a56:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    1a5a:	80 e4       	ldi	r24, 0x40	; 64
    1a5c:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
    1a60:	10 92 5f 03 	sts	0x035F, r1	; 0x80035f <nokia_lcd+0x1f8>
    1a64:	10 92 60 03 	sts	0x0360, r1	; 0x800360 <nokia_lcd+0x1f9>
    1a68:	00 e0       	ldi	r16, 0x00	; 0
    1a6a:	10 e0       	ldi	r17, 0x00	; 0
    1a6c:	07 c0       	rjmp	.+14     	; 0x1a7c <nokia_lcd_clear+0x34>
    1a6e:	c8 01       	movw	r24, r16
    1a70:	89 59       	subi	r24, 0x99	; 153
    1a72:	9e 4f       	sbci	r25, 0xFE	; 254
    1a74:	fc 01       	movw	r30, r24
    1a76:	10 82       	st	Z, r1
    1a78:	0f 5f       	subi	r16, 0xFF	; 255
    1a7a:	1f 4f       	sbci	r17, 0xFF	; 255
    1a7c:	08 3f       	cpi	r16, 0xF8	; 248
    1a7e:	f1 e0       	ldi	r31, 0x01	; 1
    1a80:	1f 07       	cpc	r17, r31
    1a82:	a8 f3       	brcs	.-22     	; 0x1a6e <nokia_lcd_clear+0x26>
    1a84:	00 00       	nop
    1a86:	df 91       	pop	r29
    1a88:	cf 91       	pop	r28
    1a8a:	1f 91       	pop	r17
    1a8c:	0f 91       	pop	r16
    1a8e:	08 95       	ret

00001a90 <nokia_lcd_set_pixel>:

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
    1a90:	cf 93       	push	r28
    1a92:	df 93       	push	r29
    1a94:	00 d0       	rcall	.+0      	; 0x1a96 <nokia_lcd_set_pixel+0x6>
    1a96:	00 d0       	rcall	.+0      	; 0x1a98 <nokia_lcd_set_pixel+0x8>
    1a98:	1f 92       	push	r1
    1a9a:	cd b7       	in	r28, 0x3d	; 61
    1a9c:	de b7       	in	r29, 0x3e	; 62
    1a9e:	8b 83       	std	Y+3, r24	; 0x03
    1aa0:	6c 83       	std	Y+4, r22	; 0x04
    1aa2:	4d 83       	std	Y+5, r20	; 0x05
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
    1aa4:	8c 81       	ldd	r24, Y+4	; 0x04
    1aa6:	86 95       	lsr	r24
    1aa8:	86 95       	lsr	r24
    1aaa:	86 95       	lsr	r24
    1aac:	88 2f       	mov	r24, r24
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	44 e5       	ldi	r20, 0x54	; 84
    1ab2:	48 9f       	mul	r20, r24
    1ab4:	90 01       	movw	r18, r0
    1ab6:	49 9f       	mul	r20, r25
    1ab8:	30 0d       	add	r19, r0
    1aba:	11 24       	eor	r1, r1
    1abc:	8b 81       	ldd	r24, Y+3	; 0x03
    1abe:	88 2f       	mov	r24, r24
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	82 0f       	add	r24, r18
    1ac4:	93 1f       	adc	r25, r19
    1ac6:	89 59       	subi	r24, 0x99	; 153
    1ac8:	9e 4f       	sbci	r25, 0xFE	; 254
    1aca:	9a 83       	std	Y+2, r25	; 0x02
    1acc:	89 83       	std	Y+1, r24	; 0x01
	if (value)
    1ace:	8d 81       	ldd	r24, Y+5	; 0x05
    1ad0:	88 23       	and	r24, r24
    1ad2:	c9 f0       	breq	.+50     	; 0x1b06 <nokia_lcd_set_pixel+0x76>
		*byte |= (1 << (y % 8));
    1ad4:	89 81       	ldd	r24, Y+1	; 0x01
    1ad6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ad8:	fc 01       	movw	r30, r24
    1ada:	80 81       	ld	r24, Z
    1adc:	48 2f       	mov	r20, r24
    1ade:	8c 81       	ldd	r24, Y+4	; 0x04
    1ae0:	88 2f       	mov	r24, r24
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	9c 01       	movw	r18, r24
    1ae6:	27 70       	andi	r18, 0x07	; 7
    1ae8:	33 27       	eor	r19, r19
    1aea:	81 e0       	ldi	r24, 0x01	; 1
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	02 c0       	rjmp	.+4      	; 0x1af4 <nokia_lcd_set_pixel+0x64>
    1af0:	88 0f       	add	r24, r24
    1af2:	99 1f       	adc	r25, r25
    1af4:	2a 95       	dec	r18
    1af6:	e2 f7       	brpl	.-8      	; 0x1af0 <nokia_lcd_set_pixel+0x60>
    1af8:	84 2b       	or	r24, r20
    1afa:	28 2f       	mov	r18, r24
    1afc:	89 81       	ldd	r24, Y+1	; 0x01
    1afe:	9a 81       	ldd	r25, Y+2	; 0x02
    1b00:	fc 01       	movw	r30, r24
    1b02:	20 83       	st	Z, r18
	else
		*byte &= ~(1 << (y %8 ));
}
    1b04:	19 c0       	rjmp	.+50     	; 0x1b38 <nokia_lcd_set_pixel+0xa8>
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
	if (value)
		*byte |= (1 << (y % 8));
	else
		*byte &= ~(1 << (y %8 ));
    1b06:	89 81       	ldd	r24, Y+1	; 0x01
    1b08:	9a 81       	ldd	r25, Y+2	; 0x02
    1b0a:	fc 01       	movw	r30, r24
    1b0c:	80 81       	ld	r24, Z
    1b0e:	48 2f       	mov	r20, r24
    1b10:	8c 81       	ldd	r24, Y+4	; 0x04
    1b12:	88 2f       	mov	r24, r24
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	9c 01       	movw	r18, r24
    1b18:	27 70       	andi	r18, 0x07	; 7
    1b1a:	33 27       	eor	r19, r19
    1b1c:	81 e0       	ldi	r24, 0x01	; 1
    1b1e:	90 e0       	ldi	r25, 0x00	; 0
    1b20:	02 c0       	rjmp	.+4      	; 0x1b26 <nokia_lcd_set_pixel+0x96>
    1b22:	88 0f       	add	r24, r24
    1b24:	99 1f       	adc	r25, r25
    1b26:	2a 95       	dec	r18
    1b28:	e2 f7       	brpl	.-8      	; 0x1b22 <nokia_lcd_set_pixel+0x92>
    1b2a:	80 95       	com	r24
    1b2c:	84 23       	and	r24, r20
    1b2e:	28 2f       	mov	r18, r24
    1b30:	89 81       	ldd	r24, Y+1	; 0x01
    1b32:	9a 81       	ldd	r25, Y+2	; 0x02
    1b34:	fc 01       	movw	r30, r24
    1b36:	20 83       	st	Z, r18
}
    1b38:	00 00       	nop
    1b3a:	0f 90       	pop	r0
    1b3c:	0f 90       	pop	r0
    1b3e:	0f 90       	pop	r0
    1b40:	0f 90       	pop	r0
    1b42:	0f 90       	pop	r0
    1b44:	df 91       	pop	r29
    1b46:	cf 91       	pop	r28
    1b48:	08 95       	ret

00001b4a <nokia_lcd_write_char>:

void nokia_lcd_write_char(char code, uint8_t scale)
{
    1b4a:	0f 93       	push	r16
    1b4c:	1f 93       	push	r17
    1b4e:	cf 93       	push	r28
    1b50:	df 93       	push	r29
    1b52:	00 d0       	rcall	.+0      	; 0x1b54 <nokia_lcd_write_char+0xa>
    1b54:	00 d0       	rcall	.+0      	; 0x1b56 <nokia_lcd_write_char+0xc>
    1b56:	1f 92       	push	r1
    1b58:	cd b7       	in	r28, 0x3d	; 61
    1b5a:	de b7       	in	r29, 0x3e	; 62
    1b5c:	8c 83       	std	Y+4, r24	; 0x04
    1b5e:	6d 83       	std	Y+5, r22	; 0x05
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    1b60:	10 e0       	ldi	r17, 0x00	; 0
    1b62:	65 c0       	rjmp	.+202    	; 0x1c2e <nokia_lcd_write_char+0xe4>
		for (y = 0; y < 7*scale; y++)
    1b64:	00 e0       	ldi	r16, 0x00	; 0
    1b66:	4e c0       	rjmp	.+156    	; 0x1c04 <nokia_lcd_write_char+0xba>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    1b68:	8c 81       	ldd	r24, Y+4	; 0x04
    1b6a:	88 2f       	mov	r24, r24
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	9c 01       	movw	r18, r24
    1b70:	20 52       	subi	r18, 0x20	; 32
    1b72:	31 09       	sbc	r19, r1
    1b74:	9d 81       	ldd	r25, Y+5	; 0x05
    1b76:	81 2f       	mov	r24, r17
    1b78:	69 2f       	mov	r22, r25
    1b7a:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <__udivmodqi4>
    1b7e:	48 2f       	mov	r20, r24
    1b80:	50 e0       	ldi	r21, 0x00	; 0
    1b82:	c9 01       	movw	r24, r18
    1b84:	88 0f       	add	r24, r24
    1b86:	99 1f       	adc	r25, r25
    1b88:	88 0f       	add	r24, r24
    1b8a:	99 1f       	adc	r25, r25
    1b8c:	82 0f       	add	r24, r18
    1b8e:	93 1f       	adc	r25, r19
    1b90:	84 0f       	add	r24, r20
    1b92:	95 1f       	adc	r25, r21
    1b94:	88 59       	subi	r24, 0x98	; 152
    1b96:	9f 4f       	sbci	r25, 0xFF	; 255
    1b98:	9a 83       	std	Y+2, r25	; 0x02
    1b9a:	89 83       	std	Y+1, r24	; 0x01
    1b9c:	89 81       	ldd	r24, Y+1	; 0x01
    1b9e:	9a 81       	ldd	r25, Y+2	; 0x02
    1ba0:	fc 01       	movw	r30, r24
    1ba2:	84 91       	lpm	r24, Z
    1ba4:	8b 83       	std	Y+3, r24	; 0x03
    1ba6:	8b 81       	ldd	r24, Y+3	; 0x03
    1ba8:	28 2f       	mov	r18, r24
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	9d 81       	ldd	r25, Y+5	; 0x05
    1bae:	80 2f       	mov	r24, r16
    1bb0:	69 2f       	mov	r22, r25
    1bb2:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <__udivmodqi4>
    1bb6:	88 2f       	mov	r24, r24
    1bb8:	90 e0       	ldi	r25, 0x00	; 0
    1bba:	a9 01       	movw	r20, r18
    1bbc:	02 c0       	rjmp	.+4      	; 0x1bc2 <nokia_lcd_write_char+0x78>
    1bbe:	55 95       	asr	r21
    1bc0:	47 95       	ror	r20
    1bc2:	8a 95       	dec	r24
    1bc4:	e2 f7       	brpl	.-8      	; 0x1bbe <nokia_lcd_write_char+0x74>
    1bc6:	ca 01       	movw	r24, r20
    1bc8:	81 70       	andi	r24, 0x01	; 1
    1bca:	99 27       	eor	r25, r25
    1bcc:	89 2b       	or	r24, r25
    1bce:	61 f0       	breq	.+24     	; 0x1be8 <nokia_lcd_write_char+0x9e>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
    1bd0:	80 91 60 03 	lds	r24, 0x0360	; 0x800360 <nokia_lcd+0x1f9>
    1bd4:	98 2f       	mov	r25, r24
    1bd6:	90 0f       	add	r25, r16
    1bd8:	80 91 5f 03 	lds	r24, 0x035F	; 0x80035f <nokia_lcd+0x1f8>
    1bdc:	81 0f       	add	r24, r17
    1bde:	41 e0       	ldi	r20, 0x01	; 1
    1be0:	69 2f       	mov	r22, r25
    1be2:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <nokia_lcd_set_pixel>
    1be6:	0b c0       	rjmp	.+22     	; 0x1bfe <nokia_lcd_write_char+0xb4>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    1be8:	80 91 60 03 	lds	r24, 0x0360	; 0x800360 <nokia_lcd+0x1f9>
    1bec:	98 2f       	mov	r25, r24
    1bee:	90 0f       	add	r25, r16
    1bf0:	80 91 5f 03 	lds	r24, 0x035F	; 0x80035f <nokia_lcd+0x1f8>
    1bf4:	81 0f       	add	r24, r17
    1bf6:	40 e0       	ldi	r20, 0x00	; 0
    1bf8:	69 2f       	mov	r22, r25
    1bfa:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
    1bfe:	80 2f       	mov	r24, r16
    1c00:	01 e0       	ldi	r16, 0x01	; 1
    1c02:	08 0f       	add	r16, r24
    1c04:	40 2f       	mov	r20, r16
    1c06:	50 e0       	ldi	r21, 0x00	; 0
    1c08:	8d 81       	ldd	r24, Y+5	; 0x05
    1c0a:	28 2f       	mov	r18, r24
    1c0c:	30 e0       	ldi	r19, 0x00	; 0
    1c0e:	c9 01       	movw	r24, r18
    1c10:	88 0f       	add	r24, r24
    1c12:	99 1f       	adc	r25, r25
    1c14:	88 0f       	add	r24, r24
    1c16:	99 1f       	adc	r25, r25
    1c18:	88 0f       	add	r24, r24
    1c1a:	99 1f       	adc	r25, r25
    1c1c:	82 1b       	sub	r24, r18
    1c1e:	93 0b       	sbc	r25, r19
    1c20:	48 17       	cp	r20, r24
    1c22:	59 07       	cpc	r21, r25
    1c24:	0c f4       	brge	.+2      	; 0x1c28 <nokia_lcd_write_char+0xde>
    1c26:	a0 cf       	rjmp	.-192    	; 0x1b68 <nokia_lcd_write_char+0x1e>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    1c28:	81 2f       	mov	r24, r17
    1c2a:	11 e0       	ldi	r17, 0x01	; 1
    1c2c:	18 0f       	add	r17, r24
    1c2e:	41 2f       	mov	r20, r17
    1c30:	50 e0       	ldi	r21, 0x00	; 0
    1c32:	8d 81       	ldd	r24, Y+5	; 0x05
    1c34:	28 2f       	mov	r18, r24
    1c36:	30 e0       	ldi	r19, 0x00	; 0
    1c38:	c9 01       	movw	r24, r18
    1c3a:	88 0f       	add	r24, r24
    1c3c:	99 1f       	adc	r25, r25
    1c3e:	88 0f       	add	r24, r24
    1c40:	99 1f       	adc	r25, r25
    1c42:	82 0f       	add	r24, r18
    1c44:	93 1f       	adc	r25, r19
    1c46:	48 17       	cp	r20, r24
    1c48:	59 07       	cpc	r21, r25
    1c4a:	0c f4       	brge	.+2      	; 0x1c4e <nokia_lcd_write_char+0x104>
    1c4c:	8b cf       	rjmp	.-234    	; 0x1b64 <nokia_lcd_write_char+0x1a>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    1c4e:	20 91 5f 03 	lds	r18, 0x035F	; 0x80035f <nokia_lcd+0x1f8>
    1c52:	9d 81       	ldd	r25, Y+5	; 0x05
    1c54:	89 2f       	mov	r24, r25
    1c56:	88 0f       	add	r24, r24
    1c58:	88 0f       	add	r24, r24
    1c5a:	89 0f       	add	r24, r25
    1c5c:	82 0f       	add	r24, r18
    1c5e:	8f 5f       	subi	r24, 0xFF	; 255
    1c60:	80 93 5f 03 	sts	0x035F, r24	; 0x80035f <nokia_lcd+0x1f8>
	if (nokia_lcd.cursor_x >= 84) {
    1c64:	80 91 5f 03 	lds	r24, 0x035F	; 0x80035f <nokia_lcd+0x1f8>
    1c68:	84 35       	cpi	r24, 0x54	; 84
    1c6a:	70 f0       	brcs	.+28     	; 0x1c88 <nokia_lcd_write_char+0x13e>
		nokia_lcd.cursor_x = 0;
    1c6c:	10 92 5f 03 	sts	0x035F, r1	; 0x80035f <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
    1c70:	20 91 60 03 	lds	r18, 0x0360	; 0x800360 <nokia_lcd+0x1f9>
    1c74:	9d 81       	ldd	r25, Y+5	; 0x05
    1c76:	89 2f       	mov	r24, r25
    1c78:	88 0f       	add	r24, r24
    1c7a:	88 0f       	add	r24, r24
    1c7c:	88 0f       	add	r24, r24
    1c7e:	89 1b       	sub	r24, r25
    1c80:	82 0f       	add	r24, r18
    1c82:	8f 5f       	subi	r24, 0xFF	; 255
    1c84:	80 93 60 03 	sts	0x0360, r24	; 0x800360 <nokia_lcd+0x1f9>
	}
	if (nokia_lcd.cursor_y >= 48) {
    1c88:	80 91 60 03 	lds	r24, 0x0360	; 0x800360 <nokia_lcd+0x1f9>
    1c8c:	80 33       	cpi	r24, 0x30	; 48
    1c8e:	20 f0       	brcs	.+8      	; 0x1c98 <nokia_lcd_write_char+0x14e>
		nokia_lcd.cursor_x = 0;
    1c90:	10 92 5f 03 	sts	0x035F, r1	; 0x80035f <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
    1c94:	10 92 60 03 	sts	0x0360, r1	; 0x800360 <nokia_lcd+0x1f9>
	}
}
    1c98:	00 00       	nop
    1c9a:	0f 90       	pop	r0
    1c9c:	0f 90       	pop	r0
    1c9e:	0f 90       	pop	r0
    1ca0:	0f 90       	pop	r0
    1ca2:	0f 90       	pop	r0
    1ca4:	df 91       	pop	r29
    1ca6:	cf 91       	pop	r28
    1ca8:	1f 91       	pop	r17
    1caa:	0f 91       	pop	r16
    1cac:	08 95       	ret

00001cae <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
    1cae:	cf 93       	push	r28
    1cb0:	df 93       	push	r29
    1cb2:	00 d0       	rcall	.+0      	; 0x1cb4 <nokia_lcd_write_string+0x6>
    1cb4:	1f 92       	push	r1
    1cb6:	cd b7       	in	r28, 0x3d	; 61
    1cb8:	de b7       	in	r29, 0x3e	; 62
    1cba:	9a 83       	std	Y+2, r25	; 0x02
    1cbc:	89 83       	std	Y+1, r24	; 0x01
    1cbe:	6b 83       	std	Y+3, r22	; 0x03
	while(*str)
    1cc0:	0c c0       	rjmp	.+24     	; 0x1cda <nokia_lcd_write_string+0x2c>
		nokia_lcd_write_char(*str++, scale);
    1cc2:	89 81       	ldd	r24, Y+1	; 0x01
    1cc4:	9a 81       	ldd	r25, Y+2	; 0x02
    1cc6:	9c 01       	movw	r18, r24
    1cc8:	2f 5f       	subi	r18, 0xFF	; 255
    1cca:	3f 4f       	sbci	r19, 0xFF	; 255
    1ccc:	3a 83       	std	Y+2, r19	; 0x02
    1cce:	29 83       	std	Y+1, r18	; 0x01
    1cd0:	fc 01       	movw	r30, r24
    1cd2:	80 81       	ld	r24, Z
    1cd4:	6b 81       	ldd	r22, Y+3	; 0x03
    1cd6:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
    1cda:	89 81       	ldd	r24, Y+1	; 0x01
    1cdc:	9a 81       	ldd	r25, Y+2	; 0x02
    1cde:	fc 01       	movw	r30, r24
    1ce0:	80 81       	ld	r24, Z
    1ce2:	88 23       	and	r24, r24
    1ce4:	71 f7       	brne	.-36     	; 0x1cc2 <nokia_lcd_write_string+0x14>
		nokia_lcd_write_char(*str++, scale);
}
    1ce6:	00 00       	nop
    1ce8:	0f 90       	pop	r0
    1cea:	0f 90       	pop	r0
    1cec:	0f 90       	pop	r0
    1cee:	df 91       	pop	r29
    1cf0:	cf 91       	pop	r28
    1cf2:	08 95       	ret

00001cf4 <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    1cf4:	cf 93       	push	r28
    1cf6:	df 93       	push	r29
    1cf8:	00 d0       	rcall	.+0      	; 0x1cfa <nokia_lcd_set_cursor+0x6>
    1cfa:	cd b7       	in	r28, 0x3d	; 61
    1cfc:	de b7       	in	r29, 0x3e	; 62
    1cfe:	89 83       	std	Y+1, r24	; 0x01
    1d00:	6a 83       	std	Y+2, r22	; 0x02
	nokia_lcd.cursor_x = x;
    1d02:	89 81       	ldd	r24, Y+1	; 0x01
    1d04:	80 93 5f 03 	sts	0x035F, r24	; 0x80035f <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
    1d08:	8a 81       	ldd	r24, Y+2	; 0x02
    1d0a:	80 93 60 03 	sts	0x0360, r24	; 0x800360 <nokia_lcd+0x1f9>
}
    1d0e:	00 00       	nop
    1d10:	0f 90       	pop	r0
    1d12:	0f 90       	pop	r0
    1d14:	df 91       	pop	r29
    1d16:	cf 91       	pop	r28
    1d18:	08 95       	ret

00001d1a <nokia_lcd_render>:

void nokia_lcd_render(void)
{
    1d1a:	0f 93       	push	r16
    1d1c:	1f 93       	push	r17
    1d1e:	cf 93       	push	r28
    1d20:	df 93       	push	r29
    1d22:	cd b7       	in	r28, 0x3d	; 61
    1d24:	de b7       	in	r29, 0x3e	; 62
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
    1d26:	80 e8       	ldi	r24, 0x80	; 128
    1d28:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>
	write_cmd(0x40);
    1d2c:	80 e4       	ldi	r24, 0x40	; 64
    1d2e:	0e 94 86 0b 	call	0x170c	; 0x170c <write_cmd>

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    1d32:	00 e0       	ldi	r16, 0x00	; 0
    1d34:	10 e0       	ldi	r17, 0x00	; 0
    1d36:	09 c0       	rjmp	.+18     	; 0x1d4a <nokia_lcd_render+0x30>
		write_data(nokia_lcd.screen[i]);
    1d38:	c8 01       	movw	r24, r16
    1d3a:	89 59       	subi	r24, 0x99	; 153
    1d3c:	9e 4f       	sbci	r25, 0xFE	; 254
    1d3e:	fc 01       	movw	r30, r24
    1d40:	80 81       	ld	r24, Z
    1d42:	0e 94 95 0b 	call	0x172a	; 0x172a <write_data>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    1d46:	0f 5f       	subi	r16, 0xFF	; 255
    1d48:	1f 4f       	sbci	r17, 0xFF	; 255
    1d4a:	08 3f       	cpi	r16, 0xF8	; 248
    1d4c:	f1 e0       	ldi	r31, 0x01	; 1
    1d4e:	1f 07       	cpc	r17, r31
    1d50:	98 f3       	brcs	.-26     	; 0x1d38 <nokia_lcd_render+0x1e>
		write_data(nokia_lcd.screen[i]);
}
    1d52:	00 00       	nop
    1d54:	df 91       	pop	r29
    1d56:	cf 91       	pop	r28
    1d58:	1f 91       	pop	r17
    1d5a:	0f 91       	pop	r16
    1d5c:	08 95       	ret

00001d5e <__cmpsf2>:
    1d5e:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <__fp_cmp>
    1d62:	08 f4       	brcc	.+2      	; 0x1d66 <__cmpsf2+0x8>
    1d64:	81 e0       	ldi	r24, 0x01	; 1
    1d66:	08 95       	ret

00001d68 <__fixunssfsi>:
    1d68:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <__fp_splitA>
    1d6c:	88 f0       	brcs	.+34     	; 0x1d90 <__fixunssfsi+0x28>
    1d6e:	9f 57       	subi	r25, 0x7F	; 127
    1d70:	98 f0       	brcs	.+38     	; 0x1d98 <__fixunssfsi+0x30>
    1d72:	b9 2f       	mov	r27, r25
    1d74:	99 27       	eor	r25, r25
    1d76:	b7 51       	subi	r27, 0x17	; 23
    1d78:	b0 f0       	brcs	.+44     	; 0x1da6 <__fixunssfsi+0x3e>
    1d7a:	e1 f0       	breq	.+56     	; 0x1db4 <__fixunssfsi+0x4c>
    1d7c:	66 0f       	add	r22, r22
    1d7e:	77 1f       	adc	r23, r23
    1d80:	88 1f       	adc	r24, r24
    1d82:	99 1f       	adc	r25, r25
    1d84:	1a f0       	brmi	.+6      	; 0x1d8c <__fixunssfsi+0x24>
    1d86:	ba 95       	dec	r27
    1d88:	c9 f7       	brne	.-14     	; 0x1d7c <__fixunssfsi+0x14>
    1d8a:	14 c0       	rjmp	.+40     	; 0x1db4 <__fixunssfsi+0x4c>
    1d8c:	b1 30       	cpi	r27, 0x01	; 1
    1d8e:	91 f0       	breq	.+36     	; 0x1db4 <__fixunssfsi+0x4c>
    1d90:	0e 94 29 0f 	call	0x1e52	; 0x1e52 <__fp_zero>
    1d94:	b1 e0       	ldi	r27, 0x01	; 1
    1d96:	08 95       	ret
    1d98:	0c 94 29 0f 	jmp	0x1e52	; 0x1e52 <__fp_zero>
    1d9c:	67 2f       	mov	r22, r23
    1d9e:	78 2f       	mov	r23, r24
    1da0:	88 27       	eor	r24, r24
    1da2:	b8 5f       	subi	r27, 0xF8	; 248
    1da4:	39 f0       	breq	.+14     	; 0x1db4 <__fixunssfsi+0x4c>
    1da6:	b9 3f       	cpi	r27, 0xF9	; 249
    1da8:	cc f3       	brlt	.-14     	; 0x1d9c <__fixunssfsi+0x34>
    1daa:	86 95       	lsr	r24
    1dac:	77 95       	ror	r23
    1dae:	67 95       	ror	r22
    1db0:	b3 95       	inc	r27
    1db2:	d9 f7       	brne	.-10     	; 0x1daa <__fixunssfsi+0x42>
    1db4:	3e f4       	brtc	.+14     	; 0x1dc4 <__fixunssfsi+0x5c>
    1db6:	90 95       	com	r25
    1db8:	80 95       	com	r24
    1dba:	70 95       	com	r23
    1dbc:	61 95       	neg	r22
    1dbe:	7f 4f       	sbci	r23, 0xFF	; 255
    1dc0:	8f 4f       	sbci	r24, 0xFF	; 255
    1dc2:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc4:	08 95       	ret

00001dc6 <__fp_cmp>:
    1dc6:	99 0f       	add	r25, r25
    1dc8:	00 08       	sbc	r0, r0
    1dca:	55 0f       	add	r21, r21
    1dcc:	aa 0b       	sbc	r26, r26
    1dce:	e0 e8       	ldi	r30, 0x80	; 128
    1dd0:	fe ef       	ldi	r31, 0xFE	; 254
    1dd2:	16 16       	cp	r1, r22
    1dd4:	17 06       	cpc	r1, r23
    1dd6:	e8 07       	cpc	r30, r24
    1dd8:	f9 07       	cpc	r31, r25
    1dda:	c0 f0       	brcs	.+48     	; 0x1e0c <__fp_cmp+0x46>
    1ddc:	12 16       	cp	r1, r18
    1dde:	13 06       	cpc	r1, r19
    1de0:	e4 07       	cpc	r30, r20
    1de2:	f5 07       	cpc	r31, r21
    1de4:	98 f0       	brcs	.+38     	; 0x1e0c <__fp_cmp+0x46>
    1de6:	62 1b       	sub	r22, r18
    1de8:	73 0b       	sbc	r23, r19
    1dea:	84 0b       	sbc	r24, r20
    1dec:	95 0b       	sbc	r25, r21
    1dee:	39 f4       	brne	.+14     	; 0x1dfe <__fp_cmp+0x38>
    1df0:	0a 26       	eor	r0, r26
    1df2:	61 f0       	breq	.+24     	; 0x1e0c <__fp_cmp+0x46>
    1df4:	23 2b       	or	r18, r19
    1df6:	24 2b       	or	r18, r20
    1df8:	25 2b       	or	r18, r21
    1dfa:	21 f4       	brne	.+8      	; 0x1e04 <__fp_cmp+0x3e>
    1dfc:	08 95       	ret
    1dfe:	0a 26       	eor	r0, r26
    1e00:	09 f4       	brne	.+2      	; 0x1e04 <__fp_cmp+0x3e>
    1e02:	a1 40       	sbci	r26, 0x01	; 1
    1e04:	a6 95       	lsr	r26
    1e06:	8f ef       	ldi	r24, 0xFF	; 255
    1e08:	81 1d       	adc	r24, r1
    1e0a:	81 1d       	adc	r24, r1
    1e0c:	08 95       	ret

00001e0e <__fp_split3>:
    1e0e:	57 fd       	sbrc	r21, 7
    1e10:	90 58       	subi	r25, 0x80	; 128
    1e12:	44 0f       	add	r20, r20
    1e14:	55 1f       	adc	r21, r21
    1e16:	59 f0       	breq	.+22     	; 0x1e2e <__fp_splitA+0x10>
    1e18:	5f 3f       	cpi	r21, 0xFF	; 255
    1e1a:	71 f0       	breq	.+28     	; 0x1e38 <__fp_splitA+0x1a>
    1e1c:	47 95       	ror	r20

00001e1e <__fp_splitA>:
    1e1e:	88 0f       	add	r24, r24
    1e20:	97 fb       	bst	r25, 7
    1e22:	99 1f       	adc	r25, r25
    1e24:	61 f0       	breq	.+24     	; 0x1e3e <__fp_splitA+0x20>
    1e26:	9f 3f       	cpi	r25, 0xFF	; 255
    1e28:	79 f0       	breq	.+30     	; 0x1e48 <__fp_splitA+0x2a>
    1e2a:	87 95       	ror	r24
    1e2c:	08 95       	ret
    1e2e:	12 16       	cp	r1, r18
    1e30:	13 06       	cpc	r1, r19
    1e32:	14 06       	cpc	r1, r20
    1e34:	55 1f       	adc	r21, r21
    1e36:	f2 cf       	rjmp	.-28     	; 0x1e1c <__fp_split3+0xe>
    1e38:	46 95       	lsr	r20
    1e3a:	f1 df       	rcall	.-30     	; 0x1e1e <__fp_splitA>
    1e3c:	08 c0       	rjmp	.+16     	; 0x1e4e <__fp_splitA+0x30>
    1e3e:	16 16       	cp	r1, r22
    1e40:	17 06       	cpc	r1, r23
    1e42:	18 06       	cpc	r1, r24
    1e44:	99 1f       	adc	r25, r25
    1e46:	f1 cf       	rjmp	.-30     	; 0x1e2a <__fp_splitA+0xc>
    1e48:	86 95       	lsr	r24
    1e4a:	71 05       	cpc	r23, r1
    1e4c:	61 05       	cpc	r22, r1
    1e4e:	08 94       	sec
    1e50:	08 95       	ret

00001e52 <__fp_zero>:
    1e52:	e8 94       	clt

00001e54 <__fp_szero>:
    1e54:	bb 27       	eor	r27, r27
    1e56:	66 27       	eor	r22, r22
    1e58:	77 27       	eor	r23, r23
    1e5a:	cb 01       	movw	r24, r22
    1e5c:	97 f9       	bld	r25, 7
    1e5e:	08 95       	ret

00001e60 <__gesf2>:
    1e60:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <__fp_cmp>
    1e64:	08 f4       	brcc	.+2      	; 0x1e68 <__gesf2+0x8>
    1e66:	8f ef       	ldi	r24, 0xFF	; 255
    1e68:	08 95       	ret

00001e6a <__mulsf3>:
    1e6a:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <__mulsf3x>
    1e6e:	0c 94 b9 0f 	jmp	0x1f72	; 0x1f72 <__fp_round>
    1e72:	0e 94 ab 0f 	call	0x1f56	; 0x1f56 <__fp_pscA>
    1e76:	38 f0       	brcs	.+14     	; 0x1e86 <__mulsf3+0x1c>
    1e78:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <__fp_pscB>
    1e7c:	20 f0       	brcs	.+8      	; 0x1e86 <__mulsf3+0x1c>
    1e7e:	95 23       	and	r25, r21
    1e80:	11 f0       	breq	.+4      	; 0x1e86 <__mulsf3+0x1c>
    1e82:	0c 94 a2 0f 	jmp	0x1f44	; 0x1f44 <__fp_inf>
    1e86:	0c 94 a8 0f 	jmp	0x1f50	; 0x1f50 <__fp_nan>
    1e8a:	11 24       	eor	r1, r1
    1e8c:	0c 94 2a 0f 	jmp	0x1e54	; 0x1e54 <__fp_szero>

00001e90 <__mulsf3x>:
    1e90:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <__fp_split3>
    1e94:	70 f3       	brcs	.-36     	; 0x1e72 <__mulsf3+0x8>

00001e96 <__mulsf3_pse>:
    1e96:	95 9f       	mul	r25, r21
    1e98:	c1 f3       	breq	.-16     	; 0x1e8a <__mulsf3+0x20>
    1e9a:	95 0f       	add	r25, r21
    1e9c:	50 e0       	ldi	r21, 0x00	; 0
    1e9e:	55 1f       	adc	r21, r21
    1ea0:	62 9f       	mul	r22, r18
    1ea2:	f0 01       	movw	r30, r0
    1ea4:	72 9f       	mul	r23, r18
    1ea6:	bb 27       	eor	r27, r27
    1ea8:	f0 0d       	add	r31, r0
    1eaa:	b1 1d       	adc	r27, r1
    1eac:	63 9f       	mul	r22, r19
    1eae:	aa 27       	eor	r26, r26
    1eb0:	f0 0d       	add	r31, r0
    1eb2:	b1 1d       	adc	r27, r1
    1eb4:	aa 1f       	adc	r26, r26
    1eb6:	64 9f       	mul	r22, r20
    1eb8:	66 27       	eor	r22, r22
    1eba:	b0 0d       	add	r27, r0
    1ebc:	a1 1d       	adc	r26, r1
    1ebe:	66 1f       	adc	r22, r22
    1ec0:	82 9f       	mul	r24, r18
    1ec2:	22 27       	eor	r18, r18
    1ec4:	b0 0d       	add	r27, r0
    1ec6:	a1 1d       	adc	r26, r1
    1ec8:	62 1f       	adc	r22, r18
    1eca:	73 9f       	mul	r23, r19
    1ecc:	b0 0d       	add	r27, r0
    1ece:	a1 1d       	adc	r26, r1
    1ed0:	62 1f       	adc	r22, r18
    1ed2:	83 9f       	mul	r24, r19
    1ed4:	a0 0d       	add	r26, r0
    1ed6:	61 1d       	adc	r22, r1
    1ed8:	22 1f       	adc	r18, r18
    1eda:	74 9f       	mul	r23, r20
    1edc:	33 27       	eor	r19, r19
    1ede:	a0 0d       	add	r26, r0
    1ee0:	61 1d       	adc	r22, r1
    1ee2:	23 1f       	adc	r18, r19
    1ee4:	84 9f       	mul	r24, r20
    1ee6:	60 0d       	add	r22, r0
    1ee8:	21 1d       	adc	r18, r1
    1eea:	82 2f       	mov	r24, r18
    1eec:	76 2f       	mov	r23, r22
    1eee:	6a 2f       	mov	r22, r26
    1ef0:	11 24       	eor	r1, r1
    1ef2:	9f 57       	subi	r25, 0x7F	; 127
    1ef4:	50 40       	sbci	r21, 0x00	; 0
    1ef6:	9a f0       	brmi	.+38     	; 0x1f1e <__mulsf3_pse+0x88>
    1ef8:	f1 f0       	breq	.+60     	; 0x1f36 <__mulsf3_pse+0xa0>
    1efa:	88 23       	and	r24, r24
    1efc:	4a f0       	brmi	.+18     	; 0x1f10 <__mulsf3_pse+0x7a>
    1efe:	ee 0f       	add	r30, r30
    1f00:	ff 1f       	adc	r31, r31
    1f02:	bb 1f       	adc	r27, r27
    1f04:	66 1f       	adc	r22, r22
    1f06:	77 1f       	adc	r23, r23
    1f08:	88 1f       	adc	r24, r24
    1f0a:	91 50       	subi	r25, 0x01	; 1
    1f0c:	50 40       	sbci	r21, 0x00	; 0
    1f0e:	a9 f7       	brne	.-22     	; 0x1efa <__mulsf3_pse+0x64>
    1f10:	9e 3f       	cpi	r25, 0xFE	; 254
    1f12:	51 05       	cpc	r21, r1
    1f14:	80 f0       	brcs	.+32     	; 0x1f36 <__mulsf3_pse+0xa0>
    1f16:	0c 94 a2 0f 	jmp	0x1f44	; 0x1f44 <__fp_inf>
    1f1a:	0c 94 2a 0f 	jmp	0x1e54	; 0x1e54 <__fp_szero>
    1f1e:	5f 3f       	cpi	r21, 0xFF	; 255
    1f20:	e4 f3       	brlt	.-8      	; 0x1f1a <__mulsf3_pse+0x84>
    1f22:	98 3e       	cpi	r25, 0xE8	; 232
    1f24:	d4 f3       	brlt	.-12     	; 0x1f1a <__mulsf3_pse+0x84>
    1f26:	86 95       	lsr	r24
    1f28:	77 95       	ror	r23
    1f2a:	67 95       	ror	r22
    1f2c:	b7 95       	ror	r27
    1f2e:	f7 95       	ror	r31
    1f30:	e7 95       	ror	r30
    1f32:	9f 5f       	subi	r25, 0xFF	; 255
    1f34:	c1 f7       	brne	.-16     	; 0x1f26 <__mulsf3_pse+0x90>
    1f36:	fe 2b       	or	r31, r30
    1f38:	88 0f       	add	r24, r24
    1f3a:	91 1d       	adc	r25, r1
    1f3c:	96 95       	lsr	r25
    1f3e:	87 95       	ror	r24
    1f40:	97 f9       	bld	r25, 7
    1f42:	08 95       	ret

00001f44 <__fp_inf>:
    1f44:	97 f9       	bld	r25, 7
    1f46:	9f 67       	ori	r25, 0x7F	; 127
    1f48:	80 e8       	ldi	r24, 0x80	; 128
    1f4a:	70 e0       	ldi	r23, 0x00	; 0
    1f4c:	60 e0       	ldi	r22, 0x00	; 0
    1f4e:	08 95       	ret

00001f50 <__fp_nan>:
    1f50:	9f ef       	ldi	r25, 0xFF	; 255
    1f52:	80 ec       	ldi	r24, 0xC0	; 192
    1f54:	08 95       	ret

00001f56 <__fp_pscA>:
    1f56:	00 24       	eor	r0, r0
    1f58:	0a 94       	dec	r0
    1f5a:	16 16       	cp	r1, r22
    1f5c:	17 06       	cpc	r1, r23
    1f5e:	18 06       	cpc	r1, r24
    1f60:	09 06       	cpc	r0, r25
    1f62:	08 95       	ret

00001f64 <__fp_pscB>:
    1f64:	00 24       	eor	r0, r0
    1f66:	0a 94       	dec	r0
    1f68:	12 16       	cp	r1, r18
    1f6a:	13 06       	cpc	r1, r19
    1f6c:	14 06       	cpc	r1, r20
    1f6e:	05 06       	cpc	r0, r21
    1f70:	08 95       	ret

00001f72 <__fp_round>:
    1f72:	09 2e       	mov	r0, r25
    1f74:	03 94       	inc	r0
    1f76:	00 0c       	add	r0, r0
    1f78:	11 f4       	brne	.+4      	; 0x1f7e <__fp_round+0xc>
    1f7a:	88 23       	and	r24, r24
    1f7c:	52 f0       	brmi	.+20     	; 0x1f92 <__fp_round+0x20>
    1f7e:	bb 0f       	add	r27, r27
    1f80:	40 f4       	brcc	.+16     	; 0x1f92 <__fp_round+0x20>
    1f82:	bf 2b       	or	r27, r31
    1f84:	11 f4       	brne	.+4      	; 0x1f8a <__fp_round+0x18>
    1f86:	60 ff       	sbrs	r22, 0
    1f88:	04 c0       	rjmp	.+8      	; 0x1f92 <__fp_round+0x20>
    1f8a:	6f 5f       	subi	r22, 0xFF	; 255
    1f8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f8e:	8f 4f       	sbci	r24, 0xFF	; 255
    1f90:	9f 4f       	sbci	r25, 0xFF	; 255
    1f92:	08 95       	ret

00001f94 <__udivmodqi4>:
    1f94:	99 1b       	sub	r25, r25
    1f96:	79 e0       	ldi	r23, 0x09	; 9
    1f98:	04 c0       	rjmp	.+8      	; 0x1fa2 <__udivmodqi4_ep>

00001f9a <__udivmodqi4_loop>:
    1f9a:	99 1f       	adc	r25, r25
    1f9c:	96 17       	cp	r25, r22
    1f9e:	08 f0       	brcs	.+2      	; 0x1fa2 <__udivmodqi4_ep>
    1fa0:	96 1b       	sub	r25, r22

00001fa2 <__udivmodqi4_ep>:
    1fa2:	88 1f       	adc	r24, r24
    1fa4:	7a 95       	dec	r23
    1fa6:	c9 f7       	brne	.-14     	; 0x1f9a <__udivmodqi4_loop>
    1fa8:	80 95       	com	r24
    1faa:	08 95       	ret

00001fac <__divmodhi4>:
    1fac:	97 fb       	bst	r25, 7
    1fae:	07 2e       	mov	r0, r23
    1fb0:	16 f4       	brtc	.+4      	; 0x1fb6 <__divmodhi4+0xa>
    1fb2:	00 94       	com	r0
    1fb4:	07 d0       	rcall	.+14     	; 0x1fc4 <__divmodhi4_neg1>
    1fb6:	77 fd       	sbrc	r23, 7
    1fb8:	09 d0       	rcall	.+18     	; 0x1fcc <__divmodhi4_neg2>
    1fba:	0e 94 2b 10 	call	0x2056	; 0x2056 <__udivmodhi4>
    1fbe:	07 fc       	sbrc	r0, 7
    1fc0:	05 d0       	rcall	.+10     	; 0x1fcc <__divmodhi4_neg2>
    1fc2:	3e f4       	brtc	.+14     	; 0x1fd2 <__divmodhi4_exit>

00001fc4 <__divmodhi4_neg1>:
    1fc4:	90 95       	com	r25
    1fc6:	81 95       	neg	r24
    1fc8:	9f 4f       	sbci	r25, 0xFF	; 255
    1fca:	08 95       	ret

00001fcc <__divmodhi4_neg2>:
    1fcc:	70 95       	com	r23
    1fce:	61 95       	neg	r22
    1fd0:	7f 4f       	sbci	r23, 0xFF	; 255

00001fd2 <__divmodhi4_exit>:
    1fd2:	08 95       	ret

00001fd4 <__udivmodsi4>:
    1fd4:	a1 e2       	ldi	r26, 0x21	; 33
    1fd6:	1a 2e       	mov	r1, r26
    1fd8:	aa 1b       	sub	r26, r26
    1fda:	bb 1b       	sub	r27, r27
    1fdc:	fd 01       	movw	r30, r26
    1fde:	0d c0       	rjmp	.+26     	; 0x1ffa <__udivmodsi4_ep>

00001fe0 <__udivmodsi4_loop>:
    1fe0:	aa 1f       	adc	r26, r26
    1fe2:	bb 1f       	adc	r27, r27
    1fe4:	ee 1f       	adc	r30, r30
    1fe6:	ff 1f       	adc	r31, r31
    1fe8:	a2 17       	cp	r26, r18
    1fea:	b3 07       	cpc	r27, r19
    1fec:	e4 07       	cpc	r30, r20
    1fee:	f5 07       	cpc	r31, r21
    1ff0:	20 f0       	brcs	.+8      	; 0x1ffa <__udivmodsi4_ep>
    1ff2:	a2 1b       	sub	r26, r18
    1ff4:	b3 0b       	sbc	r27, r19
    1ff6:	e4 0b       	sbc	r30, r20
    1ff8:	f5 0b       	sbc	r31, r21

00001ffa <__udivmodsi4_ep>:
    1ffa:	66 1f       	adc	r22, r22
    1ffc:	77 1f       	adc	r23, r23
    1ffe:	88 1f       	adc	r24, r24
    2000:	99 1f       	adc	r25, r25
    2002:	1a 94       	dec	r1
    2004:	69 f7       	brne	.-38     	; 0x1fe0 <__udivmodsi4_loop>
    2006:	60 95       	com	r22
    2008:	70 95       	com	r23
    200a:	80 95       	com	r24
    200c:	90 95       	com	r25
    200e:	9b 01       	movw	r18, r22
    2010:	ac 01       	movw	r20, r24
    2012:	bd 01       	movw	r22, r26
    2014:	cf 01       	movw	r24, r30
    2016:	08 95       	ret

00002018 <__divmodsi4>:
    2018:	05 2e       	mov	r0, r21
    201a:	97 fb       	bst	r25, 7
    201c:	1e f4       	brtc	.+6      	; 0x2024 <__divmodsi4+0xc>
    201e:	00 94       	com	r0
    2020:	0e 94 23 10 	call	0x2046	; 0x2046 <__negsi2>
    2024:	57 fd       	sbrc	r21, 7
    2026:	07 d0       	rcall	.+14     	; 0x2036 <__divmodsi4_neg2>
    2028:	0e 94 ea 0f 	call	0x1fd4	; 0x1fd4 <__udivmodsi4>
    202c:	07 fc       	sbrc	r0, 7
    202e:	03 d0       	rcall	.+6      	; 0x2036 <__divmodsi4_neg2>
    2030:	4e f4       	brtc	.+18     	; 0x2044 <__divmodsi4_exit>
    2032:	0c 94 23 10 	jmp	0x2046	; 0x2046 <__negsi2>

00002036 <__divmodsi4_neg2>:
    2036:	50 95       	com	r21
    2038:	40 95       	com	r20
    203a:	30 95       	com	r19
    203c:	21 95       	neg	r18
    203e:	3f 4f       	sbci	r19, 0xFF	; 255
    2040:	4f 4f       	sbci	r20, 0xFF	; 255
    2042:	5f 4f       	sbci	r21, 0xFF	; 255

00002044 <__divmodsi4_exit>:
    2044:	08 95       	ret

00002046 <__negsi2>:
    2046:	90 95       	com	r25
    2048:	80 95       	com	r24
    204a:	70 95       	com	r23
    204c:	61 95       	neg	r22
    204e:	7f 4f       	sbci	r23, 0xFF	; 255
    2050:	8f 4f       	sbci	r24, 0xFF	; 255
    2052:	9f 4f       	sbci	r25, 0xFF	; 255
    2054:	08 95       	ret

00002056 <__udivmodhi4>:
    2056:	aa 1b       	sub	r26, r26
    2058:	bb 1b       	sub	r27, r27
    205a:	51 e1       	ldi	r21, 0x11	; 17
    205c:	07 c0       	rjmp	.+14     	; 0x206c <__udivmodhi4_ep>

0000205e <__udivmodhi4_loop>:
    205e:	aa 1f       	adc	r26, r26
    2060:	bb 1f       	adc	r27, r27
    2062:	a6 17       	cp	r26, r22
    2064:	b7 07       	cpc	r27, r23
    2066:	10 f0       	brcs	.+4      	; 0x206c <__udivmodhi4_ep>
    2068:	a6 1b       	sub	r26, r22
    206a:	b7 0b       	sbc	r27, r23

0000206c <__udivmodhi4_ep>:
    206c:	88 1f       	adc	r24, r24
    206e:	99 1f       	adc	r25, r25
    2070:	5a 95       	dec	r21
    2072:	a9 f7       	brne	.-22     	; 0x205e <__udivmodhi4_loop>
    2074:	80 95       	com	r24
    2076:	90 95       	com	r25
    2078:	bc 01       	movw	r22, r24
    207a:	cd 01       	movw	r24, r26
    207c:	08 95       	ret

0000207e <sprintf>:
    207e:	ae e0       	ldi	r26, 0x0E	; 14
    2080:	b0 e0       	ldi	r27, 0x00	; 0
    2082:	e5 e4       	ldi	r30, 0x45	; 69
    2084:	f0 e1       	ldi	r31, 0x10	; 16
    2086:	0c 94 00 13 	jmp	0x2600	; 0x2600 <__prologue_saves__+0x1c>
    208a:	0d 89       	ldd	r16, Y+21	; 0x15
    208c:	1e 89       	ldd	r17, Y+22	; 0x16
    208e:	86 e0       	ldi	r24, 0x06	; 6
    2090:	8c 83       	std	Y+4, r24	; 0x04
    2092:	1a 83       	std	Y+2, r17	; 0x02
    2094:	09 83       	std	Y+1, r16	; 0x01
    2096:	8f ef       	ldi	r24, 0xFF	; 255
    2098:	9f e7       	ldi	r25, 0x7F	; 127
    209a:	9e 83       	std	Y+6, r25	; 0x06
    209c:	8d 83       	std	Y+5, r24	; 0x05
    209e:	ae 01       	movw	r20, r28
    20a0:	47 5e       	subi	r20, 0xE7	; 231
    20a2:	5f 4f       	sbci	r21, 0xFF	; 255
    20a4:	6f 89       	ldd	r22, Y+23	; 0x17
    20a6:	78 8d       	ldd	r23, Y+24	; 0x18
    20a8:	ce 01       	movw	r24, r28
    20aa:	01 96       	adiw	r24, 0x01	; 1
    20ac:	0e 94 61 10 	call	0x20c2	; 0x20c2 <vfprintf>
    20b0:	ef 81       	ldd	r30, Y+7	; 0x07
    20b2:	f8 85       	ldd	r31, Y+8	; 0x08
    20b4:	e0 0f       	add	r30, r16
    20b6:	f1 1f       	adc	r31, r17
    20b8:	10 82       	st	Z, r1
    20ba:	2e 96       	adiw	r28, 0x0e	; 14
    20bc:	e4 e0       	ldi	r30, 0x04	; 4
    20be:	0c 94 1c 13 	jmp	0x2638	; 0x2638 <__epilogue_restores__+0x1c>

000020c2 <vfprintf>:
    20c2:	ab e0       	ldi	r26, 0x0B	; 11
    20c4:	b0 e0       	ldi	r27, 0x00	; 0
    20c6:	e7 e6       	ldi	r30, 0x67	; 103
    20c8:	f0 e1       	ldi	r31, 0x10	; 16
    20ca:	0c 94 f2 12 	jmp	0x25e4	; 0x25e4 <__prologue_saves__>
    20ce:	6c 01       	movw	r12, r24
    20d0:	7b 01       	movw	r14, r22
    20d2:	8a 01       	movw	r16, r20
    20d4:	fc 01       	movw	r30, r24
    20d6:	17 82       	std	Z+7, r1	; 0x07
    20d8:	16 82       	std	Z+6, r1	; 0x06
    20da:	83 81       	ldd	r24, Z+3	; 0x03
    20dc:	81 ff       	sbrs	r24, 1
    20de:	cc c1       	rjmp	.+920    	; 0x2478 <vfprintf+0x3b6>
    20e0:	ce 01       	movw	r24, r28
    20e2:	01 96       	adiw	r24, 0x01	; 1
    20e4:	3c 01       	movw	r6, r24
    20e6:	f6 01       	movw	r30, r12
    20e8:	93 81       	ldd	r25, Z+3	; 0x03
    20ea:	f7 01       	movw	r30, r14
    20ec:	93 fd       	sbrc	r25, 3
    20ee:	85 91       	lpm	r24, Z+
    20f0:	93 ff       	sbrs	r25, 3
    20f2:	81 91       	ld	r24, Z+
    20f4:	7f 01       	movw	r14, r30
    20f6:	88 23       	and	r24, r24
    20f8:	09 f4       	brne	.+2      	; 0x20fc <vfprintf+0x3a>
    20fa:	ba c1       	rjmp	.+884    	; 0x2470 <vfprintf+0x3ae>
    20fc:	85 32       	cpi	r24, 0x25	; 37
    20fe:	39 f4       	brne	.+14     	; 0x210e <vfprintf+0x4c>
    2100:	93 fd       	sbrc	r25, 3
    2102:	85 91       	lpm	r24, Z+
    2104:	93 ff       	sbrs	r25, 3
    2106:	81 91       	ld	r24, Z+
    2108:	7f 01       	movw	r14, r30
    210a:	85 32       	cpi	r24, 0x25	; 37
    210c:	29 f4       	brne	.+10     	; 0x2118 <vfprintf+0x56>
    210e:	b6 01       	movw	r22, r12
    2110:	90 e0       	ldi	r25, 0x00	; 0
    2112:	0e 94 58 12 	call	0x24b0	; 0x24b0 <fputc>
    2116:	e7 cf       	rjmp	.-50     	; 0x20e6 <vfprintf+0x24>
    2118:	91 2c       	mov	r9, r1
    211a:	21 2c       	mov	r2, r1
    211c:	31 2c       	mov	r3, r1
    211e:	ff e1       	ldi	r31, 0x1F	; 31
    2120:	f3 15       	cp	r31, r3
    2122:	d8 f0       	brcs	.+54     	; 0x215a <vfprintf+0x98>
    2124:	8b 32       	cpi	r24, 0x2B	; 43
    2126:	79 f0       	breq	.+30     	; 0x2146 <vfprintf+0x84>
    2128:	38 f4       	brcc	.+14     	; 0x2138 <vfprintf+0x76>
    212a:	80 32       	cpi	r24, 0x20	; 32
    212c:	79 f0       	breq	.+30     	; 0x214c <vfprintf+0x8a>
    212e:	83 32       	cpi	r24, 0x23	; 35
    2130:	a1 f4       	brne	.+40     	; 0x215a <vfprintf+0x98>
    2132:	23 2d       	mov	r18, r3
    2134:	20 61       	ori	r18, 0x10	; 16
    2136:	1d c0       	rjmp	.+58     	; 0x2172 <vfprintf+0xb0>
    2138:	8d 32       	cpi	r24, 0x2D	; 45
    213a:	61 f0       	breq	.+24     	; 0x2154 <vfprintf+0x92>
    213c:	80 33       	cpi	r24, 0x30	; 48
    213e:	69 f4       	brne	.+26     	; 0x215a <vfprintf+0x98>
    2140:	23 2d       	mov	r18, r3
    2142:	21 60       	ori	r18, 0x01	; 1
    2144:	16 c0       	rjmp	.+44     	; 0x2172 <vfprintf+0xb0>
    2146:	83 2d       	mov	r24, r3
    2148:	82 60       	ori	r24, 0x02	; 2
    214a:	38 2e       	mov	r3, r24
    214c:	e3 2d       	mov	r30, r3
    214e:	e4 60       	ori	r30, 0x04	; 4
    2150:	3e 2e       	mov	r3, r30
    2152:	2a c0       	rjmp	.+84     	; 0x21a8 <vfprintf+0xe6>
    2154:	f3 2d       	mov	r31, r3
    2156:	f8 60       	ori	r31, 0x08	; 8
    2158:	1d c0       	rjmp	.+58     	; 0x2194 <vfprintf+0xd2>
    215a:	37 fc       	sbrc	r3, 7
    215c:	2d c0       	rjmp	.+90     	; 0x21b8 <vfprintf+0xf6>
    215e:	20 ed       	ldi	r18, 0xD0	; 208
    2160:	28 0f       	add	r18, r24
    2162:	2a 30       	cpi	r18, 0x0A	; 10
    2164:	40 f0       	brcs	.+16     	; 0x2176 <vfprintf+0xb4>
    2166:	8e 32       	cpi	r24, 0x2E	; 46
    2168:	b9 f4       	brne	.+46     	; 0x2198 <vfprintf+0xd6>
    216a:	36 fc       	sbrc	r3, 6
    216c:	81 c1       	rjmp	.+770    	; 0x2470 <vfprintf+0x3ae>
    216e:	23 2d       	mov	r18, r3
    2170:	20 64       	ori	r18, 0x40	; 64
    2172:	32 2e       	mov	r3, r18
    2174:	19 c0       	rjmp	.+50     	; 0x21a8 <vfprintf+0xe6>
    2176:	36 fe       	sbrs	r3, 6
    2178:	06 c0       	rjmp	.+12     	; 0x2186 <vfprintf+0xc4>
    217a:	8a e0       	ldi	r24, 0x0A	; 10
    217c:	98 9e       	mul	r9, r24
    217e:	20 0d       	add	r18, r0
    2180:	11 24       	eor	r1, r1
    2182:	92 2e       	mov	r9, r18
    2184:	11 c0       	rjmp	.+34     	; 0x21a8 <vfprintf+0xe6>
    2186:	ea e0       	ldi	r30, 0x0A	; 10
    2188:	2e 9e       	mul	r2, r30
    218a:	20 0d       	add	r18, r0
    218c:	11 24       	eor	r1, r1
    218e:	22 2e       	mov	r2, r18
    2190:	f3 2d       	mov	r31, r3
    2192:	f0 62       	ori	r31, 0x20	; 32
    2194:	3f 2e       	mov	r3, r31
    2196:	08 c0       	rjmp	.+16     	; 0x21a8 <vfprintf+0xe6>
    2198:	8c 36       	cpi	r24, 0x6C	; 108
    219a:	21 f4       	brne	.+8      	; 0x21a4 <vfprintf+0xe2>
    219c:	83 2d       	mov	r24, r3
    219e:	80 68       	ori	r24, 0x80	; 128
    21a0:	38 2e       	mov	r3, r24
    21a2:	02 c0       	rjmp	.+4      	; 0x21a8 <vfprintf+0xe6>
    21a4:	88 36       	cpi	r24, 0x68	; 104
    21a6:	41 f4       	brne	.+16     	; 0x21b8 <vfprintf+0xf6>
    21a8:	f7 01       	movw	r30, r14
    21aa:	93 fd       	sbrc	r25, 3
    21ac:	85 91       	lpm	r24, Z+
    21ae:	93 ff       	sbrs	r25, 3
    21b0:	81 91       	ld	r24, Z+
    21b2:	7f 01       	movw	r14, r30
    21b4:	81 11       	cpse	r24, r1
    21b6:	b3 cf       	rjmp	.-154    	; 0x211e <vfprintf+0x5c>
    21b8:	98 2f       	mov	r25, r24
    21ba:	9f 7d       	andi	r25, 0xDF	; 223
    21bc:	95 54       	subi	r25, 0x45	; 69
    21be:	93 30       	cpi	r25, 0x03	; 3
    21c0:	28 f4       	brcc	.+10     	; 0x21cc <vfprintf+0x10a>
    21c2:	0c 5f       	subi	r16, 0xFC	; 252
    21c4:	1f 4f       	sbci	r17, 0xFF	; 255
    21c6:	9f e3       	ldi	r25, 0x3F	; 63
    21c8:	99 83       	std	Y+1, r25	; 0x01
    21ca:	0d c0       	rjmp	.+26     	; 0x21e6 <vfprintf+0x124>
    21cc:	83 36       	cpi	r24, 0x63	; 99
    21ce:	31 f0       	breq	.+12     	; 0x21dc <vfprintf+0x11a>
    21d0:	83 37       	cpi	r24, 0x73	; 115
    21d2:	71 f0       	breq	.+28     	; 0x21f0 <vfprintf+0x12e>
    21d4:	83 35       	cpi	r24, 0x53	; 83
    21d6:	09 f0       	breq	.+2      	; 0x21da <vfprintf+0x118>
    21d8:	59 c0       	rjmp	.+178    	; 0x228c <vfprintf+0x1ca>
    21da:	21 c0       	rjmp	.+66     	; 0x221e <vfprintf+0x15c>
    21dc:	f8 01       	movw	r30, r16
    21de:	80 81       	ld	r24, Z
    21e0:	89 83       	std	Y+1, r24	; 0x01
    21e2:	0e 5f       	subi	r16, 0xFE	; 254
    21e4:	1f 4f       	sbci	r17, 0xFF	; 255
    21e6:	88 24       	eor	r8, r8
    21e8:	83 94       	inc	r8
    21ea:	91 2c       	mov	r9, r1
    21ec:	53 01       	movw	r10, r6
    21ee:	13 c0       	rjmp	.+38     	; 0x2216 <vfprintf+0x154>
    21f0:	28 01       	movw	r4, r16
    21f2:	f2 e0       	ldi	r31, 0x02	; 2
    21f4:	4f 0e       	add	r4, r31
    21f6:	51 1c       	adc	r5, r1
    21f8:	f8 01       	movw	r30, r16
    21fa:	a0 80       	ld	r10, Z
    21fc:	b1 80       	ldd	r11, Z+1	; 0x01
    21fe:	36 fe       	sbrs	r3, 6
    2200:	03 c0       	rjmp	.+6      	; 0x2208 <vfprintf+0x146>
    2202:	69 2d       	mov	r22, r9
    2204:	70 e0       	ldi	r23, 0x00	; 0
    2206:	02 c0       	rjmp	.+4      	; 0x220c <vfprintf+0x14a>
    2208:	6f ef       	ldi	r22, 0xFF	; 255
    220a:	7f ef       	ldi	r23, 0xFF	; 255
    220c:	c5 01       	movw	r24, r10
    220e:	0e 94 4d 12 	call	0x249a	; 0x249a <strnlen>
    2212:	4c 01       	movw	r8, r24
    2214:	82 01       	movw	r16, r4
    2216:	f3 2d       	mov	r31, r3
    2218:	ff 77       	andi	r31, 0x7F	; 127
    221a:	3f 2e       	mov	r3, r31
    221c:	16 c0       	rjmp	.+44     	; 0x224a <vfprintf+0x188>
    221e:	28 01       	movw	r4, r16
    2220:	22 e0       	ldi	r18, 0x02	; 2
    2222:	42 0e       	add	r4, r18
    2224:	51 1c       	adc	r5, r1
    2226:	f8 01       	movw	r30, r16
    2228:	a0 80       	ld	r10, Z
    222a:	b1 80       	ldd	r11, Z+1	; 0x01
    222c:	36 fe       	sbrs	r3, 6
    222e:	03 c0       	rjmp	.+6      	; 0x2236 <vfprintf+0x174>
    2230:	69 2d       	mov	r22, r9
    2232:	70 e0       	ldi	r23, 0x00	; 0
    2234:	02 c0       	rjmp	.+4      	; 0x223a <vfprintf+0x178>
    2236:	6f ef       	ldi	r22, 0xFF	; 255
    2238:	7f ef       	ldi	r23, 0xFF	; 255
    223a:	c5 01       	movw	r24, r10
    223c:	0e 94 42 12 	call	0x2484	; 0x2484 <strnlen_P>
    2240:	4c 01       	movw	r8, r24
    2242:	f3 2d       	mov	r31, r3
    2244:	f0 68       	ori	r31, 0x80	; 128
    2246:	3f 2e       	mov	r3, r31
    2248:	82 01       	movw	r16, r4
    224a:	33 fc       	sbrc	r3, 3
    224c:	1b c0       	rjmp	.+54     	; 0x2284 <vfprintf+0x1c2>
    224e:	82 2d       	mov	r24, r2
    2250:	90 e0       	ldi	r25, 0x00	; 0
    2252:	88 16       	cp	r8, r24
    2254:	99 06       	cpc	r9, r25
    2256:	b0 f4       	brcc	.+44     	; 0x2284 <vfprintf+0x1c2>
    2258:	b6 01       	movw	r22, r12
    225a:	80 e2       	ldi	r24, 0x20	; 32
    225c:	90 e0       	ldi	r25, 0x00	; 0
    225e:	0e 94 58 12 	call	0x24b0	; 0x24b0 <fputc>
    2262:	2a 94       	dec	r2
    2264:	f4 cf       	rjmp	.-24     	; 0x224e <vfprintf+0x18c>
    2266:	f5 01       	movw	r30, r10
    2268:	37 fc       	sbrc	r3, 7
    226a:	85 91       	lpm	r24, Z+
    226c:	37 fe       	sbrs	r3, 7
    226e:	81 91       	ld	r24, Z+
    2270:	5f 01       	movw	r10, r30
    2272:	b6 01       	movw	r22, r12
    2274:	90 e0       	ldi	r25, 0x00	; 0
    2276:	0e 94 58 12 	call	0x24b0	; 0x24b0 <fputc>
    227a:	21 10       	cpse	r2, r1
    227c:	2a 94       	dec	r2
    227e:	21 e0       	ldi	r18, 0x01	; 1
    2280:	82 1a       	sub	r8, r18
    2282:	91 08       	sbc	r9, r1
    2284:	81 14       	cp	r8, r1
    2286:	91 04       	cpc	r9, r1
    2288:	71 f7       	brne	.-36     	; 0x2266 <vfprintf+0x1a4>
    228a:	e8 c0       	rjmp	.+464    	; 0x245c <vfprintf+0x39a>
    228c:	84 36       	cpi	r24, 0x64	; 100
    228e:	11 f0       	breq	.+4      	; 0x2294 <vfprintf+0x1d2>
    2290:	89 36       	cpi	r24, 0x69	; 105
    2292:	41 f5       	brne	.+80     	; 0x22e4 <vfprintf+0x222>
    2294:	f8 01       	movw	r30, r16
    2296:	37 fe       	sbrs	r3, 7
    2298:	07 c0       	rjmp	.+14     	; 0x22a8 <vfprintf+0x1e6>
    229a:	60 81       	ld	r22, Z
    229c:	71 81       	ldd	r23, Z+1	; 0x01
    229e:	82 81       	ldd	r24, Z+2	; 0x02
    22a0:	93 81       	ldd	r25, Z+3	; 0x03
    22a2:	0c 5f       	subi	r16, 0xFC	; 252
    22a4:	1f 4f       	sbci	r17, 0xFF	; 255
    22a6:	08 c0       	rjmp	.+16     	; 0x22b8 <vfprintf+0x1f6>
    22a8:	60 81       	ld	r22, Z
    22aa:	71 81       	ldd	r23, Z+1	; 0x01
    22ac:	07 2e       	mov	r0, r23
    22ae:	00 0c       	add	r0, r0
    22b0:	88 0b       	sbc	r24, r24
    22b2:	99 0b       	sbc	r25, r25
    22b4:	0e 5f       	subi	r16, 0xFE	; 254
    22b6:	1f 4f       	sbci	r17, 0xFF	; 255
    22b8:	f3 2d       	mov	r31, r3
    22ba:	ff 76       	andi	r31, 0x6F	; 111
    22bc:	3f 2e       	mov	r3, r31
    22be:	97 ff       	sbrs	r25, 7
    22c0:	09 c0       	rjmp	.+18     	; 0x22d4 <vfprintf+0x212>
    22c2:	90 95       	com	r25
    22c4:	80 95       	com	r24
    22c6:	70 95       	com	r23
    22c8:	61 95       	neg	r22
    22ca:	7f 4f       	sbci	r23, 0xFF	; 255
    22cc:	8f 4f       	sbci	r24, 0xFF	; 255
    22ce:	9f 4f       	sbci	r25, 0xFF	; 255
    22d0:	f0 68       	ori	r31, 0x80	; 128
    22d2:	3f 2e       	mov	r3, r31
    22d4:	2a e0       	ldi	r18, 0x0A	; 10
    22d6:	30 e0       	ldi	r19, 0x00	; 0
    22d8:	a3 01       	movw	r20, r6
    22da:	0e 94 94 12 	call	0x2528	; 0x2528 <__ultoa_invert>
    22de:	88 2e       	mov	r8, r24
    22e0:	86 18       	sub	r8, r6
    22e2:	45 c0       	rjmp	.+138    	; 0x236e <vfprintf+0x2ac>
    22e4:	85 37       	cpi	r24, 0x75	; 117
    22e6:	31 f4       	brne	.+12     	; 0x22f4 <vfprintf+0x232>
    22e8:	23 2d       	mov	r18, r3
    22ea:	2f 7e       	andi	r18, 0xEF	; 239
    22ec:	b2 2e       	mov	r11, r18
    22ee:	2a e0       	ldi	r18, 0x0A	; 10
    22f0:	30 e0       	ldi	r19, 0x00	; 0
    22f2:	25 c0       	rjmp	.+74     	; 0x233e <vfprintf+0x27c>
    22f4:	93 2d       	mov	r25, r3
    22f6:	99 7f       	andi	r25, 0xF9	; 249
    22f8:	b9 2e       	mov	r11, r25
    22fa:	8f 36       	cpi	r24, 0x6F	; 111
    22fc:	c1 f0       	breq	.+48     	; 0x232e <vfprintf+0x26c>
    22fe:	18 f4       	brcc	.+6      	; 0x2306 <vfprintf+0x244>
    2300:	88 35       	cpi	r24, 0x58	; 88
    2302:	79 f0       	breq	.+30     	; 0x2322 <vfprintf+0x260>
    2304:	b5 c0       	rjmp	.+362    	; 0x2470 <vfprintf+0x3ae>
    2306:	80 37       	cpi	r24, 0x70	; 112
    2308:	19 f0       	breq	.+6      	; 0x2310 <vfprintf+0x24e>
    230a:	88 37       	cpi	r24, 0x78	; 120
    230c:	21 f0       	breq	.+8      	; 0x2316 <vfprintf+0x254>
    230e:	b0 c0       	rjmp	.+352    	; 0x2470 <vfprintf+0x3ae>
    2310:	e9 2f       	mov	r30, r25
    2312:	e0 61       	ori	r30, 0x10	; 16
    2314:	be 2e       	mov	r11, r30
    2316:	b4 fe       	sbrs	r11, 4
    2318:	0d c0       	rjmp	.+26     	; 0x2334 <vfprintf+0x272>
    231a:	fb 2d       	mov	r31, r11
    231c:	f4 60       	ori	r31, 0x04	; 4
    231e:	bf 2e       	mov	r11, r31
    2320:	09 c0       	rjmp	.+18     	; 0x2334 <vfprintf+0x272>
    2322:	34 fe       	sbrs	r3, 4
    2324:	0a c0       	rjmp	.+20     	; 0x233a <vfprintf+0x278>
    2326:	29 2f       	mov	r18, r25
    2328:	26 60       	ori	r18, 0x06	; 6
    232a:	b2 2e       	mov	r11, r18
    232c:	06 c0       	rjmp	.+12     	; 0x233a <vfprintf+0x278>
    232e:	28 e0       	ldi	r18, 0x08	; 8
    2330:	30 e0       	ldi	r19, 0x00	; 0
    2332:	05 c0       	rjmp	.+10     	; 0x233e <vfprintf+0x27c>
    2334:	20 e1       	ldi	r18, 0x10	; 16
    2336:	30 e0       	ldi	r19, 0x00	; 0
    2338:	02 c0       	rjmp	.+4      	; 0x233e <vfprintf+0x27c>
    233a:	20 e1       	ldi	r18, 0x10	; 16
    233c:	32 e0       	ldi	r19, 0x02	; 2
    233e:	f8 01       	movw	r30, r16
    2340:	b7 fe       	sbrs	r11, 7
    2342:	07 c0       	rjmp	.+14     	; 0x2352 <vfprintf+0x290>
    2344:	60 81       	ld	r22, Z
    2346:	71 81       	ldd	r23, Z+1	; 0x01
    2348:	82 81       	ldd	r24, Z+2	; 0x02
    234a:	93 81       	ldd	r25, Z+3	; 0x03
    234c:	0c 5f       	subi	r16, 0xFC	; 252
    234e:	1f 4f       	sbci	r17, 0xFF	; 255
    2350:	06 c0       	rjmp	.+12     	; 0x235e <vfprintf+0x29c>
    2352:	60 81       	ld	r22, Z
    2354:	71 81       	ldd	r23, Z+1	; 0x01
    2356:	80 e0       	ldi	r24, 0x00	; 0
    2358:	90 e0       	ldi	r25, 0x00	; 0
    235a:	0e 5f       	subi	r16, 0xFE	; 254
    235c:	1f 4f       	sbci	r17, 0xFF	; 255
    235e:	a3 01       	movw	r20, r6
    2360:	0e 94 94 12 	call	0x2528	; 0x2528 <__ultoa_invert>
    2364:	88 2e       	mov	r8, r24
    2366:	86 18       	sub	r8, r6
    2368:	fb 2d       	mov	r31, r11
    236a:	ff 77       	andi	r31, 0x7F	; 127
    236c:	3f 2e       	mov	r3, r31
    236e:	36 fe       	sbrs	r3, 6
    2370:	0d c0       	rjmp	.+26     	; 0x238c <vfprintf+0x2ca>
    2372:	23 2d       	mov	r18, r3
    2374:	2e 7f       	andi	r18, 0xFE	; 254
    2376:	a2 2e       	mov	r10, r18
    2378:	89 14       	cp	r8, r9
    237a:	58 f4       	brcc	.+22     	; 0x2392 <vfprintf+0x2d0>
    237c:	34 fe       	sbrs	r3, 4
    237e:	0b c0       	rjmp	.+22     	; 0x2396 <vfprintf+0x2d4>
    2380:	32 fc       	sbrc	r3, 2
    2382:	09 c0       	rjmp	.+18     	; 0x2396 <vfprintf+0x2d4>
    2384:	83 2d       	mov	r24, r3
    2386:	8e 7e       	andi	r24, 0xEE	; 238
    2388:	a8 2e       	mov	r10, r24
    238a:	05 c0       	rjmp	.+10     	; 0x2396 <vfprintf+0x2d4>
    238c:	b8 2c       	mov	r11, r8
    238e:	a3 2c       	mov	r10, r3
    2390:	03 c0       	rjmp	.+6      	; 0x2398 <vfprintf+0x2d6>
    2392:	b8 2c       	mov	r11, r8
    2394:	01 c0       	rjmp	.+2      	; 0x2398 <vfprintf+0x2d6>
    2396:	b9 2c       	mov	r11, r9
    2398:	a4 fe       	sbrs	r10, 4
    239a:	0f c0       	rjmp	.+30     	; 0x23ba <vfprintf+0x2f8>
    239c:	fe 01       	movw	r30, r28
    239e:	e8 0d       	add	r30, r8
    23a0:	f1 1d       	adc	r31, r1
    23a2:	80 81       	ld	r24, Z
    23a4:	80 33       	cpi	r24, 0x30	; 48
    23a6:	21 f4       	brne	.+8      	; 0x23b0 <vfprintf+0x2ee>
    23a8:	9a 2d       	mov	r25, r10
    23aa:	99 7e       	andi	r25, 0xE9	; 233
    23ac:	a9 2e       	mov	r10, r25
    23ae:	09 c0       	rjmp	.+18     	; 0x23c2 <vfprintf+0x300>
    23b0:	a2 fe       	sbrs	r10, 2
    23b2:	06 c0       	rjmp	.+12     	; 0x23c0 <vfprintf+0x2fe>
    23b4:	b3 94       	inc	r11
    23b6:	b3 94       	inc	r11
    23b8:	04 c0       	rjmp	.+8      	; 0x23c2 <vfprintf+0x300>
    23ba:	8a 2d       	mov	r24, r10
    23bc:	86 78       	andi	r24, 0x86	; 134
    23be:	09 f0       	breq	.+2      	; 0x23c2 <vfprintf+0x300>
    23c0:	b3 94       	inc	r11
    23c2:	a3 fc       	sbrc	r10, 3
    23c4:	11 c0       	rjmp	.+34     	; 0x23e8 <vfprintf+0x326>
    23c6:	a0 fe       	sbrs	r10, 0
    23c8:	06 c0       	rjmp	.+12     	; 0x23d6 <vfprintf+0x314>
    23ca:	b2 14       	cp	r11, r2
    23cc:	88 f4       	brcc	.+34     	; 0x23f0 <vfprintf+0x32e>
    23ce:	28 0c       	add	r2, r8
    23d0:	92 2c       	mov	r9, r2
    23d2:	9b 18       	sub	r9, r11
    23d4:	0e c0       	rjmp	.+28     	; 0x23f2 <vfprintf+0x330>
    23d6:	b2 14       	cp	r11, r2
    23d8:	60 f4       	brcc	.+24     	; 0x23f2 <vfprintf+0x330>
    23da:	b6 01       	movw	r22, r12
    23dc:	80 e2       	ldi	r24, 0x20	; 32
    23de:	90 e0       	ldi	r25, 0x00	; 0
    23e0:	0e 94 58 12 	call	0x24b0	; 0x24b0 <fputc>
    23e4:	b3 94       	inc	r11
    23e6:	f7 cf       	rjmp	.-18     	; 0x23d6 <vfprintf+0x314>
    23e8:	b2 14       	cp	r11, r2
    23ea:	18 f4       	brcc	.+6      	; 0x23f2 <vfprintf+0x330>
    23ec:	2b 18       	sub	r2, r11
    23ee:	02 c0       	rjmp	.+4      	; 0x23f4 <vfprintf+0x332>
    23f0:	98 2c       	mov	r9, r8
    23f2:	21 2c       	mov	r2, r1
    23f4:	a4 fe       	sbrs	r10, 4
    23f6:	10 c0       	rjmp	.+32     	; 0x2418 <vfprintf+0x356>
    23f8:	b6 01       	movw	r22, r12
    23fa:	80 e3       	ldi	r24, 0x30	; 48
    23fc:	90 e0       	ldi	r25, 0x00	; 0
    23fe:	0e 94 58 12 	call	0x24b0	; 0x24b0 <fputc>
    2402:	a2 fe       	sbrs	r10, 2
    2404:	17 c0       	rjmp	.+46     	; 0x2434 <vfprintf+0x372>
    2406:	a1 fc       	sbrc	r10, 1
    2408:	03 c0       	rjmp	.+6      	; 0x2410 <vfprintf+0x34e>
    240a:	88 e7       	ldi	r24, 0x78	; 120
    240c:	90 e0       	ldi	r25, 0x00	; 0
    240e:	02 c0       	rjmp	.+4      	; 0x2414 <vfprintf+0x352>
    2410:	88 e5       	ldi	r24, 0x58	; 88
    2412:	90 e0       	ldi	r25, 0x00	; 0
    2414:	b6 01       	movw	r22, r12
    2416:	0c c0       	rjmp	.+24     	; 0x2430 <vfprintf+0x36e>
    2418:	8a 2d       	mov	r24, r10
    241a:	86 78       	andi	r24, 0x86	; 134
    241c:	59 f0       	breq	.+22     	; 0x2434 <vfprintf+0x372>
    241e:	a1 fe       	sbrs	r10, 1
    2420:	02 c0       	rjmp	.+4      	; 0x2426 <vfprintf+0x364>
    2422:	8b e2       	ldi	r24, 0x2B	; 43
    2424:	01 c0       	rjmp	.+2      	; 0x2428 <vfprintf+0x366>
    2426:	80 e2       	ldi	r24, 0x20	; 32
    2428:	a7 fc       	sbrc	r10, 7
    242a:	8d e2       	ldi	r24, 0x2D	; 45
    242c:	b6 01       	movw	r22, r12
    242e:	90 e0       	ldi	r25, 0x00	; 0
    2430:	0e 94 58 12 	call	0x24b0	; 0x24b0 <fputc>
    2434:	89 14       	cp	r8, r9
    2436:	38 f4       	brcc	.+14     	; 0x2446 <vfprintf+0x384>
    2438:	b6 01       	movw	r22, r12
    243a:	80 e3       	ldi	r24, 0x30	; 48
    243c:	90 e0       	ldi	r25, 0x00	; 0
    243e:	0e 94 58 12 	call	0x24b0	; 0x24b0 <fputc>
    2442:	9a 94       	dec	r9
    2444:	f7 cf       	rjmp	.-18     	; 0x2434 <vfprintf+0x372>
    2446:	8a 94       	dec	r8
    2448:	f3 01       	movw	r30, r6
    244a:	e8 0d       	add	r30, r8
    244c:	f1 1d       	adc	r31, r1
    244e:	80 81       	ld	r24, Z
    2450:	b6 01       	movw	r22, r12
    2452:	90 e0       	ldi	r25, 0x00	; 0
    2454:	0e 94 58 12 	call	0x24b0	; 0x24b0 <fputc>
    2458:	81 10       	cpse	r8, r1
    245a:	f5 cf       	rjmp	.-22     	; 0x2446 <vfprintf+0x384>
    245c:	22 20       	and	r2, r2
    245e:	09 f4       	brne	.+2      	; 0x2462 <vfprintf+0x3a0>
    2460:	42 ce       	rjmp	.-892    	; 0x20e6 <vfprintf+0x24>
    2462:	b6 01       	movw	r22, r12
    2464:	80 e2       	ldi	r24, 0x20	; 32
    2466:	90 e0       	ldi	r25, 0x00	; 0
    2468:	0e 94 58 12 	call	0x24b0	; 0x24b0 <fputc>
    246c:	2a 94       	dec	r2
    246e:	f6 cf       	rjmp	.-20     	; 0x245c <vfprintf+0x39a>
    2470:	f6 01       	movw	r30, r12
    2472:	86 81       	ldd	r24, Z+6	; 0x06
    2474:	97 81       	ldd	r25, Z+7	; 0x07
    2476:	02 c0       	rjmp	.+4      	; 0x247c <vfprintf+0x3ba>
    2478:	8f ef       	ldi	r24, 0xFF	; 255
    247a:	9f ef       	ldi	r25, 0xFF	; 255
    247c:	2b 96       	adiw	r28, 0x0b	; 11
    247e:	e2 e1       	ldi	r30, 0x12	; 18
    2480:	0c 94 0e 13 	jmp	0x261c	; 0x261c <__epilogue_restores__>

00002484 <strnlen_P>:
    2484:	fc 01       	movw	r30, r24
    2486:	05 90       	lpm	r0, Z+
    2488:	61 50       	subi	r22, 0x01	; 1
    248a:	70 40       	sbci	r23, 0x00	; 0
    248c:	01 10       	cpse	r0, r1
    248e:	d8 f7       	brcc	.-10     	; 0x2486 <strnlen_P+0x2>
    2490:	80 95       	com	r24
    2492:	90 95       	com	r25
    2494:	8e 0f       	add	r24, r30
    2496:	9f 1f       	adc	r25, r31
    2498:	08 95       	ret

0000249a <strnlen>:
    249a:	fc 01       	movw	r30, r24
    249c:	61 50       	subi	r22, 0x01	; 1
    249e:	70 40       	sbci	r23, 0x00	; 0
    24a0:	01 90       	ld	r0, Z+
    24a2:	01 10       	cpse	r0, r1
    24a4:	d8 f7       	brcc	.-10     	; 0x249c <strnlen+0x2>
    24a6:	80 95       	com	r24
    24a8:	90 95       	com	r25
    24aa:	8e 0f       	add	r24, r30
    24ac:	9f 1f       	adc	r25, r31
    24ae:	08 95       	ret

000024b0 <fputc>:
    24b0:	0f 93       	push	r16
    24b2:	1f 93       	push	r17
    24b4:	cf 93       	push	r28
    24b6:	df 93       	push	r29
    24b8:	fb 01       	movw	r30, r22
    24ba:	23 81       	ldd	r18, Z+3	; 0x03
    24bc:	21 fd       	sbrc	r18, 1
    24be:	03 c0       	rjmp	.+6      	; 0x24c6 <fputc+0x16>
    24c0:	8f ef       	ldi	r24, 0xFF	; 255
    24c2:	9f ef       	ldi	r25, 0xFF	; 255
    24c4:	2c c0       	rjmp	.+88     	; 0x251e <fputc+0x6e>
    24c6:	22 ff       	sbrs	r18, 2
    24c8:	16 c0       	rjmp	.+44     	; 0x24f6 <fputc+0x46>
    24ca:	46 81       	ldd	r20, Z+6	; 0x06
    24cc:	57 81       	ldd	r21, Z+7	; 0x07
    24ce:	24 81       	ldd	r18, Z+4	; 0x04
    24d0:	35 81       	ldd	r19, Z+5	; 0x05
    24d2:	42 17       	cp	r20, r18
    24d4:	53 07       	cpc	r21, r19
    24d6:	44 f4       	brge	.+16     	; 0x24e8 <fputc+0x38>
    24d8:	a0 81       	ld	r26, Z
    24da:	b1 81       	ldd	r27, Z+1	; 0x01
    24dc:	9d 01       	movw	r18, r26
    24de:	2f 5f       	subi	r18, 0xFF	; 255
    24e0:	3f 4f       	sbci	r19, 0xFF	; 255
    24e2:	31 83       	std	Z+1, r19	; 0x01
    24e4:	20 83       	st	Z, r18
    24e6:	8c 93       	st	X, r24
    24e8:	26 81       	ldd	r18, Z+6	; 0x06
    24ea:	37 81       	ldd	r19, Z+7	; 0x07
    24ec:	2f 5f       	subi	r18, 0xFF	; 255
    24ee:	3f 4f       	sbci	r19, 0xFF	; 255
    24f0:	37 83       	std	Z+7, r19	; 0x07
    24f2:	26 83       	std	Z+6, r18	; 0x06
    24f4:	14 c0       	rjmp	.+40     	; 0x251e <fputc+0x6e>
    24f6:	8b 01       	movw	r16, r22
    24f8:	ec 01       	movw	r28, r24
    24fa:	fb 01       	movw	r30, r22
    24fc:	00 84       	ldd	r0, Z+8	; 0x08
    24fe:	f1 85       	ldd	r31, Z+9	; 0x09
    2500:	e0 2d       	mov	r30, r0
    2502:	09 95       	icall
    2504:	89 2b       	or	r24, r25
    2506:	e1 f6       	brne	.-72     	; 0x24c0 <fputc+0x10>
    2508:	d8 01       	movw	r26, r16
    250a:	16 96       	adiw	r26, 0x06	; 6
    250c:	8d 91       	ld	r24, X+
    250e:	9c 91       	ld	r25, X
    2510:	17 97       	sbiw	r26, 0x07	; 7
    2512:	01 96       	adiw	r24, 0x01	; 1
    2514:	17 96       	adiw	r26, 0x07	; 7
    2516:	9c 93       	st	X, r25
    2518:	8e 93       	st	-X, r24
    251a:	16 97       	sbiw	r26, 0x06	; 6
    251c:	ce 01       	movw	r24, r28
    251e:	df 91       	pop	r29
    2520:	cf 91       	pop	r28
    2522:	1f 91       	pop	r17
    2524:	0f 91       	pop	r16
    2526:	08 95       	ret

00002528 <__ultoa_invert>:
    2528:	fa 01       	movw	r30, r20
    252a:	aa 27       	eor	r26, r26
    252c:	28 30       	cpi	r18, 0x08	; 8
    252e:	51 f1       	breq	.+84     	; 0x2584 <__ultoa_invert+0x5c>
    2530:	20 31       	cpi	r18, 0x10	; 16
    2532:	81 f1       	breq	.+96     	; 0x2594 <__ultoa_invert+0x6c>
    2534:	e8 94       	clt
    2536:	6f 93       	push	r22
    2538:	6e 7f       	andi	r22, 0xFE	; 254
    253a:	6e 5f       	subi	r22, 0xFE	; 254
    253c:	7f 4f       	sbci	r23, 0xFF	; 255
    253e:	8f 4f       	sbci	r24, 0xFF	; 255
    2540:	9f 4f       	sbci	r25, 0xFF	; 255
    2542:	af 4f       	sbci	r26, 0xFF	; 255
    2544:	b1 e0       	ldi	r27, 0x01	; 1
    2546:	3e d0       	rcall	.+124    	; 0x25c4 <__ultoa_invert+0x9c>
    2548:	b4 e0       	ldi	r27, 0x04	; 4
    254a:	3c d0       	rcall	.+120    	; 0x25c4 <__ultoa_invert+0x9c>
    254c:	67 0f       	add	r22, r23
    254e:	78 1f       	adc	r23, r24
    2550:	89 1f       	adc	r24, r25
    2552:	9a 1f       	adc	r25, r26
    2554:	a1 1d       	adc	r26, r1
    2556:	68 0f       	add	r22, r24
    2558:	79 1f       	adc	r23, r25
    255a:	8a 1f       	adc	r24, r26
    255c:	91 1d       	adc	r25, r1
    255e:	a1 1d       	adc	r26, r1
    2560:	6a 0f       	add	r22, r26
    2562:	71 1d       	adc	r23, r1
    2564:	81 1d       	adc	r24, r1
    2566:	91 1d       	adc	r25, r1
    2568:	a1 1d       	adc	r26, r1
    256a:	20 d0       	rcall	.+64     	; 0x25ac <__ultoa_invert+0x84>
    256c:	09 f4       	brne	.+2      	; 0x2570 <__ultoa_invert+0x48>
    256e:	68 94       	set
    2570:	3f 91       	pop	r19
    2572:	2a e0       	ldi	r18, 0x0A	; 10
    2574:	26 9f       	mul	r18, r22
    2576:	11 24       	eor	r1, r1
    2578:	30 19       	sub	r19, r0
    257a:	30 5d       	subi	r19, 0xD0	; 208
    257c:	31 93       	st	Z+, r19
    257e:	de f6       	brtc	.-74     	; 0x2536 <__ultoa_invert+0xe>
    2580:	cf 01       	movw	r24, r30
    2582:	08 95       	ret
    2584:	46 2f       	mov	r20, r22
    2586:	47 70       	andi	r20, 0x07	; 7
    2588:	40 5d       	subi	r20, 0xD0	; 208
    258a:	41 93       	st	Z+, r20
    258c:	b3 e0       	ldi	r27, 0x03	; 3
    258e:	0f d0       	rcall	.+30     	; 0x25ae <__ultoa_invert+0x86>
    2590:	c9 f7       	brne	.-14     	; 0x2584 <__ultoa_invert+0x5c>
    2592:	f6 cf       	rjmp	.-20     	; 0x2580 <__ultoa_invert+0x58>
    2594:	46 2f       	mov	r20, r22
    2596:	4f 70       	andi	r20, 0x0F	; 15
    2598:	40 5d       	subi	r20, 0xD0	; 208
    259a:	4a 33       	cpi	r20, 0x3A	; 58
    259c:	18 f0       	brcs	.+6      	; 0x25a4 <__ultoa_invert+0x7c>
    259e:	49 5d       	subi	r20, 0xD9	; 217
    25a0:	31 fd       	sbrc	r19, 1
    25a2:	40 52       	subi	r20, 0x20	; 32
    25a4:	41 93       	st	Z+, r20
    25a6:	02 d0       	rcall	.+4      	; 0x25ac <__ultoa_invert+0x84>
    25a8:	a9 f7       	brne	.-22     	; 0x2594 <__ultoa_invert+0x6c>
    25aa:	ea cf       	rjmp	.-44     	; 0x2580 <__ultoa_invert+0x58>
    25ac:	b4 e0       	ldi	r27, 0x04	; 4
    25ae:	a6 95       	lsr	r26
    25b0:	97 95       	ror	r25
    25b2:	87 95       	ror	r24
    25b4:	77 95       	ror	r23
    25b6:	67 95       	ror	r22
    25b8:	ba 95       	dec	r27
    25ba:	c9 f7       	brne	.-14     	; 0x25ae <__ultoa_invert+0x86>
    25bc:	00 97       	sbiw	r24, 0x00	; 0
    25be:	61 05       	cpc	r22, r1
    25c0:	71 05       	cpc	r23, r1
    25c2:	08 95       	ret
    25c4:	9b 01       	movw	r18, r22
    25c6:	ac 01       	movw	r20, r24
    25c8:	0a 2e       	mov	r0, r26
    25ca:	06 94       	lsr	r0
    25cc:	57 95       	ror	r21
    25ce:	47 95       	ror	r20
    25d0:	37 95       	ror	r19
    25d2:	27 95       	ror	r18
    25d4:	ba 95       	dec	r27
    25d6:	c9 f7       	brne	.-14     	; 0x25ca <__ultoa_invert+0xa2>
    25d8:	62 0f       	add	r22, r18
    25da:	73 1f       	adc	r23, r19
    25dc:	84 1f       	adc	r24, r20
    25de:	95 1f       	adc	r25, r21
    25e0:	a0 1d       	adc	r26, r0
    25e2:	08 95       	ret

000025e4 <__prologue_saves__>:
    25e4:	2f 92       	push	r2
    25e6:	3f 92       	push	r3
    25e8:	4f 92       	push	r4
    25ea:	5f 92       	push	r5
    25ec:	6f 92       	push	r6
    25ee:	7f 92       	push	r7
    25f0:	8f 92       	push	r8
    25f2:	9f 92       	push	r9
    25f4:	af 92       	push	r10
    25f6:	bf 92       	push	r11
    25f8:	cf 92       	push	r12
    25fa:	df 92       	push	r13
    25fc:	ef 92       	push	r14
    25fe:	ff 92       	push	r15
    2600:	0f 93       	push	r16
    2602:	1f 93       	push	r17
    2604:	cf 93       	push	r28
    2606:	df 93       	push	r29
    2608:	cd b7       	in	r28, 0x3d	; 61
    260a:	de b7       	in	r29, 0x3e	; 62
    260c:	ca 1b       	sub	r28, r26
    260e:	db 0b       	sbc	r29, r27
    2610:	0f b6       	in	r0, 0x3f	; 63
    2612:	f8 94       	cli
    2614:	de bf       	out	0x3e, r29	; 62
    2616:	0f be       	out	0x3f, r0	; 63
    2618:	cd bf       	out	0x3d, r28	; 61
    261a:	09 94       	ijmp

0000261c <__epilogue_restores__>:
    261c:	2a 88       	ldd	r2, Y+18	; 0x12
    261e:	39 88       	ldd	r3, Y+17	; 0x11
    2620:	48 88       	ldd	r4, Y+16	; 0x10
    2622:	5f 84       	ldd	r5, Y+15	; 0x0f
    2624:	6e 84       	ldd	r6, Y+14	; 0x0e
    2626:	7d 84       	ldd	r7, Y+13	; 0x0d
    2628:	8c 84       	ldd	r8, Y+12	; 0x0c
    262a:	9b 84       	ldd	r9, Y+11	; 0x0b
    262c:	aa 84       	ldd	r10, Y+10	; 0x0a
    262e:	b9 84       	ldd	r11, Y+9	; 0x09
    2630:	c8 84       	ldd	r12, Y+8	; 0x08
    2632:	df 80       	ldd	r13, Y+7	; 0x07
    2634:	ee 80       	ldd	r14, Y+6	; 0x06
    2636:	fd 80       	ldd	r15, Y+5	; 0x05
    2638:	0c 81       	ldd	r16, Y+4	; 0x04
    263a:	1b 81       	ldd	r17, Y+3	; 0x03
    263c:	aa 81       	ldd	r26, Y+2	; 0x02
    263e:	b9 81       	ldd	r27, Y+1	; 0x01
    2640:	ce 0f       	add	r28, r30
    2642:	d1 1d       	adc	r29, r1
    2644:	0f b6       	in	r0, 0x3f	; 63
    2646:	f8 94       	cli
    2648:	de bf       	out	0x3e, r29	; 62
    264a:	0f be       	out	0x3f, r0	; 63
    264c:	cd bf       	out	0x3d, r28	; 61
    264e:	ed 01       	movw	r28, r26
    2650:	08 95       	ret

00002652 <_exit>:
    2652:	f8 94       	cli

00002654 <__stop_program>:
    2654:	ff cf       	rjmp	.-2      	; 0x2654 <__stop_program>
